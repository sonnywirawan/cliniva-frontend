{"version":3,"file":"src_app_admin_patients_patients_module_ts.js","mappings":"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","sources":["./src/app/admin/patients/add-patient/add-patient.component.ts","./src/app/admin/patients/add-patient/add-patient.component.html","./src/app/admin/patients/allpatients/allpatients.component.ts","./src/app/admin/patients/allpatients/allpatients.component.html","./src/app/admin/patients/allpatients/dialog/delete/delete.component.ts","./src/app/admin/patients/allpatients/dialog/delete/delete.component.html","./src/app/admin/patients/allpatients/dialog/form-dialog/form-dialog.component.ts","./src/app/admin/patients/allpatients/dialog/form-dialog/form-dialog.component.html","./src/app/admin/patients/allpatients/patient.model.ts","./src/app/admin/patients/allpatients/patient.service.ts","./src/app/admin/patients/edit-patient/edit-patient.component.ts","./src/app/admin/patients/edit-patient/edit-patient.component.html","./src/app/admin/patients/patient-profile/patient-profile.component.ts","./src/app/admin/patients/patient-profile/patient-profile.component.html","./src/app/admin/patients/patients-routing.module.ts","./src/app/admin/patients/patients.module.ts","./node_modules/@angular/material/fesm2015/toolbar.mjs"],"sourcesContent":["import { Component } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-add-patient\",\n  templateUrl: \"./add-patient.component.html\",\n  styleUrls: [\"./add-patient.component.sass\"],\n})\nexport class AddPatientComponent {\n  patientForm: FormGroup;\n  constructor(private fb: FormBuilder) {\n    this.patientForm = this.fb.group({\n      first: [\"\", [Validators.required, Validators.pattern(\"[a-zA-Z]+\")]],\n      last: [\"\"],\n      gender: [\"\", [Validators.required]],\n      mobile: [\"\"],\n      dob: [\"\", [Validators.required]],\n      age: [\"\"],\n      email: [\n        \"\",\n        [Validators.required, Validators.email, Validators.minLength(5)],\n      ],\n      maritalStatus: [\"\"],\n      address: [\"\"],\n      bGroup: [\"\"],\n      bPresure: [\"\"],\n      sugger: [\"\"],\n      injury: [\"\"],\n      uploadImg: [\"\"],\n    });\n  }\n  onSubmit() {\n    console.log(\"Form Value\", this.patientForm.value);\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Add Patient'\" [items]=\"['Patients']\" [active_item]=\"'Add Patient'\"></app-breadcrumb>\n    </div>\n    <div class=\"row clearfix\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"header\">\n            <h2><strong> Patient Information</strong></h2>\n\n          </div>\n          <div class=\"body\">\n            <form class=\"m-4\" [formGroup]=\"patientForm\" (ngSubmit)=\"onSubmit()\">\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\">\n                    <mat-label>First name</mat-label>\n                    <input matInput formControlName=\"first\" required>\n                    <mat-error *ngIf=\"patientForm.get('first').hasError('required')\">\n                      First name is required\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\">\n                    <mat-label>Last name</mat-label>\n                    <input matInput formControlName=\"last\">\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\">\n                    <mat-label>Gender</mat-label>\n                    <mat-select formControlName=\"gender\" required>\n                      <mat-option [value]=\"'Male'\">\n                        Male\n                      </mat-option>\n                      <mat-option [value]=\"'Female'\">\n                        Female\n                      </mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"patientForm.get('gender').hasError('required')\">\n                      Gender is required\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\">\n                    <mat-label>Mobile</mat-label>\n                    <input matInput formControlName=\"mobile\" type=\"number\">\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\">\n                    <mat-label>Date Of Birth</mat-label>\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"dob\" required>\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker></mat-datepicker>\n                    <mat-error *ngIf=\"patientForm.get('dob').hasError('required')\">\n                      Please select date\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\">\n                    <mat-label>Age</mat-label>\n                    <input matInput formControlName=\"age\" type=\"number\">\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\">\n                    <mat-label>Email</mat-label>\n                    <input matInput formControlName=\"email\" type=\"email\" required>\n                    <mat-error *ngIf=\"patientForm.get('email').hasError('email') && patientForm.get('email').touched\">\n                      Please enter a valid email address\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\">\n                    <mat-label>Marital Status</mat-label>\n                    <mat-select formControlName=\"maritalStatus\" required>\n                      <mat-option [value]=\"'1'\">\n                        Single\n                      </mat-option>\n                      <mat-option [value]=\"'2'\">\n                        Married\n                      </mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"patientForm.get('maritalStatus').hasError('required')\">\n                      Select Any\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\">\n                    <mat-label>Address</mat-label>\n                    <textarea matInput formControlName=\"address\"></textarea>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\">\n                    <mat-label>Blood Group</mat-label>\n                    <input matInput formControlName=\"bGroup\">\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\">\n                    <mat-label>Blood Presure</mat-label>\n                    <input matInput formControlName=\"bPresure\">\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\">\n                    <mat-label>Sugger</mat-label>\n                    <input matInput formControlName=\"sugger\">\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\">\n                    <mat-label>Injury/Condition</mat-label>\n                    <input matInput formControlName=\"injury\">\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\">\n                    <mat-label>Upload Image</mat-label>\n                    <ngx-mat-file-input formControlName=\"uploadImg\">\n                    </ngx-mat-file-input>\n                    <mat-icon matSuffix>face</mat-icon>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                  <button class=\"btn-space\" [disabled]=\"!patientForm.valid \" mat-raised-button\n                    color=\"primary\">Submit</button>\n                  <button type=\"button\" mat-button>Cancel</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\nimport { PatientService } from \"./patient.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { Patient } from \"./patient.model\";\nimport { DataSource } from \"@angular/cdk/collections\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { FormDialogComponent } from \"./dialog/form-dialog/form-dialog.component\";\nimport { DeleteComponent } from \"./dialog/delete/delete.component\";\nimport { BehaviorSubject, fromEvent, merge, Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { SelectionModel } from \"@angular/cdk/collections\";\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\n\n@Component({\n  selector: \"app-allpatients\",\n  templateUrl: \"./allpatients.component.html\",\n  styleUrls: [\"./allpatients.component.sass\"],\n})\nexport class AllpatientsComponent\n  extends UnsubscribeOnDestroyAdapter\n  implements OnInit\n{\n  displayedColumns = [\n    \"select\",\n    \"id\",\n    // \"email\",\n    // \"password\",\n    \"firstName\",\n    // \"last_name\",\n    // \"role\",\n    \"gender\",\n    \"mobile\",\n    \"dateOfBirth\",\n    // \"age\",\n    // \"marital_status\",\n    \"address\",\n    \"bloodGroup\",\n    // \"blood_pressure\",\n    \"sugger\",\n    // \"injury\",\n    \"img\",\n    \"actions\"\n  ];\n  exampleDatabase: PatientService | null;\n  dataSource: ExampleDataSource | null;\n  selection = new SelectionModel<Patient>(true, []);\n  index: number;\n  id: number;\n  patient: Patient | null;\n  constructor(\n    public httpClient: HttpClient,\n    public dialog: MatDialog,\n    public patientService: PatientService,\n    private snackBar: MatSnackBar\n  ) {\n    super();\n  }\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild(\"filter\", { static: true }) filter: ElementRef;\n  ngOnInit() {\n    this.loadData();\n  }\n  refresh() {\n    this.loadData();\n  }\n  addNew() {\n    let tempDirection;\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\n      tempDirection = \"rtl\";\n    } else {\n      tempDirection = \"ltr\";\n    }\n    const dialogRef = this.dialog.open(FormDialogComponent, {\n      data: {\n        patient: this.patient,\n        action: \"add\",\n      },\n      direction: tempDirection,\n    });\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        // After dialog is closed we're doing frontend updates\n        // For add we're just pushing a new row inside DataService\n        this.exampleDatabase.dataChange.value.unshift(\n          this.patientService.getDialogData()\n        );\n        this.refreshTable();\n        this.showNotification(\n          \"snackbar-success\",\n          \"Add Record Successfully...!!!\",\n          \"bottom\",\n          \"center\"\n        );\n      }\n    });\n  }\n  editCall(row) {\n    this.id = row.id;\n    let tempDirection;\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\n      tempDirection = \"rtl\";\n    } else {\n      tempDirection = \"ltr\";\n    }\n    const dialogRef = this.dialog.open(FormDialogComponent, {\n      data: {\n        patient: row,\n        action: \"edit\",\n      },\n      direction: tempDirection,\n    });\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        // When using an edit things are little different, firstly we find record inside DataService by id\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          (x: any) => x.id === this.id\n        );\n        // Then you update that record using data from dialogData (values you enetered)\n        this.exampleDatabase.dataChange.value[foundIndex] =\n          this.patientService.getDialogData();\n        // And lastly refresh table\n        this.refreshTable();\n        this.showNotification(\n          \"black\",\n          \"Edit Record Successfully...!!!\",\n          \"bottom\",\n          \"center\"\n        );\n      }\n    });\n  }\n  deleteItem(row) {\n    this.id = row.id;\n    let tempDirection;\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\n      tempDirection = \"rtl\";\n    } else {\n      tempDirection = \"ltr\";\n    }\n    const dialogRef = this.dialog.open(DeleteComponent, {\n      data: row,\n      direction: tempDirection,\n    });\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          (x: any) => x.id === this.id\n        );\n        // for delete we use splice in order to remove single object from DataService\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\n        this.refreshTable();\n        this.showNotification(\n          \"snackbar-danger\",\n          \"Delete Record Successfully...!!!\",\n          \"bottom\",\n          \"center\"\n        );\n      }\n    });\n  }\n  private refreshTable() {\n    this.paginator._changePageSize(this.paginator.pageSize);\n  }\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.renderedData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selection.clear()\n      : this.dataSource.renderedData.forEach((row) =>\n          this.selection.select(row)\n        );\n  }\n  removeSelectedRows() {\n    const totalSelect = this.selection.selected.length;\n    this.selection.selected.forEach((item) => {\n      const index: number = this.dataSource.renderedData.findIndex(\n        (d) => d === item\n      );\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\n      this.exampleDatabase.dataChange.value.splice(index, 1);\n      this.refreshTable();\n      this.selection = new SelectionModel<Patient>(true, []);\n    });\n    this.showNotification(\n      \"snackbar-danger\",\n      totalSelect + \" Record Delete Successfully...!!!\",\n      \"bottom\",\n      \"center\"\n    );\n  }\n  public loadData() {\n    this.exampleDatabase = new PatientService(this.httpClient);\n    this.dataSource = new ExampleDataSource(\n      this.exampleDatabase,\n      this.paginator,\n      this.sort\n    );\n    this.subs.sink = fromEvent(this.filter.nativeElement, \"keyup\").subscribe(\n      () => {\n        if (!this.dataSource) {\n          return;\n        }\n        this.dataSource.filter = this.filter.nativeElement.value;\n      }\n    );\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this.snackBar.open(text, \"\", {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName,\n    });\n  }\n}\nexport class ExampleDataSource extends DataSource<Patient> {\n  filterChange = new BehaviorSubject(\"\");\n  get filter(): string {\n    return this.filterChange.value;\n  }\n  set filter(filter: string) {\n    this.filterChange.next(filter);\n  }\n  filteredData: Patient[] = [];\n  renderedData: Patient[] = [];\n  constructor(\n    public exampleDatabase: PatientService,\n    public paginator: MatPaginator,\n    public _sort: MatSort\n  ) {\n    super();\n    // Reset to the first page when the user changes the filter.\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\n  }\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<Patient[]> {\n    // Listen for any changes in the base data, sorting, filtering, or pagination\n    const displayDataChanges = [\n      this.exampleDatabase.dataChange,\n      this._sort.sortChange,\n      this.filterChange,\n      this.paginator.page,\n    ];\n    this.exampleDatabase.getAllPatients().subscribe((data) => {\n      this.exampleDatabase.dataChange.next(data.patients)\n    });\n    return merge(...displayDataChanges).pipe(\n      map(() => {\n        // Filter data        \n        this.filteredData = this.exampleDatabase.data\n          .slice()\n          .filter((patient: Patient) => {\n            const searchStr = (\n              patient.firstName +\n              patient.gender +\n              patient.address +\n              patient.dateOfBirth +\n              patient.bloodGroup +\n              patient.sugger +\n              patient.mobile\n            ).toLowerCase();\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\n          });\n        // Sort filtered data\n        const sortedData = this.sortData(this.filteredData.slice());\n        // Grab the page's slice of the filtered sorted data.\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        this.renderedData = sortedData.splice(\n          startIndex,\n          this.paginator.pageSize\n        );\n        return this.renderedData;\n      })\n    );\n  }\n  disconnect() {}\n  /** Returns a sorted copy of the database data. */\n  sortData(data: Patient[]): Patient[] {\n    if (!this._sort.active || this._sort.direction === \"\") {\n      return data;\n    }\n    return data.sort((a, b) => {\n      let propertyA: number | string = \"\";\n      let propertyB: number | string = \"\";\n      switch (this._sort.active) {\n        case \"id\":\n          [propertyA, propertyB] = [a.id, b.id];\n          break;\n        case \"firstName\":\n          [propertyA, propertyB] = [a.firstName, b.firstName];\n          break;\n        case \"gender\":\n          [propertyA, propertyB] = [a.gender, b.gender];\n          break;\n        case \"dateOfBirth\":\n          [propertyA, propertyB] = [a.dateOfBirth, b.dateOfBirth];\n          break;\n        case \"address\":\n          [propertyA, propertyB] = [a.address, b.address];\n          break;\n        case \"mobile\":\n          [propertyA, propertyB] = [a.mobile, b.mobile];\n          break;\n      }\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n      return (\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === \"asc\" ? 1 : -1)\n      );\n    });\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All Patient'\" [items]=\"['Patients']\" [active_item]=\"'All Patient'\"></app-breadcrumb>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>\n                          <strong>Patients</strong></h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\n                          aria-label=\"Search box\">\n                      </li>\n                      <li>\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\n                            <mat-icon class=\"col-white\">delete</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"icon-button-demo\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"icon-button-demo\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\n                <!-- Checkbox Column -->\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n                <!-- ID Column -->\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"img\">\n                  <mat-header-cell mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-5'\"> Image\n                  </mat-header-cell>\n                  <mat-cell mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-5\"> <img\n                      [src]=\"row.img\" />\n                  </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"firstName\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>First Name</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.firstName}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"gender\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-8'\">Gender\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-8'\"> {{row.gender}}\n                  </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"address\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-10'\">Address\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-10'\"> <span\n                      class=\"truncate-text\">{{row.address}}</span>\n                  </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"mobile\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Mobile</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.mobile}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"dateOfBirth\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Birth Date</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.dateOfBirth | date: 'MM/dd/yyyy'}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"bloodGroup\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Blood Group</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.bloodGroup}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"sugger\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Sugger</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.sugger}}</mat-cell>\n                </ng-container>\n                <!-- actions -->\n                <ng-container matColumnDef=\"actions\">\n                  <mat-header-cell class=\"pr-0\" *matHeaderCellDef>Actions</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\n                    <button mat-icon-button (click)=\"$event.stopPropagation()\" (click)=\"editCall(row)\"\n                      class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                    </button>\n                    <button mat-icon-button (click)=\"$event.stopPropagation()\" (click)=\"deleteItem(row)\"\n                      class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\n                  [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n              </mat-table>\n              <!-- Loading spinner -->\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\n                No results\n              </div>\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\n              </mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { Component, Inject } from \"@angular/core\";\nimport { PatientService } from \"../../patient.service\";\n\n@Component({\n  selector: \"app-delete\",\n  templateUrl: \"./delete.component.html\",\n  styleUrls: [\"./delete.component.sass\"],\n})\nexport class DeleteComponent {\n  constructor(\n    public dialogRef: MatDialogRef<DeleteComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public patientService: PatientService\n  ) {}\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  confirmDelete(): void {\n    this.patientService.deletePatient(this.data.id);\n  }\n}\n","<div class=\"container\">\n  <h3 mat-dialog-title>Are you sure?</h3>\n  <div mat-dialog-content>\n    <ul class=\"clearfix\">\n      <li>\n        <p><span class=\"font-weight-bold\"> Patient Name: </span>{{data.name}}</p>\n      </li>\n      <li>\n        <p><span class=\"font-weight-bold\"> Gender: </span>{{ data.gender }}</p>\n      </li>\n      <li>\n        <p>\n          <span class=\"font-weight-bold\">Blood Group: </span>{{data.bGroup}}\n        </p>\n      </li>\n      <li>\n        <p>\n          <span class=\"font-weight-bold\">Mobile: </span>{{data.mobile}}\n        </p>\n      </li>\n    </ul>\n  </div>\n  <div mat-dialog-actions class=\"mb-1\">\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\n      Delete\n    </button>\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n  </div>\n</div>\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { Component, Inject } from \"@angular/core\";\nimport { PatientService } from \"../../patient.service\";\nimport {\n  FormControl,\n  Validators,\n  FormGroup,\n  FormBuilder,\n} from \"@angular/forms\";\nimport { Patient } from \"../../patient.model\";\n\n@Component({\n  selector: \"app-form-dialog\",\n  templateUrl: \"./form-dialog.component.html\",\n  styleUrls: [\"./form-dialog.component.sass\"],\n})\nexport class FormDialogComponent {\n  action: string;\n  dialogTitle: string;\n  patientForm: FormGroup;\n  patient: Patient;\n  constructor(\n    public dialogRef: MatDialogRef<FormDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public patientService: PatientService,\n    private fb: FormBuilder\n  ) {\n    // Set the defaults\n    this.action = data.action;\n    if (this.action === \"edit\") {\n      this.dialogTitle = data.patient.name;\n      this.patient = data.patient;\n    } else {\n      this.dialogTitle = \"New Patient\";\n      this.patient = new Patient({});\n    }\n    this.patientForm = this.createContactForm();\n  }\n  formControl = new FormControl(\"\", [\n    Validators.required,\n    // Validators.email,\n  ]);\n  getErrorMessage() {\n    return this.formControl.hasError(\"required\")\n      ? \"Required field\"\n      : this.formControl.hasError(\"email\")\n        ? \"Not a valid email\"\n        : \"\";\n  }\n  createContactForm(): FormGroup {\n    return this.fb.group({\n      id: [this.patient.id],\n      img: [this.patient.img],\n      firstName: [this.patient.firstName],\n      gender: [this.patient.gender],\n      dateOfBirth: [this.patient.dateOfBirth],\n      // dateOfBirth: [\n      //   formatDate(this.patient.dateOfBirth, \"dd-MM-yyyy\", \"en\"),\n      //   [Validators.required],\n      // ]\n      bloodGroup: [this.patient.bloodGroup],\n      mobile: [this.patient.mobile],\n      address: [this.patient.address],\n      sugger: [this.patient.sugger],\n    });\n  }\n  submit() {\n    // emppty stuff\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  public confirmAdd(): void {\n    this.patientService.addPatient(this.patientForm.getRawValue());\n  }\n}\n","<div class=\"addContainer\">\n  <div class=\"modalHeader\">\n    <div class=\"editRowModal\">\n      <div class=\"modalHeader clearfix\">\n        <img [src]='patient.img' alt=\"avatar\">\n        <div class=\"modal-about\">\n          <div class=\"font-weight-bold p-t-5 msl-3 font-17\">\n            {{dialogTitle}}</div>\n        </div>\n      </div>\n    </div>\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n  <div mat-dialog-content>\n    <form class=\"register-form m-4\" [formGroup]=\"patientForm\" (ngSubmit)=\"submit\">\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Name</mat-label>\n            <input matInput formControlName=\"name\" required>\n            <mat-icon matSuffix>face</mat-icon>\n            <mat-error *ngIf=\"patientForm.get('name').hasError('required')\">\n              Name is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Mobile</mat-label>\n            <input matInput formControlName=\"mobile\" type=\"number\">\n            <mat-icon matSuffix>phone</mat-icon>\n            <mat-error *ngIf=\"patientForm.get('mobile').hasError('required')\">\n              Mobile is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n          <div class=\"m-b-20\">\n            <mat-label class=\"msr-3\">Gender:</mat-label>\n            <mat-radio-group aria-label=\"Select gender\" formControlName=\"gender\" required>\n              <mat-radio-button value=\"male\">Male</mat-radio-button>\n              <mat-radio-button value=\"female\">Female</mat-radio-button>\n              <mat-error *ngIf=\"patientForm.get('gender').hasError('required')\">\n                Select gender\n              </mat-error>\n            </mat-radio-group>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Address</mat-label>\n            <textarea matInput formControlName=\"address\"></textarea>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Birth date</mat-label>\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"date\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n            <mat-error *ngIf=\"patientForm.get('date').hasError('required')\">\n              Please select date\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width \" appearance=\"outline\">\n            <mat-label>Blood Group</mat-label>\n            <mat-select formControlName=\"bGroup\" required>\n              <mat-option [value]=\"'A+'\">\n                A+\n              </mat-option>\n              <mat-option [value]=\"'B+'\">\n                B+\n              </mat-option>\n              <mat-option [value]=\"'O+'\">\n                O+\n              </mat-option>\n              <mat-option [value]=\"'AB+'\">\n                AB+\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"patientForm.get('bGroup').hasError('required')\">\n              Blood Group is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Treatment</mat-label>\n            <input matInput formControlName=\"treatment\" required>\n            <mat-icon matSuffix>healing</mat-icon>\n            <mat-error *ngIf=\"patientForm.get('treatment').hasError('required')\">\n              Treatment is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n          <div class=\"example-button-row\">\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!patientForm.valid\"\n              [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","export class Patient {\n  id: string;\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  role: string;\n  gender: string;\n  mobile: string;\n  dateOfBirth: string;\n  age: number;\n  maritalStatus: string;\n  address: string;\n  bloodGroup: string;\n  bloodPressure: string;\n  sugger: string;\n  injury: string;\n  img: string;\n\n  constructor(patient) {\n    {\n      // this.id = patient.id || this.getRandomID();\n      this.id = patient.id;\n      this.email = patient.email;\n      this.password = patient.password;\n      this.firstName = patient.firstName;\n      this.lastName = patient.lastName;\n      this.role = patient.role;\n      this.gender = patient.gender;\n      this.mobile = patient.mobile;\n      this.dateOfBirth = patient.dateOfBirth;\n      this.age = patient.age;\n      this.maritalStatus = patient.maritalStatus;\n      this.address = patient.address;\n      this.bloodGroup = patient.bloodGroup;\n      this.bloodPressure = patient.bloodPressure;\n      this.sugger = patient.sugger;\n      this.injury = patient.injury;\n      this.img = patient.img || \"assets/images/user/user1.jpg\";\n    }\n  }\n  public getRandomID(): string {\n    var S4 = function () {\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n    };\n    return S4() + S4();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { Patient } from \"./patient.model\";\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\nimport { environment } from \"src/environments/environment\";\n@Injectable()\nexport class PatientService extends UnsubscribeOnDestroyAdapter {\n  private readonly API_URL = \"assets/data/patient.json\";\n  isTblLoading = false;\n  dataChange: BehaviorSubject<Patient[]> = new BehaviorSubject<Patient[]>([]);\n  // Temporarily stores data from dialogs\n  dialogData: any;\n  constructor(private httpClient: HttpClient) {\n    super();\n  }\n  get data(): Patient[] {\n    return this.dataChange.value;\n  }\n  getDialogData() {\n    return this.dialogData;\n  }\n  /** CRUD METHODS */\n  getAllPatients(): Observable<any> {\n    return this.httpClient.post<Patient[]>(`${environment.clinivaAuthUrl}/patients`, {\n      role: \"\"\n    })\n    // .subscribe(\n    //   (data) => {\n    //     this.isTblLoading = false;\n    //     console.log(data);\n        \n    //    this.dataChange.next(data);\n    //   },\n    //   (error: HttpErrorResponse) => {\n    //     this.isTblLoading = false;\n    //     console.log(error.name + \" \" + error.message);\n    //   }\n    // );\n  }\n  addPatient(patient: Patient): void {\n    this.dialogData = patient;\n\n    /*  this.httpClient.post(this.API_URL, patient).subscribe(data => {\n      this.dialogData = patient;\n      },\n      (err: HttpErrorResponse) => {\n     // error code here\n    });*/\n  }\n  updatePatient(patient: Patient): void {\n    this.dialogData = patient;\n\n    /* this.httpClient.put(this.API_URL + patient.id, patient).subscribe(data => {\n      this.dialogData = patient;\n    },\n    (err: HttpErrorResponse) => {\n      // error code here\n    }\n  );*/\n  }\n  deletePatient(id: number): void {\n    console.log(id);\n\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\n      console.log(id);\n      },\n      (err: HttpErrorResponse) => {\n         // error code here\n      }\n    );*/\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-edit-patient\",\n  templateUrl: \"./edit-patient.component.html\",\n  styleUrls: [\"./edit-patient.component.sass\"],\n})\nexport class EditPatientComponent {\n  patientForm: FormGroup;\n  formdata = {\n    first: \"Pooja\",\n    last: \"Sarma\",\n    gender: \"Female\",\n    mobile: \"123456789\",\n    age: \"23\",\n    email: \"test@example.com\",\n    maritalStatus: \"1\",\n    bGroup: \"O+\",\n    bPresure: \"123\",\n    sugger: \"150\",\n    injury: \"Fever\",\n    address: \"101, Elanxa, New Yourk\",\n    dob: \"1987-02-17T14:22:18Z\",\n  };\n  constructor(private fb: FormBuilder) {\n    this.patientForm = this.createContactForm();\n  }\n  onSubmit() {\n    console.log(\"Form Value\", this.patientForm.value);\n  }\n  createContactForm(): FormGroup {\n    return this.fb.group({\n      first: [\n        this.formdata.first,\n        [Validators.required, Validators.pattern(\"[a-zA-Z]+\")],\n      ],\n      last: [this.formdata.last],\n      gender: [this.formdata.gender, [Validators.required]],\n      mobile: [this.formdata.mobile, [Validators.required]],\n      age: [this.formdata.age],\n      maritalStatus: [this.formdata.maritalStatus],\n      email: [\n        this.formdata.email,\n        [Validators.required, Validators.email, Validators.minLength(5)],\n      ],\n      bGroup: [this.formdata.bGroup],\n      bPresure: [this.formdata.bPresure],\n      address: [this.formdata.address],\n      dob: [this.formdata.dob, [Validators.required]],\n      sugger: [this.formdata.sugger],\n      injury: [this.formdata.injury],\n    });\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Edit Patient'\" [items]=\"['Patients']\" [active_item]=\"'Edit Patient'\"></app-breadcrumb>\n    </div>\n    <div class=\"row clearfix\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"header\">\n            <h2><strong> Patient Information</strong></h2>\n\n          </div>\n          <div class=\"body\">\n            <form class=\"m-4\" [formGroup]=\"patientForm\" (ngSubmit)=\"onSubmit()\">\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\">\n                    <mat-label>First name</mat-label>\n                    <input matInput formControlName=\"first\" required>\n                    <mat-error *ngIf=\"patientForm.get('first').hasError('required')\">\n                      First name is required\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\">\n                    <mat-label>Last name</mat-label>\n                    <input matInput formControlName=\"last\">\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\">\n                    <mat-label>Gender</mat-label>\n                    <mat-select formControlName=\"gender\" required>\n                      <mat-option [value]=\"'Male'\">\n                        Male\n                      </mat-option>\n                      <mat-option [value]=\"'Female'\">\n                        Female\n                      </mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"patientForm.get('gender').hasError('required')\">\n                      Gender is required\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\">\n                    <mat-label>Mobile</mat-label>\n                    <input matInput formControlName=\"mobile\" type=\"number\">\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\">\n                    <mat-label>Date Of Birth</mat-label>\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"dob\" required>\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker></mat-datepicker>\n                    <mat-error *ngIf=\"patientForm.get('dob').hasError('required')\">\n                      Please select date\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\">\n                    <mat-label>Age</mat-label>\n                    <input matInput formControlName=\"age\" type=\"number\">\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\">\n                    <mat-label>Email</mat-label>\n                    <input matInput formControlName=\"email\" type=\"email\" required>\n                    <mat-error *ngIf=\"patientForm.get('email').hasError('email') && patientForm.get('email').touched\">\n                      Please enter a valid email address\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\">\n                    <mat-label>Marital Status</mat-label>\n                    <mat-select formControlName=\"maritalStatus\" required>\n                      <mat-option [value]=\"'1'\">\n                        Single\n                      </mat-option>\n                      <mat-option [value]=\"'2'\">\n                        Married\n                      </mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"patientForm.get('maritalStatus').hasError('required')\">\n                      Select Any\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\">\n                    <mat-label>Address</mat-label>\n                    <textarea matInput formControlName=\"address\"></textarea>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\">\n                    <mat-label>Blood Group</mat-label>\n                    <input matInput formControlName=\"bGroup\">\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\">\n                    <mat-label>Blood Presure</mat-label>\n                    <input matInput formControlName=\"bPresure\">\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\">\n                    <mat-label>Sugger</mat-label>\n                    <input matInput formControlName=\"sugger\">\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\">\n                    <mat-label>Injury/Condition</mat-label>\n                    <input matInput formControlName=\"injury\">\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                  <button class=\"btn-space\" [disabled]=\"!patientForm.valid \" mat-raised-button\n                    color=\"primary\">Submit</button>\n                  <button type=\"button\" mat-button>Cancel</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-patient-profile\",\n  templateUrl: \"./patient-profile.component.html\",\n  styleUrls: [\"./patient-profile.component.sass\"],\n})\nexport class PatientProfileComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Profile'\" [items]=\"['Patients']\" [active_item]=\"'Profile'\"></app-breadcrumb>\n    </div>\n    <div class=\"row clearfix\">\n      <div class=\"col-lg-4 col-md-12\">\n        <div class=\"card\">\n          <div class=\"contact-grid profile-image\">\n            <img src=\"assets/images/user/usrbig4.jpg\" alt=\"\">\n          </div>\n        </div>\n        <div class=\"card\">\n          <div class=\"header\">\n            <h2>About Patient</h2>\n          </div>\n          <div class=\"tab-pane body active\" id=\"about\">\n            <p class=\"text-default\">Lorem Ipsum is simply dummy text of the printing and\n              typesetting industry. Lorem Ipsum has\n              been the industry's standard dummy text ever since the 1500s, when an unknown\n              printer\n              took a galley of type and scrambled it to make a type specimen book. It has\n              survived\n              not only five centuries, but also the leap into electronic typesetting, remaining\n              essentially\n              unchanged.</p>\n            <small class=\"text-muted\">Email address: </small>\n            <p>john@gmail.com</p>\n            <hr>\n            <small class=\"text-muted\">Phone: </small>\n            <p>+91 1234567890</p>\n            <hr>\n            <small class=\"text-muted\">Address: </small>\n            <p>345, Sarju Appt., Mota Varacha, Surat\n              Gujarat, India.</p>\n            <hr>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-lg-8 col-md-12\">\n        <div class=\"tab-content\">\n          <div role=\"tabpanel\" class=\"tab-pane active\" aria-expanded=\"true\">\n            <div class=\"row clearfix\">\n              <div class=\"col-lg-12 col-md-12 col-sm-12\">\n                <div class=\"card project_widget\">\n                  <div class=\"header\">\n                    <h5>About</h5>\n                  </div>\n                  <div class=\"body\">\n                    <p>It is also used to identify any abnormal tissue in the uterine cavity, such\n                      as uterine fibroids, endometrial polyps, scar tissue, or retained pregnancy\n                      tissue, the presence of which may be suggested by history or previous tests\n                      such as a hysterosalpingogram (x-ray of the uterus and tubes). This\n                      procedure is done in the office here at IVF New England, and is done by one\n                      of the physicians.</p>\n                    <p>Approximately an hour before the exam we suggest that you take Ibuprofen 600\n                      mg (Motrin/Advil) or a similar medication to minimize some mild to moderate\n                      cramping that you may experience during the procedure.</p>\n                    <br>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-lg-12 col-md-12 col-sm-12\">\n                <div class=\"card project_widget\">\n                  <div class=\"header\">\n                    <h5>General Report</h5>\n                  </div>\n                  <div class=\"body\">\n                    <ul class=\"list-unstyled\">\n                      <li>\n                        <h5>Heart Beat <span class=\"float-end\">85</span></h5>\n                        <div class=\"progress skill-progress m-b-20\">\n                          <div class=\"progress-bar l-bg-green width-per-45\" role=\"progressbar\" aria-valuenow=\"45\"\n                            aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                        </div>\n                      </li>\n                      <li>\n                        <h5>Blood Pressure<span class=\"float-end\">93</span></h5>\n                        <div class=\"progress skill-progress m-b-20\">\n                          <div class=\"progress-bar l-bg-orange width-per-38\" role=\"progressbar\" aria-valuenow=\"38\"\n                            aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                        </div>\n                      </li>\n                      <li>\n                        <h5>Sugar<span class=\"float-end\">55</span></h5>\n                        <div class=\"progress skill-progress m-b-20\">\n                          <div class=\"progress-bar l-bg-cyan width-per-39\" role=\"progressbar\" aria-valuenow=\"39\"\n                            aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                        </div>\n                      </li>\n                      <li>\n                        <h5>Haemoglobin<span class=\"float-end\">78%</span></h5>\n                        <div class=\"progress skill-progress m-b-20\">\n                          <div class=\"progress-bar l-bg-purple width-per-70\" role=\"progressbar\" aria-valuenow=\"70\"\n                            aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-lg-12 col-md-12 col-sm-12\">\n                <div class=\"card project_widget\">\n                  <div class=\"header\">\n                    <h5>Past Visit History</h5>\n                  </div>\n                  <div class=\"body\">\n                    <div class=\"table-responsive\">\n                      <table class=\"table table-striped custom-table table-hover\">\n                        <thead>\n                          <tr>\n                            <th>Date</th>\n                            <th>Doctor</th>\n                            <th>Treatment</th>\n                            <th>Charges($)</th>\n                            <th>Action</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <tr>\n                            <td>11/05/2017</td>\n                            <td>Dr.Rajesh</td>\n                            <td>Check up</td>\n                            <td>14$</td>\n                            <td>\n                              <button class=\"btn tblActnBtn\">\n                                <i class=\"material-icons\">mode_edit</i>\n                              </button>\n                              <button class=\"btn tblActnBtn\">\n                                <i class=\"material-icons\">delete</i>\n                              </button>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td>13/05/2017</td>\n                            <td>Dr.Rajesh</td>\n                            <td>X-Ray</td>\n                            <td>16$</td>\n                            <td>\n                              <button class=\"btn tblActnBtn\">\n                                <i class=\"material-icons\">mode_edit</i>\n                              </button>\n                              <button class=\"btn tblActnBtn\">\n                                <i class=\"material-icons\">delete</i>\n                              </button>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td>13/05/2017</td>\n                            <td>Dr.Rajesh</td>\n                            <td>Blood Test</td>\n                            <td>24$</td>\n                            <td>\n                              <button class=\"btn tblActnBtn\">\n                                <i class=\"material-icons\">mode_edit</i>\n                              </button>\n                              <button class=\"btn tblActnBtn\">\n                                <i class=\"material-icons\">delete</i>\n                              </button>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td>14/05/2017</td>\n                            <td>Dr.Rajesh</td>\n                            <td>Admit</td>\n                            <td>14$</td>\n                            <td>\n                              <button class=\"btn tblActnBtn\">\n                                <i class=\"material-icons\">mode_edit</i>\n                              </button>\n                              <button class=\"btn tblActnBtn\">\n                                <i class=\"material-icons\">delete</i>\n                              </button>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td>15/05/2017</td>\n                            <td>Dr.Rajesh</td>\n                            <td>Operation</td>\n                            <td>14$</td>\n                            <td>\n                              <button class=\"btn tblActnBtn\">\n                                <i class=\"material-icons\">mode_edit</i>\n                              </button>\n                              <button class=\"btn tblActnBtn\">\n                                <i class=\"material-icons\">delete</i>\n                              </button>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td>18/05/2017</td>\n                            <td>Dr.Rajesh</td>\n                            <td>Discharge</td>\n                            <td>14$</td>\n                            <td>\n                              <button class=\"btn tblActnBtn\">\n                                <i class=\"material-icons\">mode_edit</i>\n                              </button>\n                              <button class=\"btn tblActnBtn\">\n                                <i class=\"material-icons\">delete</i>\n                              </button>\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { PatientProfileComponent } from \"./patient-profile/patient-profile.component\";\nimport { EditPatientComponent } from \"./edit-patient/edit-patient.component\";\nimport { AddPatientComponent } from \"./add-patient/add-patient.component\";\nimport { AllpatientsComponent } from \"./allpatients/allpatients.component\";\nimport { Page404Component } from \"./../../authentication/page404/page404.component\";\nimport { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nconst routes: Routes = [\n  {\n    path: \"all-patients\",\n    component: AllpatientsComponent,\n  },\n  {\n    path: \"add-patient\",\n    component: AddPatientComponent,\n  },\n  {\n    path: \"edit-patient\",\n    component: EditPatientComponent,\n  },\n  {\n    path: \"patient-profile\",\n    component: PatientProfileComponent,\n  },\n  { path: \"**\", component: Page404Component },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PatientsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatRadioModule } from \"@angular/material/radio\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MaterialFileInputModule } from \"ngx-material-file-input\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { PatientsRoutingModule } from \"./patients-routing.module\";\nimport { AddPatientComponent } from \"./add-patient/add-patient.component\";\nimport { AllpatientsComponent } from \"./allpatients/allpatients.component\";\nimport { EditPatientComponent } from \"./edit-patient/edit-patient.component\";\nimport { PatientProfileComponent } from \"./patient-profile/patient-profile.component\";\nimport { DeleteComponent } from \"./allpatients/dialog/delete/delete.component\";\nimport { FormDialogComponent } from \"./allpatients/dialog/form-dialog/form-dialog.component\";\nimport { PatientService } from \"./allpatients/patient.service\";\nimport { ComponentsModule } from \"src/app/shared/components/components.module\";\nimport { SharedModule } from \"./../../shared/shared.module\";\nimport { AuthService } from \"src/app/core/service/auth.service\";\n\n@NgModule({\n  declarations: [\n    AddPatientComponent,\n    AllpatientsComponent,\n    EditPatientComponent,\n    PatientProfileComponent,\n    DeleteComponent,\n    FormDialogComponent,\n  ],\n  imports: [\n    CommonModule,\n    PatientsRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDialogModule,\n    MatSortModule,\n    MatToolbarModule,\n    MatDatepickerModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MaterialFileInputModule,\n    MatProgressSpinnerModule,\n    ComponentsModule,\n    SharedModule,\n  ],\n  providers: [PatientService, AuthService],\n})\nexport class PatientsModule {}\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { DOCUMENT } from '@angular/common';\nimport * as i1 from '@angular/cdk/platform';\n\n// Boilerplate for applying mixins to MatToolbar.\n/** @docs-private */\nconst _MatToolbarBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\nclass MatToolbarRow {\n}\nMatToolbarRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatToolbarRow, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatToolbarRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatToolbarRow, selector: \"mat-toolbar-row\", host: { classAttribute: \"mat-toolbar-row\" }, exportAs: [\"matToolbarRow\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatToolbarRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-toolbar-row',\n                    exportAs: 'matToolbarRow',\n                    host: { 'class': 'mat-toolbar-row' },\n                }]\n        }] });\nclass MatToolbar extends _MatToolbarBase {\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._checkToolbarMixedModes();\n            this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n        }\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     */\n    _checkToolbarMixedModes() {\n        if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            // Check if there are any other DOM nodes that can display content but aren't inside of\n            // a <mat-toolbar-row> element.\n            const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n                .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n                .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\n                .some(node => !!(node.textContent && node.textContent.trim()));\n            if (isCombinedUsage) {\n                throwToolbarMixedModesError();\n            }\n        }\n    }\n}\nMatToolbar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatToolbar, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component });\nMatToolbar.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatToolbar, selector: \"mat-toolbar\", inputs: { color: \"color\" }, host: { properties: { \"class.mat-toolbar-multiple-rows\": \"_toolbarRows.length > 0\", \"class.mat-toolbar-single-row\": \"_toolbarRows.length === 0\" }, classAttribute: \"mat-toolbar\" }, queries: [{ propertyName: \"_toolbarRows\", predicate: MatToolbarRow, descendants: true }], exportAs: [\"matToolbar\"], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatToolbar, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-toolbar', exportAs: 'matToolbar', inputs: ['color'], host: {\n                        'class': 'mat-toolbar',\n                        '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                        '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    }, propDecorators: { _toolbarRows: [{\n                type: ContentChildren,\n                args: [MatToolbarRow, { descendants: true }]\n            }] } });\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatToolbarModule {\n}\nMatToolbarModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatToolbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatToolbarModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatToolbarModule, declarations: [MatToolbar, MatToolbarRow], imports: [MatCommonModule], exports: [MatToolbar, MatToolbarRow, MatCommonModule] });\nMatToolbarModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatToolbarModule, imports: [[MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatToolbarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                    declarations: [MatToolbar, MatToolbarRow],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n"],"names":["i0","Directive","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","ContentChildren","NgModule","mixinColor","MatCommonModule","DOCUMENT","i1","_MatToolbarBase","constructor","_elementRef","MatToolbarRow","ɵfac","ɵdir","type","args","selector","exportAs","host","MatToolbar","elementRef","_platform","document","_document","ngAfterViewInit","isBrowser","_checkToolbarMixedModes","_toolbarRows","changes","subscribe","length","ngDevMode","isCombinedUsage","Array","from","nativeElement","childNodes","filter","node","classList","contains","nodeType","COMMENT_NODE","some","textContent","trim","throwToolbarMixedModesError","ElementRef","Platform","ɵcmp","inputs","changeDetection","OnPush","encapsulation","None","template","styles","undefined","decorators","descendants","Error","MatToolbarModule","ɵmod","ɵinj","imports","exports","declarations"],"sourceRoot":"webpack:///"}