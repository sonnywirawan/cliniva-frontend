{"version":3,"file":"default-node_modules_ngx-material-file-input_fesm2015_ngx-material-file-input_mjs.js","mappings":"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","sources":["./node_modules/ngx-material-file-input/fesm2015/ngx-material-file-input.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, Optional, Self, Input, HostBinding, HostListener, InjectionToken, Pipe, Inject, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i2 from '@angular/material/core';\nimport { mixinErrorState } from '@angular/material/core';\nimport * as i3 from '@angular/forms';\n\n/**\n * The files to be uploaded\n */\nclass FileInput {\n    constructor(_files, delimiter = ', ') {\n        this._files = _files;\n        this.delimiter = delimiter;\n        this._fileNames = (this._files || []).map((f) => f.name).join(delimiter);\n    }\n    get files() {\n        return this._files || [];\n    }\n    get fileNames() {\n        return this._fileNames;\n    }\n}\n\n// Boilerplate for applying mixins to FileInput\n/** @docs-private */\nclass FileInputBase {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\n/**\n * Allows to use a custom ErrorStateMatcher with the file-input component\n */\nconst FileInputMixinBase = mixinErrorState(FileInputBase);\n\nclass FileInputComponent extends FileInputMixinBase {\n    /**\n     * @see https://angular.io/api/forms/ControlValueAccessor\n     */\n    constructor(fm, _elementRef, _renderer, _defaultErrorStateMatcher, ngControl, _parentForm, _parentFormGroup) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this.fm = fm;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this.ngControl = ngControl;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.focused = false;\n        this.controlType = 'file-input';\n        this.autofilled = false;\n        this._required = false;\n        this.accept = null;\n        this.id = `ngx-mat-file-input-${FileInputComponent.nextId++}`;\n        this.describedBy = '';\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        if (this.ngControl != null) {\n            this.ngControl.valueAccessor = this;\n        }\n        fm.monitor(_elementRef.nativeElement, true).subscribe(origin => {\n            this.focused = !!origin;\n            this.stateChanges.next();\n        });\n    }\n    setDescribedByIds(ids) {\n        this.describedBy = ids.join(' ');\n    }\n    get value() {\n        return this.empty ? null : new FileInput(this._elementRef.nativeElement.value || []);\n    }\n    set value(fileInput) {\n        if (fileInput) {\n            this.writeValue(fileInput);\n            this.stateChanges.next();\n        }\n    }\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    get placeholder() {\n        return this._placeholder;\n    }\n    set placeholder(plh) {\n        this._placeholder = plh;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the current input has files\n     */\n    get empty() {\n        return !this._elementRef.nativeElement.value || this._elementRef.nativeElement.value.length === 0;\n    }\n    get shouldLabelFloat() {\n        return this.focused || !this.empty || this.valuePlaceholder !== undefined;\n    }\n    get required() {\n        return this._required;\n    }\n    set required(req) {\n        this._required = coerceBooleanProperty(req);\n        this.stateChanges.next();\n    }\n    get isDisabled() {\n        return this.disabled;\n    }\n    get disabled() {\n        return this._elementRef.nativeElement.disabled;\n    }\n    set disabled(dis) {\n        this.setDisabledState(coerceBooleanProperty(dis));\n        this.stateChanges.next();\n    }\n    onContainerClick(event) {\n        if (event.target.tagName.toLowerCase() !== 'input' && !this.disabled) {\n            this._elementRef.nativeElement.querySelector('input').focus();\n            this.focused = true;\n            this.open();\n        }\n    }\n    get fileNames() {\n        return this.value ? this.value.fileNames : this.valuePlaceholder;\n    }\n    writeValue(obj) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', obj instanceof FileInput ? obj.files : null);\n    }\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Remove all files from the file input component\n     * @param [event] optional event that may have triggered the clear action\n     */\n    clear(event) {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        this.value = new FileInput([]);\n        this._elementRef.nativeElement.querySelector('input').value = null;\n        this._onChange(this.value);\n    }\n    change(event) {\n        const fileList = event.target.files;\n        const fileArray = [];\n        if (fileList) {\n            for (let i = 0; i < fileList.length; i++) {\n                fileArray.push(fileList[i]);\n            }\n        }\n        this.value = new FileInput(fileArray);\n        this._onChange(this.value);\n    }\n    blur() {\n        this.focused = false;\n        this._onTouched();\n    }\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    ngOnInit() {\n        this.multiple = coerceBooleanProperty(this.multiple);\n    }\n    open() {\n        if (!this.disabled) {\n            this._elementRef.nativeElement.querySelector('input').click();\n        }\n    }\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        this.fm.stopMonitoring(this._elementRef.nativeElement);\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n}\nFileInputComponent.nextId = 0;\nFileInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FileInputComponent, deps: [{ token: i1.FocusMonitor }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i2.ErrorStateMatcher }, { token: i3.NgControl, optional: true, self: true }, { token: i3.NgForm, optional: true }, { token: i3.FormGroupDirective, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nFileInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.2\", type: FileInputComponent, selector: \"ngx-mat-file-input\", inputs: { autofilled: \"autofilled\", valuePlaceholder: \"valuePlaceholder\", accept: \"accept\", errorStateMatcher: \"errorStateMatcher\", value: \"value\", multiple: \"multiple\", placeholder: \"placeholder\", required: \"required\", disabled: \"disabled\" }, host: { listeners: { \"change\": \"change($event)\", \"focusout\": \"blur()\" }, properties: { \"id\": \"this.id\", \"attr.aria-describedby\": \"this.describedBy\", \"class.mat-form-field-should-float\": \"this.shouldLabelFloat\", \"class.file-input-disabled\": \"this.isDisabled\" } }, providers: [{ provide: MatFormFieldControl, useExisting: FileInputComponent }], usesInheritance: true, ngImport: i0, template: \"<input #input type=\\\"file\\\" [attr.multiple]=\\\"multiple? '' : null\\\" [attr.accept]=\\\"accept\\\">\\n<span class=\\\"filename\\\" [title]=\\\"fileNames\\\">{{ fileNames }}</span>\\n\", styles: [\":host{display:inline-block;width:100%}:host:not(.file-input-disabled){cursor:pointer}input{width:0px;height:0px;opacity:0;overflow:hidden;position:absolute;z-index:-1}.filename{display:inline-block;text-overflow:ellipsis;overflow:hidden;width:100%}\\n\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FileInputComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-mat-file-input', providers: [{ provide: MatFormFieldControl, useExisting: FileInputComponent }], template: \"<input #input type=\\\"file\\\" [attr.multiple]=\\\"multiple? '' : null\\\" [attr.accept]=\\\"accept\\\">\\n<span class=\\\"filename\\\" [title]=\\\"fileNames\\\">{{ fileNames }}</span>\\n\", styles: [\":host{display:inline-block;width:100%}:host:not(.file-input-disabled){cursor:pointer}input{width:0px;height:0px;opacity:0;overflow:hidden;position:absolute;z-index:-1}.filename{display:inline-block;text-overflow:ellipsis;overflow:hidden;width:100%}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i1.FocusMonitor }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i2.ErrorStateMatcher }, { type: i3.NgControl, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }] }, { type: i3.NgForm, decorators: [{\n                        type: Optional\n                    }] }, { type: i3.FormGroupDirective, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { autofilled: [{\n                type: Input\n            }], valuePlaceholder: [{\n                type: Input\n            }], accept: [{\n                type: Input\n            }], errorStateMatcher: [{\n                type: Input\n            }], id: [{\n                type: HostBinding\n            }], describedBy: [{\n                type: HostBinding,\n                args: ['attr.aria-describedby']\n            }], value: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], shouldLabelFloat: [{\n                type: HostBinding,\n                args: ['class.mat-form-field-should-float']\n            }], required: [{\n                type: Input\n            }], isDisabled: [{\n                type: HostBinding,\n                args: ['class.file-input-disabled']\n            }], disabled: [{\n                type: Input\n            }], change: [{\n                type: HostListener,\n                args: ['change', ['$event']]\n            }], blur: [{\n                type: HostListener,\n                args: ['focusout']\n            }] } });\n\n/**\n * Optional token to provide custom configuration to the module\n */\nconst NGX_MAT_FILE_INPUT_CONFIG = new InjectionToken('ngx-mat-file-input.config');\n\nclass ByteFormatPipe {\n    constructor(config) {\n        this.config = config;\n        this.unit = config ? config.sizeUnit : 'Byte';\n    }\n    transform(value, args) {\n        if (parseInt(value, 10) >= 0) {\n            value = this.formatBytes(+value, +args);\n        }\n        return value;\n    }\n    formatBytes(bytes, decimals) {\n        if (bytes === 0) {\n            return '0 ' + this.unit;\n        }\n        const B = this.unit.charAt(0);\n        const k = 1024;\n        const dm = decimals || 2;\n        const sizes = [this.unit, 'K' + B, 'M' + B, 'G' + B, 'T' + B, 'P' + B, 'E' + B, 'Z' + B, 'Y' + B];\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    }\n}\nByteFormatPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: ByteFormatPipe, deps: [{ token: NGX_MAT_FILE_INPUT_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Pipe });\nByteFormatPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: ByteFormatPipe, name: \"byteFormat\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: ByteFormatPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'byteFormat'\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [NGX_MAT_FILE_INPUT_CONFIG]\n                    }] }];\n    } });\n\nclass MaterialFileInputModule {\n}\nMaterialFileInputModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: MaterialFileInputModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMaterialFileInputModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: MaterialFileInputModule, declarations: [FileInputComponent, ByteFormatPipe], exports: [FileInputComponent, ByteFormatPipe] });\nMaterialFileInputModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: MaterialFileInputModule, providers: [FocusMonitor] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: MaterialFileInputModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [FileInputComponent, ByteFormatPipe],\n                    providers: [FocusMonitor],\n                    exports: [FileInputComponent, ByteFormatPipe]\n                }]\n        }] });\n\nclass FileValidator {\n    /**\n     * Function to control content of files\n     *\n     * @param bytes max number of bytes allowed\n     *\n     * @returns\n     */\n    static maxContentSize(bytes) {\n        return (control) => {\n            const size = control && control.value ? control.value.files.map(f => f.size).reduce((acc, i) => acc + i, 0) : 0;\n            const condition = bytes >= size;\n            return condition\n                ? null\n                : {\n                    maxContentSize: {\n                        actualSize: size,\n                        maxSize: bytes\n                    }\n                };\n        };\n    }\n}\n\n// Module\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ByteFormatPipe, FileInput, FileInputComponent, FileValidator, MaterialFileInputModule, NGX_MAT_FILE_INPUT_CONFIG };\n"],"names":["i0","Component","Optional","Self","Input","HostBinding","HostListener","InjectionToken","Pipe","Inject","NgModule","i1","FocusMonitor","MatFormFieldControl","coerceBooleanProperty","i2","mixinErrorState","i3","FileInput","constructor","_files","delimiter","_fileNames","map","f","name","join","files","fileNames","FileInputBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","FileInputMixinBase","FileInputComponent","fm","_elementRef","_renderer","focused","controlType","autofilled","_required","accept","id","nextId","describedBy","_onChange","_","_onTouched","valueAccessor","monitor","nativeElement","subscribe","origin","stateChanges","next","setDescribedByIds","ids","value","empty","fileInput","writeValue","multiple","_multiple","placeholder","_placeholder","plh","length","shouldLabelFloat","valuePlaceholder","undefined","required","req","isDisabled","disabled","dis","setDisabledState","onContainerClick","event","target","tagName","toLowerCase","querySelector","focus","open","obj","setProperty","registerOnChange","fn","registerOnTouched","clear","preventDefault","stopPropagation","change","fileList","fileArray","i","push","blur","ngOnInit","click","ngOnDestroy","complete","stopMonitoring","ngDoCheck","updateErrorState","ɵfac","ElementRef","Renderer2","ErrorStateMatcher","NgControl","NgForm","FormGroupDirective","ɵcmp","provide","useExisting","type","args","selector","providers","template","styles","decorators","errorStateMatcher","NGX_MAT_FILE_INPUT_CONFIG","ByteFormatPipe","config","unit","sizeUnit","transform","parseInt","formatBytes","bytes","decimals","B","charAt","k","dm","sizes","Math","floor","log","parseFloat","pow","toFixed","ɵpipe","MaterialFileInputModule","ɵmod","ɵinj","declarations","exports","FileValidator","maxContentSize","control","size","reduce","acc","condition","actualSize","maxSize"],"sourceRoot":"webpack:///"}