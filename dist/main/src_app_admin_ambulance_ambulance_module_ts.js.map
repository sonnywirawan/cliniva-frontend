{"version":3,"file":"src_app_admin_ambulance_ambulance_module_ts.js","mappings":"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","sources":["./src/app/admin/ambulance/ambulance-call-list/ambulance-call-list.component.ts","./src/app/admin/ambulance/ambulance-call-list/ambulance-call-list.component.html","./src/app/admin/ambulance/ambulance-call-list/ambulance-call-list.model.ts","./src/app/admin/ambulance/ambulance-call-list/ambulance-call-list.service.ts","./src/app/admin/ambulance/ambulance-call-list/dialog/delete/delete.component.ts","./src/app/admin/ambulance/ambulance-call-list/dialog/delete/delete.component.html","./src/app/admin/ambulance/ambulance-call-list/dialog/form-dialog/form-dialog.component.ts","./src/app/admin/ambulance/ambulance-call-list/dialog/form-dialog/form-dialog.component.html","./src/app/admin/ambulance/ambulance-list/ambulance-list.component.ts","./src/app/admin/ambulance/ambulance-list/ambulance-list.component.html","./src/app/admin/ambulance/ambulance-list/ambulance-list.model.ts","./src/app/admin/ambulance/ambulance-list/ambulance-list.service.ts","./src/app/admin/ambulance/ambulance-list/dialog/delete/delete.component.ts","./src/app/admin/ambulance/ambulance-list/dialog/delete/delete.component.html","./src/app/admin/ambulance/ambulance-list/dialog/form-dialog/form-dialog.component.ts","./src/app/admin/ambulance/ambulance-list/dialog/form-dialog/form-dialog.component.html","./src/app/admin/ambulance/ambulance-routing.module.ts","./src/app/admin/ambulance/ambulance.module.ts","./node_modules/@angular/material/fesm2015/toolbar.mjs"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\nimport { AmbulanceCallListService } from \"./ambulance-call-list.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { AmbulanceCallList } from \"./ambulance-call-list.model\";\nimport { DataSource } from \"@angular/cdk/collections\";\nimport { FormDialogComponent } from \"./dialog/form-dialog/form-dialog.component\";\nimport { DeleteDialogComponent } from \"./dialog/delete/delete.component\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { BehaviorSubject, fromEvent, merge, Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { SelectionModel } from \"@angular/cdk/collections\";\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\n\n@Component({\n  selector: \"app-ambulance-call-list\",\n  templateUrl: \"./ambulance-call-list.component.html\",\n  styleUrls: [\"./ambulance-call-list.component.sass\"],\n})\nexport class AmbulanceCallListComponent\n  extends UnsubscribeOnDestroyAdapter\n  implements OnInit\n{\n  displayedColumns = [\n    \"select\",\n    \"case_no\",\n    \"patient_name\",\n    \"gender\",\n    \"date\",\n    \"vehicle_no\",\n    \"driver_name\",\n    \"driver_no\",\n    \"patient_address\",\n    \"actions\",\n  ];\n  exampleDatabase: AmbulanceCallListService | null;\n  dataSource: ExampleDataSource | null;\n  selection = new SelectionModel<AmbulanceCallList>(true, []);\n  index: number;\n  id: number;\n  ambulanceCallList: AmbulanceCallList | null;\n  constructor(\n    public httpClient: HttpClient,\n    public dialog: MatDialog,\n    public ambulanceCallListService: AmbulanceCallListService,\n    private snackBar: MatSnackBar\n  ) {\n    super();\n  }\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild(\"filter\", { static: true }) filter: ElementRef;\n  ngOnInit() {\n    this.loadData();\n  }\n  refresh() {\n    this.loadData();\n  }\n  addNew() {\n    let tempDirection;\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\n      tempDirection = \"rtl\";\n    } else {\n      tempDirection = \"ltr\";\n    }\n    const dialogRef = this.dialog.open(FormDialogComponent, {\n      data: {\n        ambulanceCallList: this.ambulanceCallList,\n        action: \"add\",\n      },\n      direction: tempDirection,\n    });\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        // After dialog is closed we're doing frontend updates\n        // For add we're just pushing a new row inside DataService\n        this.exampleDatabase.dataChange.value.unshift(\n          this.ambulanceCallListService.getDialogData()\n        );\n        this.refreshTable();\n        this.showNotification(\n          \"snackbar-success\",\n          \"Add Record Successfully...!!!\",\n          \"bottom\",\n          \"center\"\n        );\n      }\n    });\n  }\n  editCall(row) {\n    this.id = row.id;\n    let tempDirection;\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\n      tempDirection = \"rtl\";\n    } else {\n      tempDirection = \"ltr\";\n    }\n    const dialogRef = this.dialog.open(FormDialogComponent, {\n      data: {\n        ambulanceCallList: row,\n        action: \"edit\",\n      },\n      direction: tempDirection,\n    });\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        // When using an edit things are little different, firstly we find record inside DataService by id\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          (x) => x.id === this.id\n        );\n        // Then you update that record using data from dialogData (values you enetered)\n        this.exampleDatabase.dataChange.value[foundIndex] =\n          this.ambulanceCallListService.getDialogData();\n        // And lastly refresh table\n        this.refreshTable();\n        this.showNotification(\n          \"black\",\n          \"Edit Record Successfully...!!!\",\n          \"bottom\",\n          \"center\"\n        );\n      }\n    });\n  }\n  deleteItem(row) {\n    this.id = row.id;\n    let tempDirection;\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\n      tempDirection = \"rtl\";\n    } else {\n      tempDirection = \"ltr\";\n    }\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: row,\n      direction: tempDirection,\n    });\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          (x) => x.id === this.id\n        );\n        // for delete we use splice in order to remove single object from DataService\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\n        this.refreshTable();\n        this.showNotification(\n          \"snackbar-danger\",\n          \"Delete Record Successfully...!!!\",\n          \"bottom\",\n          \"center\"\n        );\n      }\n    });\n  }\n  private refreshTable() {\n    this.paginator._changePageSize(this.paginator.pageSize);\n  }\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.renderedData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selection.clear()\n      : this.dataSource.renderedData.forEach((row) =>\n          this.selection.select(row)\n        );\n  }\n  removeSelectedRows() {\n    const totalSelect = this.selection.selected.length;\n    this.selection.selected.forEach((item) => {\n      const index: number = this.dataSource.renderedData.findIndex(\n        (d) => d === item\n      );\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\n      this.exampleDatabase.dataChange.value.splice(index, 1);\n      this.refreshTable();\n      this.selection = new SelectionModel<AmbulanceCallList>(true, []);\n    });\n    this.showNotification(\n      \"snackbar-danger\",\n      totalSelect + \" Record Delete Successfully...!!!\",\n      \"bottom\",\n      \"center\"\n    );\n  }\n  public loadData() {\n    this.exampleDatabase = new AmbulanceCallListService(this.httpClient);\n    this.dataSource = new ExampleDataSource(\n      this.exampleDatabase,\n      this.paginator,\n      this.sort\n    );\n    this.subs.sink = fromEvent(this.filter.nativeElement, \"keyup\").subscribe(\n      () => {\n        if (!this.dataSource) {\n          return;\n        }\n        this.dataSource.filter = this.filter.nativeElement.value;\n      }\n    );\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this.snackBar.open(text, \"\", {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName,\n    });\n  }\n}\nexport class ExampleDataSource extends DataSource<AmbulanceCallList> {\n  filterChange = new BehaviorSubject(\"\");\n  get filter(): string {\n    return this.filterChange.value;\n  }\n  set filter(filter: string) {\n    this.filterChange.next(filter);\n  }\n  filteredData: AmbulanceCallList[] = [];\n  renderedData: AmbulanceCallList[] = [];\n  constructor(\n    public exampleDatabase: AmbulanceCallListService,\n    public paginator: MatPaginator,\n    public _sort: MatSort\n  ) {\n    super();\n    // Reset to the first page when the user changes the filter.\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\n  }\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<AmbulanceCallList[]> {\n    // Listen for any changes in the base data, sorting, filtering, or pagination\n    const displayDataChanges = [\n      this.exampleDatabase.dataChange,\n      this._sort.sortChange,\n      this.filterChange,\n      this.paginator.page,\n    ];\n    this.exampleDatabase.getAllAmbulanceCallLists();\n    return merge(...displayDataChanges).pipe(\n      map(() => {\n        // Filter data\n        this.filteredData = this.exampleDatabase.data\n          .slice()\n          .filter((ambulanceCallList: AmbulanceCallList) => {\n            const searchStr = (\n              ambulanceCallList.case_no +\n              ambulanceCallList.patient_name +\n              ambulanceCallList.gender +\n              ambulanceCallList.date +\n              ambulanceCallList.vehicle_no +\n              ambulanceCallList.driver_name +\n              ambulanceCallList.patient_address +\n              ambulanceCallList.driver_no\n            ).toLowerCase();\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\n          });\n        // Sort filtered data\n        const sortedData = this.sortData(this.filteredData.slice());\n        // Grab the page's slice of the filtered sorted data.\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        this.renderedData = sortedData.splice(\n          startIndex,\n          this.paginator.pageSize\n        );\n        return this.renderedData;\n      })\n    );\n  }\n  disconnect() {}\n  /** Returns a sorted copy of the database data. */\n  sortData(data: AmbulanceCallList[]): AmbulanceCallList[] {\n    if (!this._sort.active || this._sort.direction === \"\") {\n      return data;\n    }\n    return data.sort((a, b) => {\n      let propertyA: number | string = \"\";\n      let propertyB: number | string = \"\";\n      switch (this._sort.active) {\n        case \"id\":\n          [propertyA, propertyB] = [a.id, b.id];\n          break;\n        case \"case_no\":\n          [propertyA, propertyB] = [a.case_no, b.case_no];\n          break;\n        case \"patient_name\":\n          [propertyA, propertyB] = [a.patient_name, b.patient_name];\n          break;\n        case \"gender\":\n          [propertyA, propertyB] = [a.gender, b.gender];\n          break;\n        case \"date\":\n          [propertyA, propertyB] = [a.date, b.date];\n          break;\n        case \"vehicle_no\":\n          [propertyA, propertyB] = [a.vehicle_no, b.vehicle_no];\n          break;\n        case \"driver_name\":\n          [propertyA, propertyB] = [a.driver_name, b.driver_name];\n          break;\n        case \"driver_no\":\n          [propertyA, propertyB] = [a.driver_no, b.driver_no];\n          break;\n        case \"patient_address\":\n          [propertyA, propertyB] = [a.patient_address, b.patient_address];\n          break;\n      }\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n      return (\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === \"asc\" ? 1 : -1)\n      );\n    });\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Call List'\" [items]=\"['Ambulance']\" [active_item]=\"'Call List'\"></app-breadcrumb>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>Call List</h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\n                          aria-label=\"Search box\">\n                      </li>\n                      <li>\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\n                            <mat-icon class=\"col-white\">delete</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"icon-button-demo\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"icon-button-demo\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\n                <!-- Checkbox Column -->\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n                <!-- ID Column -->\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"case_no\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Case No</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.case_no}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"patient_name\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Patient Name</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.patient_name}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"gender\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header> Gender\n                  </mat-header-cell>\n                  <mat-cell mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                    <div *ngIf=\"row.gender=='Male'\">\n                      <span class=\"badge badge-solid-green\">\n                        {{row.gender}}</span>\n                    </div>\n                    <div *ngIf=\"row.gender=='Female'\">\n                      <span class=\"badge badge-solid-orange\">\n                        {{row.gender}}</span>\n                    </div>\n                    <div *ngIf=\"row.gender=='Other'\">\n                      <span class=\"badge badge-solid-purple\">\n                        {{row.gender}}</span>\n                    </div>\n                  </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"date\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.date | date: 'MM/dd/yyyy'}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"vehicle_no\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Vehicle No</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.vehicle_no}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"driver_name\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Driver Name</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.driver_name}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"driver_no\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Driver No</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.driver_no}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"patient_address\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Patient Address</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">\n                    <span class=\"truncate-text\">{{row.patient_address}}</span>\n                  </mat-cell>\n                </ng-container>\n                <!-- actions -->\n                <ng-container matColumnDef=\"actions\">\n                  <mat-header-cell class=\"pr-0\" *matHeaderCellDef>Actions</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\n                    <button mat-icon-button (click)=\"$event.stopPropagation()\" (click)=\"editCall(row)\"\n                      class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                    </button>\n                    <button mat-icon-button (click)=\"$event.stopPropagation()\" (click)=\"deleteItem(row)\"\n                      class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\n                  [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n              </mat-table>\n              <!-- Loading spinner -->\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\n                No results\n              </div>\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\n              </mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { formatDate } from \"@angular/common\";\nexport class AmbulanceCallList {\n  id: number;\n  case_no: string;\n  patient_name: string;\n  gender: string;\n  date: string;\n  vehicle_no: string;\n  driver_name: string;\n  driver_no: string;\n  patient_address: string;\n  note: string;\n  constructor(ambulanceCallList) {\n    {\n      this.id = ambulanceCallList.id || this.getRandomID();\n      this.case_no = ambulanceCallList.case_no || \"\";\n      this.patient_name = ambulanceCallList.patient_name || \"\";\n      this.gender = ambulanceCallList.gender || \"Male\";\n      this.date = formatDate(new Date(), \"yyyy-MM-dd\", \"en\") || \"\";\n      this.vehicle_no = ambulanceCallList.vehicle_no || \"\";\n      this.driver_name = ambulanceCallList.driver_name || \"\";\n      this.driver_no = ambulanceCallList.driver_no || \"\";\n      this.patient_address = ambulanceCallList.patient_address || \"\";\n      this.note = ambulanceCallList.note || \"\";\n    }\n  }\n  public getRandomID(): string {\n    const S4 = () => {\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n    };\n    return S4() + S4();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { AmbulanceCallList } from \"./ambulance-call-list.model\";\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\n@Injectable()\nexport class AmbulanceCallListService extends UnsubscribeOnDestroyAdapter {\n  private readonly API_URL = \"assets/data/ambulanceCallList.json\";\n  isTblLoading = true;\n  dataChange: BehaviorSubject<AmbulanceCallList[]> = new BehaviorSubject<\n    AmbulanceCallList[]\n  >([]);\n  // Temporarily stores data from dialogs\n  dialogData: any;\n  constructor(private httpClient: HttpClient) {\n    super();\n  }\n  get data(): AmbulanceCallList[] {\n    return this.dataChange.value;\n  }\n  getDialogData() {\n    return this.dialogData;\n  }\n  /** CRUD METHODS */\n  getAllAmbulanceCallLists(): void {\n    this.subs.sink = this.httpClient\n      .get<AmbulanceCallList[]>(this.API_URL)\n      .subscribe(\n        (data) => {\n          this.isTblLoading = false;\n          this.dataChange.next(data);\n        },\n        (error: HttpErrorResponse) => {\n          this.isTblLoading = false;\n          console.log(error.name + \" \" + error.message);\n        }\n      );\n  }\n  addAmbulanceCallList(ambulanceCallList: AmbulanceCallList): void {\n    this.dialogData = ambulanceCallList;\n\n    /*  this.httpClient.post(this.API_URL, ambulanceCallList).subscribe(data => {\n      this.dialogData = ambulanceCallList;\n      },\n      (err: HttpErrorResponse) => {\n     // error code here\n    });*/\n  }\n  updateAmbulanceCallList(ambulanceCallList: AmbulanceCallList): void {\n    this.dialogData = ambulanceCallList;\n\n    /* this.httpClient.put(this.API_URL + ambulanceCallList.id, ambulanceCallList).subscribe(data => {\n      this.dialogData = ambulanceCallList;\n    },\n    (err: HttpErrorResponse) => {\n      // error code here\n    }\n  );*/\n  }\n  deleteAmbulanceCallList(id: number): void {\n    console.log(id);\n\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\n      console.log(id);\n      },\n      (err: HttpErrorResponse) => {\n         // error code here\n      }\n    );*/\n  }\n}\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { Component, Inject } from \"@angular/core\";\nimport { AmbulanceCallListService } from \"../../ambulance-call-list.service\";\n@Component({\n  selector: \"app-delete\",\n  templateUrl: \"./delete.component.html\",\n  styleUrls: [\"./delete.component.sass\"],\n})\nexport class DeleteDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public ambulanceCallListService: AmbulanceCallListService\n  ) {}\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  confirmDelete(): void {\n    this.ambulanceCallListService.deleteAmbulanceCallList(this.data.id);\n  }\n}\n","<div class=\"container\">\n  <h3 mat-dialog-title>Are you sure?</h3>\n  <div mat-dialog-content>\n    <ul class=\"clearfix\">\n      <li>\n        <p><span class=\"font-weight-bold\"> Patient Name: </span>{{data.patient_name}}</p>\n      </li>\n      <li>\n        <p><span class=\"font-weight-bold\"> Gender: </span>{{ data.gender }}</p>\n      </li>\n      <li>\n        <p>\n          <span class=\"font-weight-bold\">Driver Name: </span>{{data.driver_name}}\n        </p>\n      </li>\n    </ul>\n  </div>\n  <div mat-dialog-actions class=\"mb-1\">\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\n      Delete\n    </button>\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n  </div>\n</div>\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { Component, Inject } from \"@angular/core\";\nimport { AmbulanceCallListService } from \"../../ambulance-call-list.service\";\nimport {\n  FormControl,\n  Validators,\n  FormGroup,\n  FormBuilder,\n} from \"@angular/forms\";\nimport { AmbulanceCallList } from \"../../ambulance-call-list.model\";\nimport { formatDate } from \"@angular/common\";\n@Component({\n  selector: \"app-form-dialog\",\n  templateUrl: \"./form-dialog.component.html\",\n  styleUrls: [\"./form-dialog.component.sass\"],\n})\nexport class FormDialogComponent {\n  action: string;\n  dialogTitle: string;\n  ambulanceCallListForm: FormGroup;\n  ambulanceCallList: AmbulanceCallList;\n  constructor(\n    public dialogRef: MatDialogRef<FormDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public ambulanceCallListService: AmbulanceCallListService,\n    private fb: FormBuilder\n  ) {\n    // Set the defaults\n    this.action = data.action;\n    if (this.action === \"edit\") {\n      this.dialogTitle = data.ambulanceCallList.patient_name;\n      this.ambulanceCallList = data.ambulanceCallList;\n    } else {\n      this.dialogTitle = \"Add Ambulance Call\";\n      this.ambulanceCallList = new AmbulanceCallList({});\n    }\n    this.ambulanceCallListForm = this.createContactForm();\n  }\n  formControl = new FormControl(\"\", [\n    Validators.required,\n    // Validators.email,\n  ]);\n  getErrorMessage() {\n    return this.formControl.hasError(\"required\")\n      ? \"Required field\"\n      : this.formControl.hasError(\"email\")\n      ? \"Not a valid email\"\n      : \"\";\n  }\n  createContactForm(): FormGroup {\n    return this.fb.group({\n      id: [this.ambulanceCallList.id],\n      case_no: [this.ambulanceCallList.case_no],\n      patient_name: [this.ambulanceCallList.patient_name],\n      gender: [this.ambulanceCallList.gender],\n      date: [\n        formatDate(this.ambulanceCallList.date, \"yyyy-MM-dd\", \"en\"),\n        [Validators.required],\n      ],\n      vehicle_no: [this.ambulanceCallList.vehicle_no],\n      driver_name: [this.ambulanceCallList.driver_name],\n      driver_no: [this.ambulanceCallList.driver_no],\n      patient_address: [this.ambulanceCallList.patient_address],\n      note: [this.ambulanceCallList.note],\n    });\n  }\n  submit() {\n    // emppty stuff\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  public confirmAdd(): void {\n    this.ambulanceCallListService.addAmbulanceCallList(\n      this.ambulanceCallListForm.getRawValue()\n    );\n  }\n}\n","<div class=\"addContainer\">\n  <div class=\"modalHeader\">\n    <div class=\"editRowModal\">\n      <div class=\"modalHeader clearfix\">\n        <div class=\"modal-about\">\n          <div class=\"font-weight-bold p-t-5 font-17\">\n            {{dialogTitle}}</div>\n        </div>\n      </div>\n    </div>\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n  <div mat-dialog-content>\n    <form class=\"register-form m-4\" [formGroup]=\"ambulanceCallListForm\" (ngSubmit)=\"submit\">\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Case No</mat-label>\n            <input matInput formControlName=\"case_no\" required>\n            <mat-icon matSuffix>receipt</mat-icon>\n            <mat-error *ngIf=\"ambulanceCallListForm.get('case_no').hasError('required')\">\n              Name is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Patient Name</mat-label>\n            <input matInput formControlName=\"patient_name\" required>\n            <mat-icon matSuffix>account_circle</mat-icon>\n            <mat-error *ngIf=\"ambulanceCallListForm.get('patient_name').hasError('required')\">\n              Patient Name is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n          <div class=\"m-b-20\">\n            <mat-label class=\"msr-3\">Gender:</mat-label>\n            <mat-radio-group aria-label=\"Select gender\" formControlName=\"gender\" required>\n              <mat-radio-button value=\"Male\">Male</mat-radio-button>\n              <mat-radio-button value=\"Female\">Female</mat-radio-button>\n              <mat-radio-button value=\"Other\">Other</mat-radio-button>\n              <mat-error *ngIf=\"ambulanceCallListForm.get('gender').hasError('required')\">\n                Select gender\n              </mat-error>\n            </mat-radio-group>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Date</mat-label>\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"date\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n            <mat-error *ngIf=\"ambulanceCallListForm.get('date').hasError('required')\">\n              Please select date\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Vehicle No</mat-label>\n            <input matInput formControlName=\"vehicle_no\" required>\n            <mat-icon matSuffix>airport_shuttle</mat-icon>\n            <mat-error *ngIf=\"ambulanceCallListForm.get('vehicle_no').hasError('required')\">\n              Vehicle No Name is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Driver Name</mat-label>\n            <input matInput formControlName=\"driver_name\">\n            <mat-icon matSuffix>account_circle</mat-icon>\n            <mat-error *ngIf=\"ambulanceCallListForm.get('driver_name').hasError('required')\">\n              Driver Name is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Driver No</mat-label>\n            <input matInput formControlName=\"driver_no\" type=\"number\">\n            <mat-icon matSuffix>phone</mat-icon>\n            <mat-error *ngIf=\"ambulanceCallListForm.get('driver_no').hasError('required')\">\n              Driver No is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Patient Address</mat-label>\n            <textarea matInput formControlName=\"patient_address\"></textarea>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n          <div class=\"example-button-row\">\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!ambulanceCallListForm.valid\"\n              [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\nimport { AmbulanceListService } from \"./ambulance-list.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { AmbulanceList } from \"./ambulance-list.model\";\nimport { DataSource } from \"@angular/cdk/collections\";\nimport { FormDialogComponent } from \"./dialog/form-dialog/form-dialog.component\";\nimport { DeleteDialogComponent } from \"./dialog/delete/delete.component\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { BehaviorSubject, fromEvent, merge, Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { SelectionModel } from \"@angular/cdk/collections\";\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\n\n@Component({\n  selector: \"app-ambulance-list\",\n  templateUrl: \"./ambulance-list.component.html\",\n  styleUrls: [\"./ambulance-list.component.sass\"],\n})\nexport class AmbulanceListComponent\n  extends UnsubscribeOnDestroyAdapter\n  implements OnInit\n{\n  displayedColumns = [\n    \"select\",\n    \"vehicle_no\",\n    \"vehicle_name\",\n    \"year_made\",\n    \"driver_name\",\n    \"driver_license_no\",\n    \"driver_no\",\n    \"vehicle_type\",\n    \"actions\",\n  ];\n  exampleDatabase: AmbulanceListService | null;\n  dataSource: ExampleDataSource | null;\n  selection = new SelectionModel<AmbulanceList>(true, []);\n  index: number;\n  id: number;\n  ambulanceList: AmbulanceList | null;\n  constructor(\n    public httpClient: HttpClient,\n    public dialog: MatDialog,\n    public ambulanceListService: AmbulanceListService,\n    private snackBar: MatSnackBar\n  ) {\n    super();\n  }\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild(\"filter\", { static: true }) filter: ElementRef;\n  ngOnInit() {\n    this.loadData();\n  }\n  refresh() {\n    this.loadData();\n  }\n  addNew() {\n    let tempDirection;\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\n      tempDirection = \"rtl\";\n    } else {\n      tempDirection = \"ltr\";\n    }\n    const dialogRef = this.dialog.open(FormDialogComponent, {\n      data: {\n        ambulanceList: this.ambulanceList,\n        action: \"add\",\n      },\n      direction: tempDirection,\n    });\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        // After dialog is closed we're doing frontend updates\n        // For add we're just pushing a new row inside DataService\n        this.exampleDatabase.dataChange.value.unshift(\n          this.ambulanceListService.getDialogData()\n        );\n        this.refreshTable();\n        this.showNotification(\n          \"snackbar-success\",\n          \"Add Record Successfully...!!!\",\n          \"bottom\",\n          \"center\"\n        );\n      }\n    });\n  }\n  editCall(row) {\n    this.id = row.id;\n    let tempDirection;\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\n      tempDirection = \"rtl\";\n    } else {\n      tempDirection = \"ltr\";\n    }\n    const dialogRef = this.dialog.open(FormDialogComponent, {\n      data: {\n        ambulanceList: row,\n        action: \"edit\",\n      },\n      direction: tempDirection,\n    });\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        // When using an edit things are little different, firstly we find record inside DataService by id\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          (x) => x.id === this.id\n        );\n        // Then you update that record using data from dialogData (values you enetered)\n        this.exampleDatabase.dataChange.value[foundIndex] =\n          this.ambulanceListService.getDialogData();\n        // And lastly refresh table\n        this.refreshTable();\n        this.showNotification(\n          \"black\",\n          \"Edit Record Successfully...!!!\",\n          \"bottom\",\n          \"center\"\n        );\n      }\n    });\n  }\n  deleteItem(row) {\n    this.id = row.id;\n    let tempDirection;\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\n      tempDirection = \"rtl\";\n    } else {\n      tempDirection = \"ltr\";\n    }\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: row,\n      direction: tempDirection,\n    });\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          (x) => x.id === this.id\n        );\n        // for delete we use splice in order to remove single object from DataService\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\n        this.refreshTable();\n        this.showNotification(\n          \"snackbar-danger\",\n          \"Delete Record Successfully...!!!\",\n          \"bottom\",\n          \"center\"\n        );\n      }\n    });\n  }\n  private refreshTable() {\n    this.paginator._changePageSize(this.paginator.pageSize);\n  }\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.renderedData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selection.clear()\n      : this.dataSource.renderedData.forEach((row) =>\n          this.selection.select(row)\n        );\n  }\n  removeSelectedRows() {\n    const totalSelect = this.selection.selected.length;\n    this.selection.selected.forEach((item) => {\n      const index: number = this.dataSource.renderedData.findIndex(\n        (d) => d === item\n      );\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\n      this.exampleDatabase.dataChange.value.splice(index, 1);\n      this.refreshTable();\n      this.selection = new SelectionModel<AmbulanceList>(true, []);\n    });\n    this.showNotification(\n      \"snackbar-danger\",\n      totalSelect + \" Record Delete Successfully...!!!\",\n      \"bottom\",\n      \"center\"\n    );\n  }\n  public loadData() {\n    this.exampleDatabase = new AmbulanceListService(this.httpClient);\n    this.dataSource = new ExampleDataSource(\n      this.exampleDatabase,\n      this.paginator,\n      this.sort\n    );\n    this.subs.sink = fromEvent(this.filter.nativeElement, \"keyup\").subscribe(\n      () => {\n        if (!this.dataSource) {\n          return;\n        }\n        this.dataSource.filter = this.filter.nativeElement.value;\n      }\n    );\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this.snackBar.open(text, \"\", {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName,\n    });\n  }\n}\nexport class ExampleDataSource extends DataSource<AmbulanceList> {\n  filterChange = new BehaviorSubject(\"\");\n  get filter(): string {\n    return this.filterChange.value;\n  }\n  set filter(filter: string) {\n    this.filterChange.next(filter);\n  }\n  filteredData: AmbulanceList[] = [];\n  renderedData: AmbulanceList[] = [];\n  constructor(\n    public exampleDatabase: AmbulanceListService,\n    public paginator: MatPaginator,\n    public _sort: MatSort\n  ) {\n    super();\n    // Reset to the first page when the user changes the filter.\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\n  }\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<AmbulanceList[]> {\n    // Listen for any changes in the base data, sorting, filtering, or pagination\n    const displayDataChanges = [\n      this.exampleDatabase.dataChange,\n      this._sort.sortChange,\n      this.filterChange,\n      this.paginator.page,\n    ];\n    this.exampleDatabase.getAllAmbulanceLists();\n    return merge(...displayDataChanges).pipe(\n      map(() => {\n        // Filter data\n        this.filteredData = this.exampleDatabase.data\n          .slice()\n          .filter((ambulanceList: AmbulanceList) => {\n            const searchStr = (\n              ambulanceList.vehicle_no +\n              ambulanceList.vehicle_name +\n              ambulanceList.year_made +\n              ambulanceList.driver_name +\n              ambulanceList.driver_license_no +\n              ambulanceList.driver_no +\n              ambulanceList.vehicle_type\n            ).toLowerCase();\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\n          });\n        // Sort filtered data\n        const sortedData = this.sortData(this.filteredData.slice());\n        // Grab the page's slice of the filtered sorted data.\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        this.renderedData = sortedData.splice(\n          startIndex,\n          this.paginator.pageSize\n        );\n        return this.renderedData;\n      })\n    );\n  }\n  disconnect() {}\n  /** Returns a sorted copy of the database data. */\n  sortData(data: AmbulanceList[]): AmbulanceList[] {\n    if (!this._sort.active || this._sort.direction === \"\") {\n      return data;\n    }\n    return data.sort((a, b) => {\n      let propertyA: number | string = \"\";\n      let propertyB: number | string = \"\";\n      switch (this._sort.active) {\n        case \"id\":\n          [propertyA, propertyB] = [a.id, b.id];\n          break;\n        case \"vehicle_no\":\n          [propertyA, propertyB] = [a.vehicle_no, b.vehicle_no];\n          break;\n        case \"vehicle_name\":\n          [propertyA, propertyB] = [a.vehicle_name, b.vehicle_name];\n          break;\n        case \"year_made\":\n          [propertyA, propertyB] = [a.year_made, b.year_made];\n          break;\n        case \"driver_name\":\n          [propertyA, propertyB] = [a.driver_name, b.driver_name];\n          break;\n        case \"driver_license_no\":\n          [propertyA, propertyB] = [a.driver_license_no, b.driver_license_no];\n          break;\n        case \"driver_no\":\n          [propertyA, propertyB] = [a.driver_no, b.driver_no];\n          break;\n        case \"vehicle_type\":\n          [propertyA, propertyB] = [a.vehicle_type, b.vehicle_type];\n          break;\n      }\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n      return (\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === \"asc\" ? 1 : -1)\n      );\n    });\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Ambulance List'\" [items]=\"['Ambulance']\" [active_item]=\"'List'\">\n      </app-breadcrumb>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>Ambulance List</h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\n                          aria-label=\"Search box\">\n                      </li>\n                      <li>\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\n                            <mat-icon class=\"col-white\">delete</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"icon-button-demo\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"icon-button-demo\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\n                <!-- Checkbox Column -->\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n                <!-- ID Column -->\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"vehicle_no\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Vehicle No</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.vehicle_no}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"vehicle_name\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Vehicle Name</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.vehicle_name}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"year_made\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Year Made</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.year_made}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"driver_name\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Driver Name</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.driver_name}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"driver_license_no\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Driver License No</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.driver_license_no}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"driver_no\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Driver Contact No</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.driver_no}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"vehicle_type\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Vehicle Type</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">\n                    <span class=\"truncate-text\">{{row.vehicle_type}}</span>\n                  </mat-cell>\n                </ng-container>\n                <!-- actions -->\n                <ng-container matColumnDef=\"actions\">\n                  <mat-header-cell class=\"pr-0\" *matHeaderCellDef>Actions</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\n                    <button mat-icon-button (click)=\"$event.stopPropagation()\" (click)=\"editCall(row)\"\n                      class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                    </button>\n                    <button mat-icon-button (click)=\"$event.stopPropagation()\" (click)=\"deleteItem(row)\"\n                      class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\n                  [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n              </mat-table>\n              <!-- Loading spinner -->\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\n                No results\n              </div>\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\n              </mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { formatDate } from \"@angular/common\";\nexport class AmbulanceList {\n  id: number;\n  vehicle_no: string;\n  vehicle_name: string;\n  year_made: string;\n  driver_name: string;\n  driver_license_no: string;\n  driver_no: string;\n  vehicle_type: string;\n  note: string;\n  constructor(ambulanceList) {\n    {\n      this.id = ambulanceList.id || this.getRandomID();\n      this.vehicle_no = ambulanceList.vehicle_no || \"\";\n      this.vehicle_name = ambulanceList.vehicle_name || \"\";\n      this.year_made = ambulanceList.year_made || \"\";\n      this.driver_name = ambulanceList.driver_name || \"\";\n      this.driver_license_no = ambulanceList.driver_license_no || \"\";\n      this.driver_no = ambulanceList.driver_no || \"\";\n      this.vehicle_type = ambulanceList.vehicle_type || \"\";\n      this.note = ambulanceList.note || \"\";\n    }\n  }\n  public getRandomID(): string {\n    const S4 = () => {\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n    };\n    return S4() + S4();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { AmbulanceList } from \"./ambulance-list.model\";\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\n@Injectable()\nexport class AmbulanceListService extends UnsubscribeOnDestroyAdapter {\n  private readonly API_URL = \"assets/data/ambulanceList.json\";\n  isTblLoading = true;\n  dataChange: BehaviorSubject<AmbulanceList[]> = new BehaviorSubject<\n    AmbulanceList[]\n  >([]);\n  // Temporarily stores data from dialogs\n  dialogData: any;\n  constructor(private httpClient: HttpClient) {\n    super();\n  }\n  get data(): AmbulanceList[] {\n    return this.dataChange.value;\n  }\n  getDialogData() {\n    return this.dialogData;\n  }\n  /** CRUD METHODS */\n  getAllAmbulanceLists(): void {\n    this.subs.sink = this.httpClient\n      .get<AmbulanceList[]>(this.API_URL)\n      .subscribe(\n        (data) => {\n          this.isTblLoading = false;\n          this.dataChange.next(data);\n        },\n        (error: HttpErrorResponse) => {\n          this.isTblLoading = false;\n          console.log(error.name + \" \" + error.message);\n        }\n      );\n  }\n  addAmbulanceList(ambulanceList: AmbulanceList): void {\n    this.dialogData = ambulanceList;\n\n    /*  this.httpClient.post(this.API_URL, ambulanceList).subscribe(data => {\n      this.dialogData = ambulanceList;\n      },\n      (err: HttpErrorResponse) => {\n     // error code here\n    });*/\n  }\n  updateAmbulanceList(ambulanceList: AmbulanceList): void {\n    this.dialogData = ambulanceList;\n\n    /* this.httpClient.put(this.API_URL + ambulanceList.id, ambulanceList).subscribe(data => {\n      this.dialogData = ambulanceList;\n    },\n    (err: HttpErrorResponse) => {\n      // error code here\n    }\n  );*/\n  }\n  deleteAmbulanceList(id: number): void {\n    console.log(id);\n\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\n      console.log(id);\n      },\n      (err: HttpErrorResponse) => {\n         // error code here\n      }\n    );*/\n  }\n}\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { Component, Inject } from \"@angular/core\";\nimport { AmbulanceListService } from \"../../ambulance-list.service\";\n@Component({\n  selector: \"app-delete\",\n  templateUrl: \"./delete.component.html\",\n  styleUrls: [\"./delete.component.sass\"],\n})\nexport class DeleteDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public ambulanceListService: AmbulanceListService\n  ) {}\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  confirmDelete(): void {\n    this.ambulanceListService.deleteAmbulanceList(this.data.id);\n  }\n}\n","<div class=\"container\">\n  <h3 mat-dialog-title>Are you sure?</h3>\n  <div mat-dialog-content>\n    <ul class=\"clearfix\">\n      <li>\n        <p><span class=\"font-weight-bold\"> Vehicle No: </span>{{data.vehicle_no}}</p>\n      </li>\n      <li>\n        <p><span class=\"font-weight-bold\"> Vehicle Name: </span>{{ data.vehicle_name }}</p>\n      </li>\n      <li>\n        <p>\n          <span class=\"font-weight-bold\">Driver Name: </span>{{data.driver_name}}\n        </p>\n      </li>\n    </ul>\n  </div>\n  <div mat-dialog-actions class=\"mb-1\">\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\n      Delete\n    </button>\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n  </div>\n</div>\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { Component, Inject } from \"@angular/core\";\nimport { AmbulanceListService } from \"../../ambulance-list.service\";\nimport {\n  FormControl,\n  Validators,\n  FormGroup,\n  FormBuilder,\n} from \"@angular/forms\";\nimport { AmbulanceList } from \"../../ambulance-list.model\";\nimport { formatDate } from \"@angular/common\";\n@Component({\n  selector: \"app-form-dialog\",\n  templateUrl: \"./form-dialog.component.html\",\n  styleUrls: [\"./form-dialog.component.sass\"],\n})\nexport class FormDialogComponent {\n  action: string;\n  dialogTitle: string;\n  ambulanceListForm: FormGroup;\n  ambulanceList: AmbulanceList;\n  constructor(\n    public dialogRef: MatDialogRef<FormDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public ambulanceListService: AmbulanceListService,\n    private fb: FormBuilder\n  ) {\n    // Set the defaults\n    this.action = data.action;\n    if (this.action === \"edit\") {\n      this.dialogTitle = data.ambulanceList.vehicle_no;\n      this.ambulanceList = data.ambulanceList;\n    } else {\n      this.dialogTitle = \"Add Ambulance Call\";\n      this.ambulanceList = new AmbulanceList({});\n    }\n    this.ambulanceListForm = this.createContactForm();\n  }\n  formControl = new FormControl(\"\", [\n    Validators.required,\n    // Validators.email,\n  ]);\n  getErrorMessage() {\n    return this.formControl.hasError(\"required\")\n      ? \"Required field\"\n      : this.formControl.hasError(\"email\")\n      ? \"Not a valid email\"\n      : \"\";\n  }\n  createContactForm(): FormGroup {\n    return this.fb.group({\n      id: [this.ambulanceList.id],\n      vehicle_no: [this.ambulanceList.vehicle_no],\n      vehicle_name: [this.ambulanceList.vehicle_name],\n      year_made: [this.ambulanceList.year_made],\n      driver_name: [this.ambulanceList.driver_name],\n      driver_license_no: [this.ambulanceList.driver_license_no],\n      driver_no: [this.ambulanceList.driver_no],\n      vehicle_type: [this.ambulanceList.vehicle_type],\n      note: [this.ambulanceList.note],\n    });\n  }\n  submit() {\n    // emppty stuff\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  public confirmAdd(): void {\n    this.ambulanceListService.addAmbulanceList(\n      this.ambulanceListForm.getRawValue()\n    );\n  }\n}\n","<div class=\"addContainer\">\n  <div class=\"modalHeader\">\n    <div class=\"editRowModal\">\n      <div class=\"modalHeader clearfix\">\n        <div class=\"modal-about\">\n          <div class=\"font-weight-bold p-t-5 font-17\">\n            {{dialogTitle}}</div>\n        </div>\n      </div>\n    </div>\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n  <div mat-dialog-content>\n    <form class=\"register-form m-4\" [formGroup]=\"ambulanceListForm\" (ngSubmit)=\"submit\">\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Vehicle No</mat-label>\n            <input matInput formControlName=\"vehicle_no\" required>\n            <mat-icon matSuffix>pin</mat-icon>\n            <mat-error *ngIf=\"ambulanceListForm.get('vehicle_no').hasError('required')\">\n              Vehicle No is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Vehicle Name</mat-label>\n            <input matInput formControlName=\"vehicle_name\" required>\n            <mat-icon matSuffix>airport_shuttle</mat-icon>\n            <mat-error *ngIf=\"ambulanceListForm.get('vehicle_name').hasError('required')\">\n              Vehicle Name is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Year Made</mat-label>\n            <input matInput formControlName=\"year_made\" type=\"number\" required>\n            <mat-icon matSuffix>event_note</mat-icon>\n            <mat-error *ngIf=\"ambulanceListForm.get('year_made').hasError('required')\">\n              Year Made is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Driver Name</mat-label>\n            <input matInput formControlName=\"driver_name\" required>\n            <mat-icon matSuffix>account_circle</mat-icon>\n            <mat-error *ngIf=\"ambulanceListForm.get('driver_name').hasError('required')\">\n              Driver Name is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Driver License No</mat-label>\n            <input matInput formControlName=\"driver_license_no\">\n            <mat-icon matSuffix>credit_card</mat-icon>\n            <mat-error *ngIf=\"ambulanceListForm.get('driver_license_no').hasError('required')\">\n              Driver License No is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Driver Contact No</mat-label>\n            <input matInput formControlName=\"driver_no\" type=\"number\">\n            <mat-icon matSuffix>phone</mat-icon>\n            <mat-error *ngIf=\"ambulanceListForm.get('driver_no').hasError('required')\">\n              Driver No is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width \" appearance=\"outline\">\n            <mat-label>Vehicle Type</mat-label>\n            <mat-select formControlName=\"vehicle_type\" required>\n              <mat-option [value]=\"'Owned'\">\n                Owned\n              </mat-option>\n              <mat-option [value]=\"'Contractual'\">\n                Contractual\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n          <div class=\"example-button-row\">\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!ambulanceListForm.valid\"\n              [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { Page404Component } from \"src/app/authentication/page404/page404.component\";\nimport { AmbulanceCallListComponent } from \"./ambulance-call-list/ambulance-call-list.component\";\nimport { AmbulanceListComponent } from \"./ambulance-list/ambulance-list.component\";\n\nconst routes: Routes = [\n  {\n    path: \"call-list\",\n    component: AmbulanceCallListComponent,\n  },\n  {\n    path: \"list\",\n    component: AmbulanceListComponent,\n  },\n  { path: \"**\", component: Page404Component },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AmbulanceRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { AmbulanceRoutingModule } from \"./ambulance-routing.module\";\nimport { AmbulanceCallListComponent } from \"./ambulance-call-list/ambulance-call-list.component\";\nimport { AmbulanceListComponent } from \"./ambulance-list/ambulance-list.component\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatRadioModule } from \"@angular/material/radio\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { FormDialogComponent } from \"./ambulance-call-list/dialog/form-dialog/form-dialog.component\";\nimport { DeleteDialogComponent } from \"./ambulance-call-list/dialog/delete/delete.component\";\nimport { FormDialogComponent as AmbulanceListForm } from \"./ambulance-list/dialog/form-dialog/form-dialog.component\";\nimport { DeleteDialogComponent as AmbulanceListDelete } from \"./ambulance-list/dialog/delete/delete.component\";\nimport { MaterialFileInputModule } from \"ngx-material-file-input\";\nimport { MatTabsModule } from \"@angular/material/tabs\";\nimport { AmbulanceCallListService } from \"./ambulance-call-list/ambulance-call-list.service\";\nimport { ComponentsModule } from \"src/app/shared/components/components.module\";\nimport { SharedModule } from \"src/app/shared/shared.module\";\nimport { AmbulanceListService } from \"./ambulance-list/ambulance-list.service\";\n\n@NgModule({\n  declarations: [\n    AmbulanceCallListComponent,\n    AmbulanceListComponent,\n    FormDialogComponent,\n    DeleteDialogComponent,\n    AmbulanceListForm,\n    AmbulanceListDelete,\n  ],\n  imports: [\n    CommonModule,\n    AmbulanceRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDialogModule,\n    MatSortModule,\n    MatToolbarModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MaterialFileInputModule,\n    MatTabsModule,\n    MatProgressSpinnerModule,\n    ComponentsModule,\n    SharedModule,\n  ],\n  providers: [AmbulanceCallListService, AmbulanceListService],\n})\nexport class AmbulanceModule {}\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { DOCUMENT } from '@angular/common';\nimport * as i1 from '@angular/cdk/platform';\n\n// Boilerplate for applying mixins to MatToolbar.\n/** @docs-private */\nconst _MatToolbarBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\nclass MatToolbarRow {\n}\nMatToolbarRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatToolbarRow, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatToolbarRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatToolbarRow, selector: \"mat-toolbar-row\", host: { classAttribute: \"mat-toolbar-row\" }, exportAs: [\"matToolbarRow\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatToolbarRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-toolbar-row',\n                    exportAs: 'matToolbarRow',\n                    host: { 'class': 'mat-toolbar-row' },\n                }]\n        }] });\nclass MatToolbar extends _MatToolbarBase {\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._checkToolbarMixedModes();\n            this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n        }\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     */\n    _checkToolbarMixedModes() {\n        if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            // Check if there are any other DOM nodes that can display content but aren't inside of\n            // a <mat-toolbar-row> element.\n            const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n                .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n                .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\n                .some(node => !!(node.textContent && node.textContent.trim()));\n            if (isCombinedUsage) {\n                throwToolbarMixedModesError();\n            }\n        }\n    }\n}\nMatToolbar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatToolbar, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component });\nMatToolbar.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatToolbar, selector: \"mat-toolbar\", inputs: { color: \"color\" }, host: { properties: { \"class.mat-toolbar-multiple-rows\": \"_toolbarRows.length > 0\", \"class.mat-toolbar-single-row\": \"_toolbarRows.length === 0\" }, classAttribute: \"mat-toolbar\" }, queries: [{ propertyName: \"_toolbarRows\", predicate: MatToolbarRow, descendants: true }], exportAs: [\"matToolbar\"], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatToolbar, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-toolbar', exportAs: 'matToolbar', inputs: ['color'], host: {\n                        'class': 'mat-toolbar',\n                        '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                        '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    }, propDecorators: { _toolbarRows: [{\n                type: ContentChildren,\n                args: [MatToolbarRow, { descendants: true }]\n            }] } });\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatToolbarModule {\n}\nMatToolbarModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatToolbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatToolbarModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatToolbarModule, declarations: [MatToolbar, MatToolbarRow], imports: [MatCommonModule], exports: [MatToolbar, MatToolbarRow, MatCommonModule] });\nMatToolbarModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatToolbarModule, imports: [[MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatToolbarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                    declarations: [MatToolbar, MatToolbarRow],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n"],"names":["i0","Directive","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","ContentChildren","NgModule","mixinColor","MatCommonModule","DOCUMENT","i1","_MatToolbarBase","constructor","_elementRef","MatToolbarRow","ɵfac","ɵdir","type","args","selector","exportAs","host","MatToolbar","elementRef","_platform","document","_document","ngAfterViewInit","isBrowser","_checkToolbarMixedModes","_toolbarRows","changes","subscribe","length","ngDevMode","isCombinedUsage","Array","from","nativeElement","childNodes","filter","node","classList","contains","nodeType","COMMENT_NODE","some","textContent","trim","throwToolbarMixedModesError","ElementRef","Platform","ɵcmp","inputs","changeDetection","OnPush","encapsulation","None","template","styles","undefined","decorators","descendants","Error","MatToolbarModule","ɵmod","ɵinj","imports","exports","declarations"],"sourceRoot":"webpack:///"}