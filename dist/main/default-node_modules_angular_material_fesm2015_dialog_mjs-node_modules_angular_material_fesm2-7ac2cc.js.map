{"version":3,"file":"default-node_modules_angular_material_fesm2015_dialog_mjs-node_modules_angular_material_fesm2-7ac2cc.js","mappings":"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","sources":["./node_modules/@angular/cdk/fesm2015/table.mjs","./node_modules/@angular/material/fesm2015/dialog.mjs","./node_modules/@angular/material/fesm2015/paginator.mjs","./node_modules/@angular/material/fesm2015/sort.mjs","./node_modules/@angular/material/fesm2015/table.mjs"],"sourcesContent":["import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, isDataSource, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nexport { DataSource } from '@angular/cdk/collections';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, Input, ContentChild, Injectable, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, EventEmitter, NgZone, Attribute, SkipSelf, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, from, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/bidi';\nimport * as i2 from '@angular/cdk/platform';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /** Whether the sticky input has changed since it was last checked. */\n            this._hasStickyChanged = false;\n        }\n        /** Whether sticky positioning should be applied. */\n        get sticky() {\n            return this._sticky;\n        }\n        set sticky(v) {\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /** Whether the sticky value has changed since this was last called. */\n        hasStickyChanged() {\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /** Resets the dirty check for cases where the sticky state has been used without checking. */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkCellDef, selector: \"[cdkCellDef]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkHeaderCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkHeaderCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkHeaderCellDef, selector: \"[cdkHeaderCellDef]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkHeaderCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkHeaderCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkFooterCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkFooterCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkFooterCellDef, selector: \"[cdkFooterCellDef]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkFooterCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkFooterCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n// Boilerplate for applying mixins to CdkColumnDef.\n/** @docs-private */\nclass CdkColumnDefBase {\n}\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    constructor(_table) {\n        super();\n        this._table = _table;\n        this._stickyEnd = false;\n    }\n    /** Unique name for this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._setNameInput(name);\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    set stickyEnd(v) {\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n    /**\n     * Overridable method that sets the css classes that will be added to every cell in this\n     * column.\n     * In the future, columnCssClassName will change from type string[] to string and this\n     * will set a single string value.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setNameInput(value) {\n        // If the directive is set without a name (updated programmatically), then this setter will\n        // trigger with an empty string and should not overwrite the programmatically set value.\n        if (value) {\n            this._name = value;\n            this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/gi, '-');\n            this._updateColumnCssClassName();\n        }\n    }\n}\nCdkColumnDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkColumnDef, deps: [{ token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkColumnDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkColumnDef, selector: \"[cdkColumnDef]\", inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }], queries: [{ propertyName: \"cell\", first: true, predicate: CdkCellDef, descendants: true }, { propertyName: \"headerCell\", first: true, predicate: CdkHeaderCellDef, descendants: true }, { propertyName: \"footerCell\", first: true, predicate: CdkFooterCellDef, descendants: true }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkColumnDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkColumnDef]',\n                    inputs: ['sticky'],\n                    providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_TABLE]\n                    }, {\n                        type: Optional\n                    }] }];\n    }, propDecorators: { name: [{\n                type: Input,\n                args: ['cdkColumnDef']\n            }], stickyEnd: [{\n                type: Input,\n                args: ['stickyEnd']\n            }], cell: [{\n                type: ContentChild,\n                args: [CdkCellDef]\n            }], headerCell: [{\n                type: ContentChild,\n                args: [CdkHeaderCellDef]\n            }], footerCell: [{\n                type: ContentChild,\n                args: [CdkFooterCellDef]\n            }] } });\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nclass BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        elementRef.nativeElement.classList.add(...columnDef._columnCssClassName);\n    }\n}\n/** Header cell template container that adds the right classes and role. */\nclass CdkHeaderCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkHeaderCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkHeaderCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkHeaderCell, selector: \"cdk-header-cell, th[cdk-header-cell]\", host: { attributes: { \"role\": \"columnheader\" }, classAttribute: \"cdk-header-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkHeaderCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-header-cell, th[cdk-header-cell]',\n                    host: {\n                        'class': 'cdk-header-cell',\n                        'role': 'columnheader',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n/** Footer cell template container that adds the right classes and role. */\nclass CdkFooterCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        var _a;\n        super(columnDef, elementRef);\n        if (((_a = columnDef._table) === null || _a === void 0 ? void 0 : _a._elementRef.nativeElement.nodeType) === 1) {\n            const tableRole = columnDef._table._elementRef.nativeElement.getAttribute('role');\n            const role = tableRole === 'grid' || tableRole === 'treegrid' ? 'gridcell' : 'cell';\n            elementRef.nativeElement.setAttribute('role', role);\n        }\n    }\n}\nCdkFooterCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkFooterCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkFooterCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkFooterCell, selector: \"cdk-footer-cell, td[cdk-footer-cell]\", host: { classAttribute: \"cdk-footer-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkFooterCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                    host: {\n                        'class': 'cdk-footer-cell',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n/** Cell template container that adds the right classes and role. */\nclass CdkCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        var _a;\n        super(columnDef, elementRef);\n        if (((_a = columnDef._table) === null || _a === void 0 ? void 0 : _a._elementRef.nativeElement.nodeType) === 1) {\n            const tableRole = columnDef._table._elementRef.nativeElement.getAttribute('role');\n            const role = tableRole === 'grid' || tableRole === 'treegrid' ? 'gridcell' : 'cell';\n            elementRef.nativeElement.setAttribute('role', role);\n        }\n    }\n}\nCdkCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkCell, selector: \"cdk-cell, td[cdk-cell]\", host: { classAttribute: \"cdk-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-cell, td[cdk-cell]',\n                    host: {\n                        'class': 'cdk-cell',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @docs-private\n */\nclass _Schedule {\n    constructor() {\n        this.tasks = [];\n        this.endTasks = [];\n    }\n}\n/** Injection token used to provide a coalesced style scheduler. */\nconst _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\n/**\n * Allows grouping up CSSDom mutations after the current execution context.\n * This can significantly improve performance when separate consecutive functions are\n * reading from the CSSDom and then mutating it.\n *\n * @docs-private\n */\nclass _CoalescedStyleScheduler {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        this._currentSchedule = null;\n        this._destroyed = new Subject();\n    }\n    /**\n     * Schedules the specified task to run at the end of the current VM turn.\n     */\n    schedule(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.tasks.push(task);\n    }\n    /**\n     * Schedules the specified task to run after other scheduled tasks at the end of the current\n     * VM turn.\n     */\n    scheduleEnd(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.endTasks.push(task);\n    }\n    /** Prevent any further tasks from running. */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    _createScheduleIfNeeded() {\n        if (this._currentSchedule) {\n            return;\n        }\n        this._currentSchedule = new _Schedule();\n        this._getScheduleObservable()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\n                const schedule = this._currentSchedule;\n                // Capture new tasks scheduled by the current set of tasks.\n                this._currentSchedule = new _Schedule();\n                for (const task of schedule.tasks) {\n                    task();\n                }\n                for (const task of schedule.endTasks) {\n                    task();\n                }\n            }\n            this._currentSchedule = null;\n        });\n    }\n    _getScheduleObservable() {\n        // Use onStable when in the context of an ongoing change detection cycle so that we\n        // do not accidentally trigger additional cycles.\n        return this._ngZone.isStable\n            ? from(Promise.resolve(undefined))\n            : this._ngZone.onStable.pipe(take(1));\n    }\n}\n_CoalescedStyleScheduler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _CoalescedStyleScheduler, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\n_CoalescedStyleScheduler.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _CoalescedStyleScheduler });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _CoalescedStyleScheduler, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\nclass BaseRowDef {\n    constructor(\n    /** @docs-private */ template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /** Gets this row def's relevant cell template from the provided column def. */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\nBaseRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: BaseRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }], target: i0.ɵɵFactoryTarget.Directive });\nBaseRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: BaseRowDef, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: BaseRowDef, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }]; } });\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/** @docs-private */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkHeaderRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkHeaderRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkHeaderRowDef, selector: \"[cdkHeaderRowDef]\", inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkHeaderRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkHeaderRowDef]',\n                    inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky'],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_TABLE]\n                    }, {\n                        type: Optional\n                    }] }];\n    } });\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/** @docs-private */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkFooterRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkFooterRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkFooterRowDef, selector: \"[cdkFooterRowDef]\", inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkFooterRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkFooterRowDef]',\n                    inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky'],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_TABLE]\n                    }, {\n                        type: Optional\n                    }] }];\n    } });\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n}\nCdkRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkRowDef, selector: \"[cdkRowDef]\", inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkRowDef]',\n                    inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen'],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_TABLE]\n                    }, {\n                        type: Optional\n                    }] }];\n    } });\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\nclass CdkCellOutlet {\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\nCdkCellOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkCellOutlet, deps: [{ token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkCellOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkCellOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkCellOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }]; } });\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkHeaderRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCdkHeaderRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkHeaderRow, selector: \"cdk-header-row, tr[cdk-header-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-header-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkHeaderRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-header-row, tr[cdk-header-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-header-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass CdkFooterRow {\n}\nCdkFooterRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkFooterRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCdkFooterRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkFooterRow, selector: \"cdk-footer-row, tr[cdk-footer-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-footer-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkFooterRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-footer-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass CdkRow {\n}\nCdkRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCdkRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkRow, selector: \"cdk-row, tr[cdk-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-row, tr[cdk-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Row that can be used to display a message when no data is shown in the table. */\nclass CdkNoDataRow {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._contentClassName = 'cdk-no-data-row';\n    }\n}\nCdkNoDataRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkNoDataRow, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkNoDataRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkNoDataRow, selector: \"ng-template[cdkNoDataRow]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkNoDataRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkNoDataRow]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nclass StickyStyler {\n    /**\n     * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n     * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n     *     using inline styles. If false, it is assumed that position: sticky is included in\n     *     the component stylesheet for _stickCellCss.\n     * @param _positionListener A listener that is notified of changes to sticky rows/columns\n     *     and their dimensions.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._isBrowser = _isBrowser;\n        this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n        this._positionListener = _positionListener;\n        this._cachedCellWidths = [];\n        this._borderCellCss = {\n            'top': `${_stickCellCss}-border-elem-top`,\n            'bottom': `${_stickCellCss}-border-elem-bottom`,\n            'left': `${_stickCellCss}-border-elem-left`,\n            'right': `${_stickCellCss}-border-elem-right`,\n        };\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param rows The list of rows that should be cleared from sticking in the provided directions\n     * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        const elementsToClear = [];\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            elementsToClear.push(row);\n            for (let i = 0; i < row.children.length; i++) {\n                elementsToClear.push(row.children[i]);\n            }\n        }\n        // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            for (const element of elementsToClear) {\n                this._removeStickyStyle(element, stickyDirections);\n            }\n        });\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n     *     column cell. If `false` cached widths will be used instead.\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\n        if (!rows.length ||\n            !this._isBrowser ||\n            !(stickyStartStates.some(state => state) || stickyEndStates.some(state => state))) {\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({ sizes: [] });\n                this._positionListener.stickyEndColumnsUpdated({ sizes: [] });\n            }\n            return;\n        }\n        const firstRow = rows[0];\n        const numCells = firstRow.children.length;\n        const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        const lastStickyStart = stickyStartStates.lastIndexOf(true);\n        const firstStickyEnd = stickyEndStates.indexOf(true);\n        // Coalesce with sticky row updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            const isRtl = this.direction === 'rtl';\n            const start = isRtl ? 'right' : 'left';\n            const end = isRtl ? 'left' : 'right';\n            for (const row of rows) {\n                for (let i = 0; i < numCells; i++) {\n                    const cell = row.children[i];\n                    if (stickyStartStates[i]) {\n                        this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\n                    }\n                    if (stickyEndStates[i]) {\n                        this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\n                    }\n                }\n            }\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({\n                    sizes: lastStickyStart === -1\n                        ? []\n                        : cellWidths\n                            .slice(0, lastStickyStart + 1)\n                            .map((width, index) => (stickyStartStates[index] ? width : null)),\n                });\n                this._positionListener.stickyEndColumnsUpdated({\n                    sizes: firstStickyEnd === -1\n                        ? []\n                        : cellWidths\n                            .slice(firstStickyEnd)\n                            .map((width, index) => (stickyEndStates[index + firstStickyEnd] ? width : null))\n                            .reverse(),\n                });\n            }\n        });\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n        // sticky states need to be reversed as well.\n        const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n        const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n        // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n        const stickyOffsets = [];\n        const stickyCellHeights = [];\n        const elementsToStick = [];\n        for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\n            if (!states[rowIndex]) {\n                continue;\n            }\n            stickyOffsets[rowIndex] = stickyOffset;\n            const row = rows[rowIndex];\n            elementsToStick[rowIndex] = this._isNativeHtmlTable\n                ? Array.from(row.children)\n                : [row];\n            const height = row.getBoundingClientRect().height;\n            stickyOffset += height;\n            stickyCellHeights[rowIndex] = height;\n        }\n        const borderedRowIndex = states.lastIndexOf(true);\n        // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n        // (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            var _a, _b;\n            for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n                if (!states[rowIndex]) {\n                    continue;\n                }\n                const offset = stickyOffsets[rowIndex];\n                const isBorderedRowIndex = rowIndex === borderedRowIndex;\n                for (const element of elementsToStick[rowIndex]) {\n                    this._addStickyStyle(element, position, offset, isBorderedRowIndex);\n                }\n            }\n            if (position === 'top') {\n                (_a = this._positionListener) === null || _a === void 0 ? void 0 : _a.stickyHeaderRowsUpdated({\n                    sizes: stickyCellHeights,\n                    offsets: stickyOffsets,\n                    elements: elementsToStick,\n                });\n            }\n            else {\n                (_b = this._positionListener) === null || _b === void 0 ? void 0 : _b.stickyFooterRowsUpdated({\n                    sizes: stickyCellHeights,\n                    offsets: stickyOffsets,\n                    elements: elementsToStick,\n                });\n            }\n        });\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        const tfoot = tableElement.querySelector('tfoot');\n        // Coalesce with other sticky updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            if (stickyStates.some(state => !state)) {\n                this._removeStickyStyle(tfoot, ['bottom']);\n            }\n            else {\n                this._addStickyStyle(tfoot, 'bottom', 0, false);\n            }\n        });\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n            element.classList.remove(this._borderCellCss[dir]);\n        }\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        // Short-circuit checking element.style[dir] for stickyDirections as they\n        // were already removed above.\n        const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n        if (hasDirection) {\n            element.style.zIndex = this._getCalculatedZIndex(element);\n        }\n        else {\n            // When not hasDirection, _getCalculatedZIndex will always return ''.\n            element.style.zIndex = '';\n            if (this._needsPositionStickyOnElement) {\n                element.style.position = '';\n            }\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     */\n    _addStickyStyle(element, dir, dirValue, isBorderElement) {\n        element.classList.add(this._stickCellCss);\n        if (isBorderElement) {\n            element.classList.add(this._borderCellCss[dir]);\n        }\n        element.style[dir] = `${dirValue}px`;\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        if (this._needsPositionStickyOnElement) {\n            element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        }\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     */\n    _getCalculatedZIndex(element) {\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of STICKY_DIRECTIONS) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /** Gets the widths for each cell in the provided row. */\n    _getCellWidths(row, recalculateCellWidths = true) {\n        if (!recalculateCellWidths && this._cachedCellWidths.length) {\n            return this._cachedCellWidths;\n        }\n        const cellWidths = [];\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            let cell = firstRowCells[i];\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        this._cachedCellWidths = cellWidths;\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the StickyPositioningListener. */\nconst STICKY_POSITIONING_LISTENER = new InjectionToken('CDK_SPL');\n\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass CdkRecycleRows {\n}\nCdkRecycleRows.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkRecycleRows, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nCdkRecycleRows.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkRecycleRows, selector: \"cdk-table[recycleRows], table[cdk-table][recycleRows]\", providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkRecycleRows, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-table[recycleRows], table[cdk-table][recycleRows]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }] });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\nclass DataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DataRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nDataRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: DataRowOutlet, selector: \"[rowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DataRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[rowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\nclass HeaderRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: HeaderRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nHeaderRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: HeaderRowOutlet, selector: \"[headerRowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: HeaderRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[headerRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\nclass FooterRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FooterRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nFooterRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: FooterRowOutlet, selector: \"[footerRowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FooterRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[footerRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\nclass NoDataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nNoDataRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NoDataRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nNoDataRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: NoDataRowOutlet, selector: \"[noDataRowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NoDataRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[noDataRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-content select=\"colgroup, col\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container noDataRowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\nclass CdkTable {\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, _viewRepeater, _coalescedStyleScheduler, _viewportRuler, \n    /**\n     * @deprecated `_stickyPositioningListener` parameter to become required.\n     * @breaking-change 13.0.0\n     */\n    _stickyPositioningListener, \n    /**\n     * @deprecated `_ngZone` parameter to become required.\n     * @breaking-change 14.0.0\n     */\n    _ngZone) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        this._viewRepeater = _viewRepeater;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._viewportRuler = _viewportRuler;\n        this._stickyPositioningListener = _stickyPositioningListener;\n        this._ngZone = _ngZone;\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n         * change.\n         */\n        this._stickyColumnStylesNeedReset = true;\n        /**\n         * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n         * `false`, cached values will be used instead. This is only applicable to tables with\n         * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n         */\n        this._forceRecalculateCellWidths = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        /**\n         * Whether to manually add positon: sticky to all sticky cell elements. Not needed if\n         * the position is set in a selector associated with the value of stickyCssClass. May be\n         * overridden by table subclasses\n         */\n        this.needsPositionStickyOnElement = true;\n        /** Whether the no data row is currently showing anything. */\n        this._isShowingNoDataRow = false;\n        this._multiTemplateDataRows = false;\n        this._fixedLayout = false;\n        /**\n         * Emits when the table completes rendering a set of data rows based on the latest data from the\n         * data source, even if the set of rows is empty.\n         */\n        this.contentChanged = new EventEmitter();\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * @docs-private\n         */\n        this.viewChange = new BehaviorSubject({\n            start: 0,\n            end: Number.MAX_VALUE,\n        });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'table');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    set trackBy(fn) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n     * and optimize rendering sticky styles for native tables. No-op for flex tables.\n     */\n    get fixedLayout() {\n        return this._fixedLayout;\n    }\n    set fixedLayout(v) {\n        this._fixedLayout = coerceBooleanProperty(v);\n        // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n        this._forceRecalculateCellWidths = true;\n        this._stickyColumnStylesNeedReset = true;\n    }\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        });\n        this._viewportRuler\n            .change()\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(() => {\n            this._forceRecalculateCellWidths = true;\n        });\n    }\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length &&\n            !this._footerRowDefs.length &&\n            !this._rowDefs.length &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        const columnsChanged = this._renderUpdatedColumns();\n        const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\n        // Ensure sticky column styles are reset if set to `true` elsewhere.\n        this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n        this._forceRecalculateCellWidths = rowDefsChanged;\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        else if (this._stickyColumnStylesNeedReset) {\n            // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n            // called when it row data arrives. Otherwise, we need to call it proactively.\n            this.updateStickyColumnStyles();\n        }\n        this._checkStickyStates();\n    }\n    ngOnDestroy() {\n        [\n            this._rowOutlet.viewContainer,\n            this._headerRowOutlet.viewContainer,\n            this._footerRowOutlet.viewContainer,\n            this._cachedRenderRowsMap,\n            this._customColumnDefs,\n            this._customRowDefs,\n            this._customHeaderRowDefs,\n            this._customFooterRowDefs,\n            this._columnDefsByName,\n        ].forEach(def => {\n            def.clear();\n        });\n        this._headerRowDefs = [];\n        this._footerRowDefs = [];\n        this._defaultRowDef = null;\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            this._updateNoDataRow();\n            this.contentChanged.next();\n            return;\n        }\n        const viewContainer = this._rowOutlet.viewContainer;\n        this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), record => record.item.data, (change) => {\n            if (change.operation === 1 /* INSERTED */ && change.context) {\n                this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n            }\n        });\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((record) => {\n            const rowView = viewContainer.get(record.currentIndex);\n            rowView.context.$implicit = record.item.data;\n        });\n        this._updateNoDataRow();\n        // Allow the new row data to render before measuring it.\n        // @breaking-change 14.0.0 Remove undefined check once _ngZone is required.\n        if (this._ngZone && NgZone.isInAngularZone()) {\n            this._ngZone.onStable.pipe(take(1), takeUntil(this._onDestroy)).subscribe(() => {\n                this.updateStickyColumnStyles();\n            });\n        }\n        else {\n            this.updateStickyColumnStyles();\n        }\n        this.contentChanged.next();\n    }\n    /** Adds a column definition that was not included as part of the content children. */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /** Removes a column definition that was not included as part of the content children. */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /** Adds a row definition that was not included as part of the content children. */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /** Removes a row definition that was not included as part of the content children. */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /** Adds a header row definition that was not included as part of the content children. */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Removes a header row definition that was not included as part of the content children. */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Adds a footer row definition that was not included as part of the content children. */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Removes a footer row definition that was not included as part of the content children. */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Sets a no data row definition that was not included as a part of the content children. */\n    setNoDataRow(noDataRow) {\n        this._customNoDataRow = noDataRow;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyHeaderRowStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._headerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyFooterRowStyles() {\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._footerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     */\n    updateStickyColumnStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n        // In a table using a fixed layout, row content won't affect column width, so sticky styles\n        // don't need to be cleared unless either the sticky column config changes or one of the row\n        // defs change.\n        if ((this._isNativeHtmlTable && !this._fixedLayout) || this._stickyColumnStylesNeedReset) {\n            // Clear the left and right positioning from all columns in the table across all rows since\n            // sticky columns span across all table sections (header, data, footer)\n            this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n            this._stickyColumnStylesNeedReset = false;\n        }\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        });\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach(rowDef => {\n            // Collect all the rows rendered with this row definition.\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        });\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        });\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     */\n    _getAllRenderRows() {\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            let data = this._data[i];\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                let renderRow = renderRowsForData[j];\n                const cache = this._cachedRenderRowsMap.get(renderRow.data);\n                if (cache.has(renderRow.rowDef)) {\n                    cache.get(renderRow.rowDef).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map(rowDef => {\n            const cachedRenderRows = cache && cache.has(rowDef) ? cache.get(rowDef) : [];\n            if (cachedRenderRows.length) {\n                const dataRow = cachedRenderRows.shift();\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        });\n    }\n    /** Update the map containing the content's column definitions. */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach(columnDef => {\n            if (this._columnDefsByName.has(columnDef.name) &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        });\n    }\n    /** Update the list of all available row definitions that can be used. */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n        if (!this.multiTemplateDataRows &&\n            defaultRowDefs.length > 1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     */\n    _renderUpdatedColumns() {\n        const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\n        // Force re-render data rows if the list of column definitions have changed.\n        const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n        if (dataColumnsChanged) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed.\n        const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n        if (headerColumnsChanged) {\n            this._forceRenderHeaderRows();\n        }\n        const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n        if (footerColumnsChanged) {\n            this._forceRenderFooterRows();\n        }\n        return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(data => {\n            this._data = data || [];\n            this.renderRows();\n        });\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n        this.updateStickyHeaderRowStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n        this.updateStickyFooterRowStyles();\n    }\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\n    _addStickyColumnStyles(rows, rowDef) {\n        const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return columnDef;\n        });\n        const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n        const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n    }\n    /** Gets the list of rows that have been rendered in the row outlet. */\n    _getRenderedRows(rowOutlet) {\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            const viewRef = rowOutlet.viewContainer.get(i);\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n        }\n        else {\n            let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    _getEmbeddedViewArgs(renderRow, index) {\n        const rowDef = renderRow.rowDef;\n        const context = { $implicit: renderRow.data };\n        return {\n            templateRef: rowDef.template,\n            context,\n            index,\n        };\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        this._renderCellTemplateForItem(rowDef, context);\n        return view;\n    }\n    _renderCellTemplateForItem(rowDef, context) {\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     */\n    _updateRowIndexContext() {\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            const viewRef = viewContainer.get(renderIndex);\n            const context = viewRef.context;\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /** Gets the column definitions for the provided row def. */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, columnId => {\n            const column = this._columnDefsByName.get(columnId);\n            if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        });\n    }\n    /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\n    _applyNativeTableSections() {\n        const documentFragment = this._document.createDocumentFragment();\n        const sections = [\n            { tag: 'thead', outlets: [this._headerRowOutlet] },\n            { tag: 'tbody', outlets: [this._rowOutlet, this._noDataRowOutlet] },\n            { tag: 'tfoot', outlets: [this._footerRowOutlet] },\n        ];\n        for (const section of sections) {\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            for (const outlet of section.outlets) {\n                element.appendChild(outlet.elementRef.nativeElement);\n            }\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     */\n    _checkStickyStates() {\n        const stickyCheckReducer = (acc, d) => {\n            return acc || d.hasStickyChanged();\n        };\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this._stickyColumnStylesNeedReset = true;\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     */\n    _setupStickyStyler() {\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        });\n    }\n    /** Filters definitions that belong to this table from a QueryList. */\n    _getOwnDefs(items) {\n        return items.filter(item => !item._table || item._table === this);\n    }\n    /** Creates or removes the no data row, depending on whether any data is being shown. */\n    _updateNoDataRow() {\n        const noDataRow = this._customNoDataRow || this._noDataRow;\n        if (!noDataRow) {\n            return;\n        }\n        const shouldShow = this._rowOutlet.viewContainer.length === 0;\n        if (shouldShow === this._isShowingNoDataRow) {\n            return;\n        }\n        const container = this._noDataRowOutlet.viewContainer;\n        if (shouldShow) {\n            const view = container.createEmbeddedView(noDataRow.templateRef);\n            const rootNode = view.rootNodes[0];\n            // Only add the attributes if we have a single root node since it's hard\n            // to figure out which one to add it to when there are multiple.\n            if (view.rootNodes.length === 1 && (rootNode === null || rootNode === void 0 ? void 0 : rootNode.nodeType) === this._document.ELEMENT_NODE) {\n                rootNode.setAttribute('role', 'row');\n                rootNode.classList.add(noDataRow._contentClassName);\n            }\n        }\n        else {\n            container.clear();\n        }\n        this._isShowingNoDataRow = shouldShow;\n    }\n}\nCdkTable.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTable, deps: [{ token: i0.IterableDiffers }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: 'role', attribute: true }, { token: i1.Directionality, optional: true }, { token: DOCUMENT }, { token: i2.Platform }, { token: _VIEW_REPEATER_STRATEGY }, { token: _COALESCED_STYLE_SCHEDULER }, { token: i3.ViewportRuler }, { token: STICKY_POSITIONING_LISTENER, optional: true, skipSelf: true }, { token: i0.NgZone, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nCdkTable.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkTable, selector: \"cdk-table, table[cdk-table]\", inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\", fixedLayout: \"fixedLayout\" }, outputs: { contentChanged: \"contentChanged\" }, host: { properties: { \"class.cdk-table-fixed-layout\": \"fixedLayout\" }, classAttribute: \"cdk-table\" }, providers: [\n        { provide: CDK_TABLE, useExisting: CdkTable },\n        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n        // Prevent nested tables from seeing this table's StickyPositioningListener.\n        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n    ], queries: [{ propertyName: \"_noDataRow\", first: true, predicate: CdkNoDataRow, descendants: true }, { propertyName: \"_contentColumnDefs\", predicate: CdkColumnDef, descendants: true }, { propertyName: \"_contentRowDefs\", predicate: CdkRowDef, descendants: true }, { propertyName: \"_contentHeaderRowDefs\", predicate: CdkHeaderRowDef, descendants: true }, { propertyName: \"_contentFooterRowDefs\", predicate: CdkFooterRowDef, descendants: true }], viewQueries: [{ propertyName: \"_rowOutlet\", first: true, predicate: DataRowOutlet, descendants: true, static: true }, { propertyName: \"_headerRowOutlet\", first: true, predicate: HeaderRowOutlet, descendants: true, static: true }, { propertyName: \"_footerRowOutlet\", first: true, predicate: FooterRowOutlet, descendants: true, static: true }, { propertyName: \"_noDataRowOutlet\", first: true, predicate: NoDataRowOutlet, descendants: true, static: true }], exportAs: [\"cdkTable\"], ngImport: i0, template: \"\\n  <ng-content select=\\\"caption\\\"></ng-content>\\n  <ng-content select=\\\"colgroup, col\\\"></ng-content>\\n  <ng-container headerRowOutlet></ng-container>\\n  <ng-container rowOutlet></ng-container>\\n  <ng-container noDataRowOutlet></ng-container>\\n  <ng-container footerRowOutlet></ng-container>\\n\", isInline: true, styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"], directives: [{ type: HeaderRowOutlet, selector: \"[headerRowOutlet]\" }, { type: DataRowOutlet, selector: \"[rowOutlet]\" }, { type: NoDataRowOutlet, selector: \"[noDataRowOutlet]\" }, { type: FooterRowOutlet, selector: \"[footerRowOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTable, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-table, table[cdk-table]', exportAs: 'cdkTable', template: CDK_TABLE_TEMPLATE, host: {\n                        'class': 'cdk-table',\n                        '[class.cdk-table-fixed-layout]': 'fixedLayout',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, providers: [\n                        { provide: CDK_TABLE, useExisting: CdkTable },\n                        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                        // Prevent nested tables from seeing this table's StickyPositioningListener.\n                        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                    ], styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.IterableDiffers }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['role']\n                    }] }, { type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i2.Platform }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [_VIEW_REPEATER_STRATEGY]\n                    }] }, { type: _CoalescedStyleScheduler, decorators: [{\n                        type: Inject,\n                        args: [_COALESCED_STYLE_SCHEDULER]\n                    }] }, { type: i3.ViewportRuler }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }, {\n                        type: Inject,\n                        args: [STICKY_POSITIONING_LISTENER]\n                    }] }, { type: i0.NgZone, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { trackBy: [{\n                type: Input\n            }], dataSource: [{\n                type: Input\n            }], multiTemplateDataRows: [{\n                type: Input\n            }], fixedLayout: [{\n                type: Input\n            }], contentChanged: [{\n                type: Output\n            }], _rowOutlet: [{\n                type: ViewChild,\n                args: [DataRowOutlet, { static: true }]\n            }], _headerRowOutlet: [{\n                type: ViewChild,\n                args: [HeaderRowOutlet, { static: true }]\n            }], _footerRowOutlet: [{\n                type: ViewChild,\n                args: [FooterRowOutlet, { static: true }]\n            }], _noDataRowOutlet: [{\n                type: ViewChild,\n                args: [NoDataRowOutlet, { static: true }]\n            }], _contentColumnDefs: [{\n                type: ContentChildren,\n                args: [CdkColumnDef, { descendants: true }]\n            }], _contentRowDefs: [{\n                type: ContentChildren,\n                args: [CdkRowDef, { descendants: true }]\n            }], _contentHeaderRowDefs: [{\n                type: ContentChildren,\n                args: [CdkHeaderRowDef, {\n                        descendants: true,\n                    }]\n            }], _contentFooterRowDefs: [{\n                type: ContentChildren,\n                args: [CdkFooterRowDef, {\n                        descendants: true,\n                    }]\n            }], _noDataRow: [{\n                type: ContentChild,\n                args: [CdkNoDataRow]\n            }] } });\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass CdkTextColumn {\n    constructor(\n    // `CdkTextColumn` is always requiring a table, but we just assert it manually\n    // for better error reporting.\n    // tslint:disable-next-line: lightweight-tokens\n    _table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /** Alignment of the cell values. */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /** Column name that should be used to reference this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((data, name) => data[name]);\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     */\n    _createDefaultHeaderText() {\n        const name = this.name;\n        if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /** Synchronizes the column definition name with the text column name. */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTextColumn, deps: [{ token: CdkTable, optional: true }, { token: TEXT_COLUMN_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nCdkTextColumn.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkTextColumn, selector: \"cdk-text-column\", inputs: { name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\", justify: \"justify\" }, viewQueries: [{ propertyName: \"columnDef\", first: true, predicate: CdkColumnDef, descendants: true, static: true }, { propertyName: \"cell\", first: true, predicate: CdkCellDef, descendants: true, static: true }, { propertyName: \"headerCell\", first: true, predicate: CdkHeaderCellDef, descendants: true, static: true }], ngImport: i0, template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `, isInline: true, directives: [{ type: CdkColumnDef, selector: \"[cdkColumnDef]\", inputs: [\"sticky\", \"cdkColumnDef\", \"stickyEnd\"] }, { type: CdkHeaderCellDef, selector: \"[cdkHeaderCellDef]\" }, { type: CdkHeaderCell, selector: \"cdk-header-cell, th[cdk-header-cell]\" }, { type: CdkCellDef, selector: \"[cdkCellDef]\" }, { type: CdkCell, selector: \"cdk-cell, td[cdk-cell]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTextColumn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-text-column',\n                    template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                    encapsulation: ViewEncapsulation.None,\n                    // Change detection is intentionally not set to OnPush. This component's template will be provided\n                    // to the table to be inserted into its view. This is problematic when change detection runs since\n                    // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                    // mean's the template in the table's view will not have the updated value (and in fact will cause\n                    // an ExpressionChangedAfterItHasBeenCheckedError).\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                }]\n        }], ctorParameters: function () {\n        return [{ type: CdkTable, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [TEXT_COLUMN_OPTIONS]\n                    }] }];\n    }, propDecorators: { name: [{\n                type: Input\n            }], headerText: [{\n                type: Input\n            }], dataAccessor: [{\n                type: Input\n            }], justify: [{\n                type: Input\n            }], columnDef: [{\n                type: ViewChild,\n                args: [CdkColumnDef, { static: true }]\n            }], cell: [{\n                type: ViewChild,\n                args: [CdkCellDef, { static: true }]\n            }], headerCell: [{\n                type: ViewChild,\n                args: [CdkHeaderCellDef, { static: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n    CdkNoDataRow,\n    CdkRecycleRows,\n    NoDataRowOutlet,\n];\nclass CdkTableModule {\n}\nCdkTableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdkTableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTableModule, declarations: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn,\n        CdkNoDataRow,\n        CdkRecycleRows,\n        NoDataRowOutlet], imports: [ScrollingModule], exports: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn,\n        CdkNoDataRow,\n        CdkRecycleRows,\n        NoDataRowOutlet] });\nCdkTableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTableModule, imports: [[ScrollingModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: EXPORTED_DECLARATIONS,\n                    declarations: EXPORTED_DECLARATIONS,\n                    imports: [ScrollingModule],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRecycleRows, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };\n","import * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport * as i3 from '@angular/cdk/portal';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Optional, Inject, ViewChild, Component, ViewEncapsulation, ChangeDetectionStrategy, InjectionToken, Injector, TemplateRef, InjectFlags, Injectable, SkipSelf, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Subject, defer, of } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport { trigger, state, style, transition, group, animate, query, animateChild } from '@angular/animations';\nimport * as i1 from '@angular/cdk/a11y';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n */\nclass MatDialogConfig {\n    constructor() {\n        /** The ARIA role of the dialog element. */\n        this.role = 'dialog';\n        /** Custom class for the overlay pane. */\n        this.panelClass = '';\n        /** Whether the dialog has a backdrop. */\n        this.hasBackdrop = true;\n        /** Custom class for the backdrop. */\n        this.backdropClass = '';\n        /** Whether the user can use escape or clicking on the backdrop to close the modal. */\n        this.disableClose = false;\n        /** Width of the dialog. */\n        this.width = '';\n        /** Height of the dialog. */\n        this.height = '';\n        /** Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw. */\n        this.maxWidth = '80vw';\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** ID of the element that describes the dialog. */\n        this.ariaDescribedBy = null;\n        /** ID of the element that labels the dialog. */\n        this.ariaLabelledBy = null;\n        /** Aria label to assign to the dialog element. */\n        this.ariaLabel = null;\n        /**\n         * Where the dialog should focus on open.\n         * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n         * AutoFocusTarget instead.\n         */\n        this.autoFocus = 'first-tabbable';\n        /**\n         * Whether the dialog should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n        /** Whether to wait for the opening animation to finish before trapping focus. */\n        this.delayFocusTrap = true;\n        /**\n         * Whether the dialog should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by MatDialog.\n * @docs-private\n */\nconst matDialogAnimations = {\n    /** Animation that is applied on the dialog container by default. */\n    dialogContainer: trigger('dialogContainer', [\n        // Note: The `enter` animation transitions to `transform: none`, because for some reason\n        // specifying the transform explicitly, causes IE both to blur the dialog content and\n        // decimate the animation performance. Leaving it as `none` solves both issues.\n        state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\n        state('enter', style({ transform: 'none' })),\n        transition('* => enter', group([\n            animate('150ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 })),\n            query('@*', animateChild(), { optional: true }),\n        ])),\n        transition('* => void, * => exit', group([\n            animate('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 })),\n            query('@*', animateChild(), { optional: true }),\n        ])),\n    ]),\n};\n\n/**\n * Throws an exception for the case when a ComponentPortal is\n * attached to a DomPortalOutlet without an origin.\n * @docs-private\n */\nfunction throwMatDialogContentAlreadyAttachedError() {\n    throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Base class for the `MatDialogContainer`. The base class does not implement\n * animations as these are left to implementers of the dialog container.\n */\nclass _MatDialogContainerBase extends BasePortalOutlet {\n    constructor(_elementRef, _focusTrapFactory, _changeDetectorRef, _document, \n    /** The dialog configuration. */\n    _config, _interactivityChecker, _ngZone, _focusMonitor) {\n        super();\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._config = _config;\n        this._interactivityChecker = _interactivityChecker;\n        this._ngZone = _ngZone;\n        this._focusMonitor = _focusMonitor;\n        /** Emits when an animation state changes. */\n        this._animationStateChanged = new EventEmitter();\n        /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n        this._elementFocusedBeforeDialogWasOpened = null;\n        /**\n         * Type of interaction that led to the dialog being closed. This is used to determine\n         * whether the focus style will be applied when returning focus to its original location\n         * after the dialog is closed.\n         */\n        this._closeInteractionType = null;\n        /**\n         * Attaches a DOM portal to the dialog container.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwMatDialogContentAlreadyAttachedError();\n            }\n            return this._portalOutlet.attachDomPortal(portal);\n        };\n        this._ariaLabelledBy = _config.ariaLabelledBy || null;\n        this._document = _document;\n    }\n    /** Initializes the dialog container with the attached content. */\n    _initializeWithAttachedContent() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        // Save the previously focused element. This element will be re-focused\n        // when the dialog closes.\n        if (this._document) {\n            this._elementFocusedBeforeDialogWasOpened = _getFocusedElementPierceShadowDom();\n        }\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachComponentPortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachTemplatePortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /** Moves focus back into the dialog if it was moved out. */\n    _recaptureFocus() {\n        if (!this._containsFocus()) {\n            this._trapFocus();\n        }\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n        if (!this._interactivityChecker.isFocusable(element)) {\n            element.tabIndex = -1;\n            // The tabindex attribute should be removed to avoid navigating to that element again\n            this._ngZone.runOutsideAngular(() => {\n                const callback = () => {\n                    element.removeEventListener('blur', callback);\n                    element.removeEventListener('mousedown', callback);\n                    element.removeAttribute('tabindex');\n                };\n                element.addEventListener('blur', callback);\n                element.addEventListener('mousedown', callback);\n            });\n        }\n        element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n        let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n        if (elementToFocus) {\n            this._forceFocus(elementToFocus, options);\n        }\n    }\n    /**\n     * Moves the focus inside the focus trap. When autoFocus is not set to 'dialog', if focus\n     * cannot be moved then focus will go to the dialog container.\n     */\n    _trapFocus() {\n        const element = this._elementRef.nativeElement;\n        // If were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty when setting focus when autoFocus isn't set to\n        // dialog. If the element inside the dialog can't be focused, then the container is focused\n        // so the user can't tab into other elements behind it.\n        switch (this._config.autoFocus) {\n            case false:\n            case 'dialog':\n                // Ensure that focus is on the dialog container. It's possible that a different\n                // component tried to move focus while the open animation was running. See:\n                // https://github.com/angular/components/issues/16215. Note that we only want to do this\n                // if the focus isn't inside the dialog already, because it's possible that the consumer\n                // turned off `autoFocus` in order to move focus themselves.\n                if (!this._containsFocus()) {\n                    element.focus();\n                }\n                break;\n            case true:\n            case 'first-tabbable':\n                this._focusTrap.focusInitialElementWhenReady().then(focusedSuccessfully => {\n                    // If we weren't able to find a focusable element in the dialog, then focus the dialog\n                    // container instead.\n                    if (!focusedSuccessfully) {\n                        this._focusDialogContainer();\n                    }\n                });\n                break;\n            case 'first-heading':\n                this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n                break;\n            default:\n                this._focusByCssSelector(this._config.autoFocus);\n                break;\n        }\n    }\n    /** Restores focus to the element that was focused before the dialog opened. */\n    _restoreFocus() {\n        const previousElement = this._elementFocusedBeforeDialogWasOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this._config.restoreFocus &&\n            previousElement &&\n            typeof previousElement.focus === 'function') {\n            const activeElement = _getFocusedElementPierceShadowDom();\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the dialog or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement ||\n                activeElement === this._document.body ||\n                activeElement === element ||\n                element.contains(activeElement)) {\n                if (this._focusMonitor) {\n                    this._focusMonitor.focusVia(previousElement, this._closeInteractionType);\n                    this._closeInteractionType = null;\n                }\n                else {\n                    previousElement.focus();\n                }\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /** Focuses the dialog container. */\n    _focusDialogContainer() {\n        // Note that there is no focus method when rendering on the server.\n        if (this._elementRef.nativeElement.focus) {\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /** Returns whether focus is inside the dialog. */\n    _containsFocus() {\n        const element = this._elementRef.nativeElement;\n        const activeElement = _getFocusedElementPierceShadowDom();\n        return element === activeElement || element.contains(activeElement);\n    }\n}\n_MatDialogContainerBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatDialogContainerBase, deps: [{ token: i0.ElementRef }, { token: i1.FocusTrapFactory }, { token: i0.ChangeDetectorRef }, { token: DOCUMENT, optional: true }, { token: MatDialogConfig }, { token: i1.InteractivityChecker }, { token: i0.NgZone }, { token: i1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Directive });\n_MatDialogContainerBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatDialogContainerBase, viewQueries: [{ propertyName: \"_portalOutlet\", first: true, predicate: CdkPortalOutlet, descendants: true, static: true }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatDialogContainerBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.FocusTrapFactory }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: MatDialogConfig }, { type: i1.InteractivityChecker }, { type: i0.NgZone }, { type: i1.FocusMonitor }];\n    }, propDecorators: { _portalOutlet: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet, { static: true }]\n            }] } });\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * @docs-private\n */\nclass MatDialogContainer extends _MatDialogContainerBase {\n    constructor() {\n        super(...arguments);\n        /** State of the dialog animation. */\n        this._state = 'enter';\n    }\n    /** Callback, invoked whenever an animation on the host completes. */\n    _onAnimationDone({ toState, totalTime }) {\n        if (toState === 'enter') {\n            if (this._config.delayFocusTrap) {\n                this._trapFocus();\n            }\n            this._animationStateChanged.next({ state: 'opened', totalTime });\n        }\n        else if (toState === 'exit') {\n            this._restoreFocus();\n            this._animationStateChanged.next({ state: 'closed', totalTime });\n        }\n    }\n    /** Callback, invoked when an animation on the host starts. */\n    _onAnimationStart({ toState, totalTime }) {\n        if (toState === 'enter') {\n            this._animationStateChanged.next({ state: 'opening', totalTime });\n        }\n        else if (toState === 'exit' || toState === 'void') {\n            this._animationStateChanged.next({ state: 'closing', totalTime });\n        }\n    }\n    /** Starts the dialog exit animation. */\n    _startExitAnimation() {\n        this._state = 'exit';\n        // Mark the container for check so it can react if the\n        // view container is using OnPush change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n    _initializeWithAttachedContent() {\n        super._initializeWithAttachedContent();\n        if (!this._config.delayFocusTrap) {\n            this._trapFocus();\n        }\n    }\n}\nMatDialogContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialogContainer, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatDialogContainer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatDialogContainer, selector: \"mat-dialog-container\", host: { attributes: { \"tabindex\": \"-1\", \"aria-modal\": \"true\" }, listeners: { \"@dialogContainer.start\": \"_onAnimationStart($event)\", \"@dialogContainer.done\": \"_onAnimationDone($event)\" }, properties: { \"id\": \"_id\", \"attr.role\": \"_config.role\", \"attr.aria-labelledby\": \"_config.ariaLabel ? null : _ariaLabelledBy\", \"attr.aria-label\": \"_config.ariaLabel\", \"attr.aria-describedby\": \"_config.ariaDescribedBy || null\", \"@dialogContainer\": \"_state\" }, classAttribute: \"mat-dialog-container\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template cdkPortalOutlet></ng-template>\\n\", styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], directives: [{ type: i3.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matDialogAnimations.dialogContainer], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialogContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-dialog-container', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, animations: [matDialogAnimations.dialogContainer], host: {\n                        'class': 'mat-dialog-container',\n                        'tabindex': '-1',\n                        'aria-modal': 'true',\n                        '[id]': '_id',\n                        '[attr.role]': '_config.role',\n                        '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledBy',\n                        '[attr.aria-label]': '_config.ariaLabel',\n                        '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                        '[@dialogContainer]': '_state',\n                        '(@dialogContainer.start)': '_onAnimationStart($event)',\n                        '(@dialogContainer.done)': '_onAnimationDone($event)',\n                    }, template: \"<ng-template cdkPortalOutlet></ng-template>\\n\", styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"] }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jelbourn): resizing\n// Counter for unique dialog ids.\nlet uniqueId = 0;\n/**\n * Reference to a dialog opened via the MatDialog service.\n */\nclass MatDialogRef {\n    constructor(_overlayRef, _containerInstance, \n    /** Id of the dialog. */\n    id = `mat-dialog-${uniqueId++}`) {\n        this._overlayRef = _overlayRef;\n        this._containerInstance = _containerInstance;\n        this.id = id;\n        /** Whether the user is allowed to close the dialog. */\n        this.disableClose = this._containerInstance._config.disableClose;\n        /** Subject for notifying the user that the dialog has finished opening. */\n        this._afterOpened = new Subject();\n        /** Subject for notifying the user that the dialog has finished closing. */\n        this._afterClosed = new Subject();\n        /** Subject for notifying the user that the dialog has started closing. */\n        this._beforeClosed = new Subject();\n        /** Current state of the dialog. */\n        this._state = 0 /* OPEN */;\n        // Pass the id along to the container.\n        _containerInstance._id = id;\n        // Emit when opening animation completes\n        _containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'opened'), take(1))\n            .subscribe(() => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        });\n        // Dispose overlay when closing animation is complete\n        _containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'closed'), take(1))\n            .subscribe(() => {\n            clearTimeout(this._closeFallbackTimeout);\n            this._finishDialogClose();\n        });\n        _overlayRef.detachments().subscribe(() => {\n            this._beforeClosed.next(this._result);\n            this._beforeClosed.complete();\n            this._afterClosed.next(this._result);\n            this._afterClosed.complete();\n            this.componentInstance = null;\n            this._overlayRef.dispose();\n        });\n        _overlayRef\n            .keydownEvents()\n            .pipe(filter(event => {\n            return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n        }))\n            .subscribe(event => {\n            event.preventDefault();\n            _closeDialogVia(this, 'keyboard');\n        });\n        _overlayRef.backdropClick().subscribe(() => {\n            if (this.disableClose) {\n                this._containerInstance._recaptureFocus();\n            }\n            else {\n                _closeDialogVia(this, 'mouse');\n            }\n        });\n    }\n    /**\n     * Close the dialog.\n     * @param dialogResult Optional result to return to the dialog opener.\n     */\n    close(dialogResult) {\n        this._result = dialogResult;\n        // Transition the backdrop in parallel to the dialog.\n        this._containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'closing'), take(1))\n            .subscribe(event => {\n            this._beforeClosed.next(dialogResult);\n            this._beforeClosed.complete();\n            this._overlayRef.detachBackdrop();\n            // The logic that disposes of the overlay depends on the exit animation completing, however\n            // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n            // timeout which will clean everything up if the animation hasn't fired within the specified\n            // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n            // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n            this._closeFallbackTimeout = setTimeout(() => this._finishDialogClose(), event.totalTime + 100);\n        });\n        this._state = 1 /* CLOSING */;\n        this._containerInstance._startExitAnimation();\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     */\n    afterOpened() {\n        return this._afterOpened;\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     */\n    afterClosed() {\n        return this._afterClosed;\n    }\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     */\n    beforeClosed() {\n        return this._beforeClosed;\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     */\n    backdropClick() {\n        return this._overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     */\n    keydownEvents() {\n        return this._overlayRef.keydownEvents();\n    }\n    /**\n     * Updates the dialog's position.\n     * @param position New dialog position.\n     */\n    updatePosition(position) {\n        let strategy = this._getPositionStrategy();\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        this._overlayRef.updatePosition();\n        return this;\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @param width New width of the dialog.\n     * @param height New height of the dialog.\n     */\n    updateSize(width = '', height = '') {\n        this._overlayRef.updateSize({ width, height });\n        this._overlayRef.updatePosition();\n        return this;\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        this._overlayRef.addPanelClass(classes);\n        return this;\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        this._overlayRef.removePanelClass(classes);\n        return this;\n    }\n    /** Gets the current state of the dialog's lifecycle. */\n    getState() {\n        return this._state;\n    }\n    /**\n     * Finishes the dialog close by updating the state of the dialog\n     * and disposing the overlay.\n     */\n    _finishDialogClose() {\n        this._state = 2 /* CLOSED */;\n        this._overlayRef.dispose();\n    }\n    /** Fetches the position strategy object from the overlay ref. */\n    _getPositionStrategy() {\n        return this._overlayRef.getConfig().positionStrategy;\n    }\n}\n/**\n * Closes the dialog with the specified interaction type. This is currently not part of\n * `MatDialogRef` as that would conflict with custom dialog ref mocks provided in tests.\n * More details. See: https://github.com/angular/components/pull/9257#issuecomment-651342226.\n */\n// TODO: TODO: Move this back into `MatDialogRef` when we provide an official mock dialog ref.\nfunction _closeDialogVia(ref, interactionType, result) {\n    // Some mock dialog ref instances in tests do not have the `_containerInstance` property.\n    // For those, we keep the behavior as is and do not deal with the interaction type.\n    if (ref._containerInstance !== undefined) {\n        ref._containerInstance._closeInteractionType = interactionType;\n    }\n    return ref.close(result);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to access the data that was passed in to a dialog. */\nconst MAT_DIALOG_DATA = new InjectionToken('MatDialogData');\n/** Injection token that can be used to specify default dialog options. */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-dialog-default-options');\n/** Injection token that determines the scroll handling while the dialog is open. */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-dialog-scroll-strategy');\n/** @docs-private */\nfunction MAT_DIALOG_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/** @docs-private */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/** @docs-private */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Base class for dialog services. The base dialog service allows\n * for arbitrary dialog refs and dialog container components.\n */\nclass _MatDialogBase {\n    constructor(_overlay, _injector, _defaultOptions, _parentDialog, _overlayContainer, scrollStrategy, _dialogRefConstructor, _dialogContainerType, _dialogDataToken, \n    /**\n     * @deprecated No longer used. To be removed.\n     * @breaking-change 14.0.0\n     */\n    _animationMode) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._defaultOptions = _defaultOptions;\n        this._parentDialog = _parentDialog;\n        this._overlayContainer = _overlayContainer;\n        this._dialogRefConstructor = _dialogRefConstructor;\n        this._dialogContainerType = _dialogContainerType;\n        this._dialogDataToken = _dialogDataToken;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this._ariaHiddenElements = new Map();\n        // TODO (jelbourn): tighten the typing right-hand side of this expression.\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = defer(() => this.openDialogs.length\n            ? this._getAfterAllClosed()\n            : this._getAfterAllClosed().pipe(startWith(undefined)));\n        this._scrollStrategy = scrollStrategy;\n    }\n    /** Keeps track of the currently-open dialogs. */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /** Stream that emits when a dialog has been opened. */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    _getAfterAllClosed() {\n        const parent = this._parentDialog;\n        return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n    }\n    open(componentOrTemplateRef, config) {\n        config = _applyConfigDefaults(config, this._defaultOptions || new MatDialogConfig());\n        if (config.id &&\n            this.getDialogById(config.id) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n        }\n        const overlayRef = this._createOverlay(config);\n        const dialogContainer = this._attachDialogContainer(overlayRef, config);\n        const dialogRef = this._attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config);\n        // If this is the first dialog that we're opening, hide all the non-overlay content.\n        if (!this.openDialogs.length) {\n            this._hideNonDialogContentFromAssistiveTechnology();\n        }\n        this.openDialogs.push(dialogRef);\n        dialogRef.afterClosed().subscribe(() => this._removeOpenDialog(dialogRef));\n        this.afterOpened.next(dialogRef);\n        // Notify the dialog container that the content has been attached.\n        dialogContainer._initializeWithAttachedContent();\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    closeAll() {\n        this._closeDialogs(this.openDialogs);\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    getDialogById(id) {\n        return this.openDialogs.find(dialog => dialog.id === id);\n    }\n    ngOnDestroy() {\n        // Only close the dialogs at this level on destroy\n        // since the parent service may still be active.\n        this._closeDialogs(this._openDialogsAtThisLevel);\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n    }\n    /**\n     * Creates the overlay into which the dialog will be loaded.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to the OverlayRef for the created overlay.\n     */\n    _createOverlay(config) {\n        const overlayConfig = this._getOverlayConfig(config);\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an overlay config from a dialog config.\n     * @param dialogConfig The dialog configuration.\n     * @returns The overlay configuration.\n     */\n    _getOverlayConfig(dialogConfig) {\n        const state = new OverlayConfig({\n            positionStrategy: this._overlay.position().global(),\n            scrollStrategy: dialogConfig.scrollStrategy || this._scrollStrategy(),\n            panelClass: dialogConfig.panelClass,\n            hasBackdrop: dialogConfig.hasBackdrop,\n            direction: dialogConfig.direction,\n            minWidth: dialogConfig.minWidth,\n            minHeight: dialogConfig.minHeight,\n            maxWidth: dialogConfig.maxWidth,\n            maxHeight: dialogConfig.maxHeight,\n            disposeOnNavigation: dialogConfig.closeOnNavigation,\n        });\n        if (dialogConfig.backdropClass) {\n            state.backdropClass = dialogConfig.backdropClass;\n        }\n        return state;\n    }\n    /**\n     * Attaches a dialog container to a dialog's already-created overlay.\n     * @param overlay Reference to the dialog's underlying overlay.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to a ComponentRef for the attached container.\n     */\n    _attachDialogContainer(overlay, config) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatDialogConfig, useValue: config }],\n        });\n        const containerPortal = new ComponentPortal(this._dialogContainerType, config.viewContainerRef, injector, config.componentFactoryResolver);\n        const containerRef = overlay.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Attaches the user-provided component to the already-created dialog container.\n     * @param componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param dialogContainer Reference to the wrapping dialog container.\n     * @param overlayRef Reference to the overlay in which the dialog resides.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to the MatDialogRef that should be returned to the user.\n     */\n    _attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config) {\n        // Create a reference to the dialog we're creating in order to give the user a handle\n        // to modify and close it.\n        const dialogRef = new this._dialogRefConstructor(overlayRef, dialogContainer, config.id);\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, {\n                $implicit: config.data,\n                dialogRef,\n            }));\n        }\n        else {\n            const injector = this._createInjector(config, dialogRef, dialogContainer);\n            const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector, config.componentFactoryResolver));\n            dialogRef.componentInstance = contentRef.instance;\n        }\n        dialogRef.updateSize(config.width, config.height).updatePosition(config.position);\n        return dialogRef;\n    }\n    /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the dialog.\n     * @param dialogRef Reference to the dialog.\n     * @param dialogContainer Dialog container element that wraps all of the contents.\n     * @returns The custom injector that can be used inside the dialog.\n     */\n    _createInjector(config, dialogRef, dialogContainer) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        // The dialog container should be provided as the dialog container and the dialog's\n        // content are created out of the same `ViewContainerRef` and as such, are siblings\n        // for injector purposes. To allow the hierarchy that is expected, the dialog\n        // container is explicitly provided in the injector.\n        const providers = [\n            { provide: this._dialogContainerType, useValue: dialogContainer },\n            { provide: this._dialogDataToken, useValue: config.data },\n            { provide: this._dialogRefConstructor, useValue: dialogRef },\n        ];\n        if (config.direction &&\n            (!userInjector ||\n                !userInjector.get(Directionality, null, InjectFlags.Optional))) {\n            providers.push({\n                provide: Directionality,\n                useValue: { value: config.direction, change: of() },\n            });\n        }\n        return Injector.create({ parent: userInjector || this._injector, providers });\n    }\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @param dialogRef Dialog to be removed.\n     */\n    _removeOpenDialog(dialogRef) {\n        const index = this.openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\n            // to a the siblings and emit to the `afterAllClosed` stream.\n            if (!this.openDialogs.length) {\n                this._ariaHiddenElements.forEach((previousValue, element) => {\n                    if (previousValue) {\n                        element.setAttribute('aria-hidden', previousValue);\n                    }\n                    else {\n                        element.removeAttribute('aria-hidden');\n                    }\n                });\n                this._ariaHiddenElements.clear();\n                this._getAfterAllClosed().next();\n            }\n        }\n    }\n    /**\n     * Hides all of the content that isn't an overlay from assistive technology.\n     */\n    _hideNonDialogContentFromAssistiveTechnology() {\n        const overlayContainer = this._overlayContainer.getContainerElement();\n        // Ensure that the overlay container is attached to the DOM.\n        if (overlayContainer.parentElement) {\n            const siblings = overlayContainer.parentElement.children;\n            for (let i = siblings.length - 1; i > -1; i--) {\n                let sibling = siblings[i];\n                if (sibling !== overlayContainer &&\n                    sibling.nodeName !== 'SCRIPT' &&\n                    sibling.nodeName !== 'STYLE' &&\n                    !sibling.hasAttribute('aria-live')) {\n                    this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }\n        }\n    }\n    /** Closes all of the dialogs in an array. */\n    _closeDialogs(dialogs) {\n        let i = dialogs.length;\n        while (i--) {\n            // The `_openDialogs` property isn't updated after close until the rxjs subscription\n            // runs on the next microtask, in addition to modifying the array as we're going\n            // through it. We loop through all of them and call close without assuming that\n            // they'll be removed from the list instantaneously.\n            dialogs[i].close();\n        }\n    }\n}\n_MatDialogBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatDialogBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\n_MatDialogBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatDialogBase, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatDialogBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: undefined }, { type: undefined }, { type: i1$1.OverlayContainer }, { type: undefined }, { type: i0.Type }, { type: i0.Type }, { type: i0.InjectionToken }, { type: undefined }]; } });\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog extends _MatDialogBase {\n    constructor(overlay, injector, \n    /**\n     * @deprecated `_location` parameter to be removed.\n     * @breaking-change 10.0.0\n     */\n    location, defaultOptions, scrollStrategy, parentDialog, overlayContainer, \n    /**\n     * @deprecated No longer used. To be removed.\n     * @breaking-change 14.0.0\n     */\n    animationMode) {\n        super(overlay, injector, defaultOptions, parentDialog, overlayContainer, scrollStrategy, MatDialogRef, MatDialogContainer, MAT_DIALOG_DATA, animationMode);\n    }\n}\nMatDialog.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialog, deps: [{ token: i1$1.Overlay }, { token: i0.Injector }, { token: i2.Location, optional: true }, { token: MAT_DIALOG_DEFAULT_OPTIONS, optional: true }, { token: MAT_DIALOG_SCROLL_STRATEGY }, { token: MatDialog, optional: true, skipSelf: true }, { token: i1$1.OverlayContainer }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nMatDialog.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialog });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialog, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: i2.Location, decorators: [{\n                        type: Optional\n                    }] }, { type: MatDialogConfig, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DIALOG_DEFAULT_OPTIONS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_DIALOG_SCROLL_STRATEGY]\n                    }] }, { type: MatDialog, decorators: [{\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }] }, { type: i1$1.OverlayContainer }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    } });\n/**\n * Applies default options to the dialog config.\n * @param config Config to be modified.\n * @param defaultOptions Default options provided.\n * @returns The new configuration object.\n */\nfunction _applyConfigDefaults(config, defaultOptions) {\n    return Object.assign(Object.assign({}, defaultOptions), config);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique IDs for dialog elements. */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n    constructor(\n    /**\n     * Reference to the containing dialog.\n     * @deprecated `dialogRef` property to become private.\n     * @breaking-change 13.0.0\n     */\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    dialogRef, _elementRef, _dialog) {\n        this.dialogRef = dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /** Default to \"button\" to prevents accidental form submits. */\n        this.type = 'button';\n    }\n    ngOnInit() {\n        if (!this.dialogRef) {\n            // When this directive is included in a dialog via TemplateRef (rather than being\n            // in a Component), the DialogRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the DialogRef by\n            // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n            // be resolved at constructor time.\n            this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n    }\n    ngOnChanges(changes) {\n        const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n        if (proxiedChange) {\n            this.dialogResult = proxiedChange.currentValue;\n        }\n    }\n    _onButtonClick(event) {\n        // Determinate the focus origin using the click event, because using the FocusMonitor will\n        // result in incorrect origins. Most of the time, close buttons will be auto focused in the\n        // dialog, and therefore clicking the button won't result in a focus change. This means that\n        // the FocusMonitor won't detect any origin change, and will always output `program`.\n        _closeDialogVia(this.dialogRef, event.screenX === 0 && event.screenY === 0 ? 'keyboard' : 'mouse', this.dialogResult);\n    }\n}\nMatDialogClose.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialogClose, deps: [{ token: MatDialogRef, optional: true }, { token: i0.ElementRef }, { token: MatDialog }], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogClose.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatDialogClose, selector: \"[mat-dialog-close], [matDialogClose]\", inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], type: \"type\", dialogResult: [\"mat-dialog-close\", \"dialogResult\"], _matDialogClose: [\"matDialogClose\", \"_matDialogClose\"] }, host: { listeners: { \"click\": \"_onButtonClick($event)\" }, properties: { \"attr.aria-label\": \"ariaLabel || null\", \"attr.type\": \"type\" } }, exportAs: [\"matDialogClose\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialogClose, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-dialog-close], [matDialogClose]',\n                    exportAs: 'matDialogClose',\n                    host: {\n                        '(click)': '_onButtonClick($event)',\n                        '[attr.aria-label]': 'ariaLabel || null',\n                        '[attr.type]': 'type',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: MatDialogRef, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.ElementRef }, { type: MatDialog }];\n    }, propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], type: [{\n                type: Input\n            }], dialogResult: [{\n                type: Input,\n                args: ['mat-dialog-close']\n            }], _matDialogClose: [{\n                type: Input,\n                args: ['matDialogClose']\n            }] } });\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle {\n    constructor(\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    _dialogRef, _elementRef, _dialog) {\n        this._dialogRef = _dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /** Unique id for the dialog title. If none is supplied, it will be auto-generated. */\n        this.id = `mat-dialog-title-${dialogElementUid++}`;\n    }\n    ngOnInit() {\n        if (!this._dialogRef) {\n            this._dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n        if (this._dialogRef) {\n            Promise.resolve().then(() => {\n                const container = this._dialogRef._containerInstance;\n                if (container && !container._ariaLabelledBy) {\n                    container._ariaLabelledBy = this.id;\n                }\n            });\n        }\n    }\n}\nMatDialogTitle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialogTitle, deps: [{ token: MatDialogRef, optional: true }, { token: i0.ElementRef }, { token: MatDialog }], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogTitle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatDialogTitle, selector: \"[mat-dialog-title], [matDialogTitle]\", inputs: { id: \"id\" }, host: { properties: { \"id\": \"id\" }, classAttribute: \"mat-dialog-title\" }, exportAs: [\"matDialogTitle\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialogTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-dialog-title], [matDialogTitle]',\n                    exportAs: 'matDialogTitle',\n                    host: {\n                        'class': 'mat-dialog-title',\n                        '[id]': 'id',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: MatDialogRef, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.ElementRef }, { type: MatDialog }];\n    }, propDecorators: { id: [{\n                type: Input\n            }] } });\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n}\nMatDialogContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialogContent, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatDialogContent, selector: \"[mat-dialog-content], mat-dialog-content, [matDialogContent]\", host: { classAttribute: \"mat-dialog-content\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialogContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n                    host: { 'class': 'mat-dialog-content' },\n                }]\n        }] });\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions {\n}\nMatDialogActions.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialogActions, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogActions.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatDialogActions, selector: \"[mat-dialog-actions], mat-dialog-actions, [matDialogActions]\", host: { classAttribute: \"mat-dialog-actions\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialogActions, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n                    host: { 'class': 'mat-dialog-actions' },\n                }]\n        }] });\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a dialog.\n * @param openDialogs References to the currently-open dialogs.\n */\nfunction getClosestDialog(element, openDialogs) {\n    let parent = element.nativeElement.parentElement;\n    while (parent && !parent.classList.contains('mat-dialog-container')) {\n        parent = parent.parentElement;\n    }\n    return parent ? openDialogs.find(dialog => dialog.id === parent.id) : null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDialogModule {\n}\nMatDialogModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatDialogModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialogModule, declarations: [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogActions,\n        MatDialogContent], imports: [OverlayModule, PortalModule, MatCommonModule], exports: [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogContent,\n        MatDialogActions,\n        MatCommonModule] });\nMatDialogModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialogModule, providers: [MatDialog, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER], imports: [[OverlayModule, PortalModule, MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialogModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, PortalModule, MatCommonModule],\n                    exports: [\n                        MatDialogContainer,\n                        MatDialogClose,\n                        MatDialogTitle,\n                        MatDialogContent,\n                        MatDialogActions,\n                        MatCommonModule,\n                    ],\n                    declarations: [\n                        MatDialogContainer,\n                        MatDialogClose,\n                        MatDialogTitle,\n                        MatDialogActions,\n                        MatDialogContent,\n                    ],\n                    providers: [MatDialog, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_FACTORY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContainer, MatDialogContent, MatDialogModule, MatDialogRef, MatDialogTitle, _MatDialogBase, _MatDialogContainerBase, _closeDialogVia, matDialogAnimations, throwMatDialogContentAlreadyAttachedError };\n","import * as i6 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, InjectionToken, EventEmitter, Directive, Input, Output, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, NgModule } from '@angular/core';\nimport * as i4 from '@angular/material/core';\nimport { mixinDisabled, mixinInitialized, MatCommonModule } from '@angular/material/core';\nimport * as i5 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i3 from '@angular/material/select';\nimport { MatSelectModule } from '@angular/material/select';\nimport * as i7 from '@angular/material/tooltip';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport * as i2 from '@angular/material/form-field';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the page size selector. */\n        this.itemsPerPageLabel = 'Items per page:';\n        /** A label for the button that increments the current page. */\n        this.nextPageLabel = 'Next page';\n        /** A label for the button that decrements the current page. */\n        this.previousPageLabel = 'Previous page';\n        /** A label for the button that moves to the first page. */\n        this.firstPageLabel = 'First page';\n        /** A label for the button that moves to the last page. */\n        this.lastPageLabel = 'Last page';\n        /** A label for the range of items within the current page and the length of the whole list. */\n        this.getRangeLabel = (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n            return `${startIndex + 1} – ${endIndex} of ${length}`;\n        };\n    }\n}\nMatPaginatorIntl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginatorIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMatPaginatorIntl.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginatorIntl, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginatorIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to _MatPaginatorBase.\n/** @docs-private */\nconst _MatPaginatorMixinBase = mixinDisabled(mixinInitialized(class {\n}));\n/**\n * Base class with all of the `MatPaginator` functionality.\n * @docs-private\n */\nclass _MatPaginatorBase extends _MatPaginatorMixinBase {\n    constructor(_intl, _changeDetectorRef, defaults) {\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        this._hidePageSize = false;\n        this._showFirstLastButtons = false;\n        /** Event emitted when the paginator changes the page size or page index. */\n        this.page = new EventEmitter();\n        this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this._hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this._showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n    }\n    /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n    get pageIndex() {\n        return this._pageIndex;\n    }\n    set pageIndex(value) {\n        this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The length of the total number of items that are being paginated. Defaulted to 0. */\n    get length() {\n        return this._length;\n    }\n    set length(value) {\n        this._length = coerceNumberProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Number of items to display on a page. By default set to 50. */\n    get pageSize() {\n        return this._pageSize;\n    }\n    set pageSize(value) {\n        this._pageSize = Math.max(coerceNumberProperty(value), 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** The set of provided page size options to display to the user. */\n    get pageSizeOptions() {\n        return this._pageSizeOptions;\n    }\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map(p => coerceNumberProperty(p));\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** Whether to hide the page size selection UI from the user. */\n    get hidePageSize() {\n        return this._hidePageSize;\n    }\n    set hidePageSize(value) {\n        this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /** Whether to show the first/last buttons UI to the user. */\n    get showFirstLastButtons() {\n        return this._showFirstLastButtons;\n    }\n    set showFirstLastButtons(value) {\n        this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n    ngOnInit() {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    }\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n    }\n    /** Advances to the next page if it exists. */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.pageIndex + 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move back to the previous page if it exists. */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.pageIndex - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the first page if not already there. */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the last page if not already there. */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Whether there is a previous page. */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /** Whether there is a next page. */\n    hasNextPage() {\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /** Calculate the number of pages */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        const startIndex = this.pageIndex * this.pageSize;\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Checks whether the buttons for going forwards should be disabled. */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /** Checks whether the buttons for going backwards should be disabled. */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize =\n                this.pageSizeOptions.length != 0 ? this.pageSizeOptions[0] : DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((a, b) => a - b);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length,\n        });\n    }\n}\n_MatPaginatorBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatPaginatorBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\n_MatPaginatorBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatPaginatorBase, inputs: { color: \"color\", pageIndex: \"pageIndex\", length: \"length\", pageSize: \"pageSize\", pageSizeOptions: \"pageSizeOptions\", hidePageSize: \"hidePageSize\", showFirstLastButtons: \"showFirstLastButtons\" }, outputs: { page: \"page\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatPaginatorBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: MatPaginatorIntl }, { type: i0.ChangeDetectorRef }, { type: undefined }]; }, propDecorators: { color: [{\n                type: Input\n            }], pageIndex: [{\n                type: Input\n            }], length: [{\n                type: Input\n            }], pageSize: [{\n                type: Input\n            }], pageSizeOptions: [{\n                type: Input\n            }], hidePageSize: [{\n                type: Input\n            }], showFirstLastButtons: [{\n                type: Input\n            }], page: [{\n                type: Output\n            }] } });\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator extends _MatPaginatorBase {\n    constructor(intl, changeDetectorRef, defaults) {\n        super(intl, changeDetectorRef, defaults);\n        if (defaults && defaults.formFieldAppearance != null) {\n            this._formFieldAppearance = defaults.formFieldAppearance;\n        }\n    }\n}\nMatPaginator.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginator, deps: [{ token: MatPaginatorIntl }, { token: i0.ChangeDetectorRef }, { token: MAT_PAGINATOR_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatPaginator.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatPaginator, selector: \"mat-paginator\", inputs: { disabled: \"disabled\" }, host: { attributes: { \"role\": \"group\" }, classAttribute: \"mat-paginator\" }, exportAs: [\"matPaginator\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [appearance]=\\\"_formFieldAppearance!\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-paginator-icon{fill:CanvasText}\\n\"], components: [{ type: i2.MatFormField, selector: \"mat-form-field\", inputs: [\"color\", \"appearance\", \"hideRequiredMarker\", \"hintLabel\", \"floatLabel\"], exportAs: [\"matFormField\"] }, { type: i3.MatSelect, selector: \"mat-select\", inputs: [\"disabled\", \"disableRipple\", \"tabIndex\"], exportAs: [\"matSelect\"] }, { type: i4.MatOption, selector: \"mat-option\", exportAs: [\"matOption\"] }, { type: i5.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }], directives: [{ type: i6.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i6.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i7.MatTooltip, selector: \"[matTooltip]\", exportAs: [\"matTooltip\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginator, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-paginator', exportAs: 'matPaginator', inputs: ['disabled'], host: {\n                        'class': 'mat-paginator',\n                        'role': 'group',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [appearance]=\\\"_formFieldAppearance!\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-paginator-icon{fill:CanvasText}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: MatPaginatorIntl }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatPaginatorModule {\n}\nMatPaginatorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatPaginatorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginatorModule, declarations: [MatPaginator], imports: [CommonModule, MatButtonModule, MatSelectModule, MatTooltipModule, MatCommonModule], exports: [MatPaginator] });\nMatPaginatorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginatorModule, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [[CommonModule, MatButtonModule, MatSelectModule, MatTooltipModule, MatCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatButtonModule, MatSelectModule, MatTooltipModule, MatCommonModule],\n                    exports: [MatPaginator],\n                    declarations: [MatPaginator],\n                    providers: [MAT_PAGINATOR_INTL_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent, _MatPaginatorBase };\n","import * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, InjectionToken, EventEmitter, Directive, Inject, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { AnimationDurations, AnimationCurves, mixinInitialized, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport * as i3 from '@angular/cdk/a11y';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' + AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * @docs-private\n */\nconst matSortAnimations = {\n    /** Animation that moves the sort indicator. */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({ transform: 'translateY(10px)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(-45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(-45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that controls the arrow opacity. */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n        state('desc-to-hint, asc-to-hint, hint', style({ opacity: 0.54 })),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(-25%)' }), style({ transform: 'translateY(0)' })]))),\n        // Hint Center => Hidden Below\n        transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(0)' }), style({ transform: 'translateY(25%)' })]))),\n        // Hidden Below => Hint Center\n        transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(25%)' }), style({ transform: 'translateY(0)' })]))),\n        // Hint Center => Hidden Above\n        transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(0)' }), style({ transform: 'translateY(-25%)' })]))),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({ transform: 'translateY(0)' })),\n        state('hint-to-desc, active-to-desc, desc', style({ transform: 'translateY(-25%)' })),\n        state('hint-to-asc, active-to-asc, asc', style({ transform: 'translateY(25%)' })),\n    ]),\n    /** Necessary trigger that calls animate on children animations. */\n    allowChildren: trigger('allowChildren', [\n        transition('* <=> *', [query('@*', animateChild(), { optional: true })]),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/** @docs-private */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/** @docs-private */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/** @docs-private */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n    }\n}\nMatSortHeaderIntl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSortHeaderIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMatSortHeaderIntl.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSortHeaderIntl, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSortHeaderIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/** @docs-private */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-sort`. */\nconst MAT_SORT_DEFAULT_OPTIONS = new InjectionToken('MAT_SORT_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to MatSort.\n/** @docs-private */\nconst _MatSortBase = mixinInitialized(mixinDisabled(class {\n}));\n/** Container for MatSortables to manage the sort state and provide default sort parameters. */\nclass MatSort extends _MatSortBase {\n    constructor(_defaultOptions) {\n        super();\n        this._defaultOptions = _defaultOptions;\n        /** Collection of all registered sortables that this directive manages. */\n        this.sortables = new Map();\n        /** Used to notify any child components listening to state changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The direction to set when an MatSortable is initially sorted.\n         * May be overriden by the MatSortable's sort start.\n         */\n        this.start = 'asc';\n        this._direction = '';\n        /** Event emitted when the user changes either the active sort or sort direction. */\n        this.sortChange = new EventEmitter();\n    }\n    /** The sort direction of the currently active MatSortable. */\n    get direction() {\n        return this._direction;\n    }\n    set direction(direction) {\n        if (direction &&\n            direction !== 'asc' &&\n            direction !== 'desc' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    /**\n     * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n     * May be overriden by the MatSortable's disable clear input.\n     */\n    get disableClear() {\n        return this._disableClear;\n    }\n    set disableClear(v) {\n        this._disableClear = coerceBooleanProperty(v);\n    }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     */\n    register(sortable) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!sortable.id) {\n                throw getSortHeaderMissingIdError();\n            }\n            if (this.sortables.has(sortable.id)) {\n                throw getSortDuplicateSortableIdError(sortable.id);\n            }\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     */\n    deregister(sortable) {\n        this.sortables.delete(sortable.id);\n    }\n    /** Sets the active sort id and determines the new sort direction. */\n    sort(sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.emit({ active: this.active, direction: this.direction });\n    }\n    /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n    getNextSortDirection(sortable) {\n        var _a, _b, _c;\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        const disableClear = (_b = (_a = sortable === null || sortable === void 0 ? void 0 : sortable.disableClear) !== null && _a !== void 0 ? _a : this.disableClear) !== null && _b !== void 0 ? _b : !!((_c = this._defaultOptions) === null || _c === void 0 ? void 0 : _c.disableClear);\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n    ngOnInit() {\n        this._markInitialized();\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatSort.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSort, deps: [{ token: MAT_SORT_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatSort.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatSort, selector: \"[matSort]\", inputs: { disabled: [\"matSortDisabled\", \"disabled\"], active: [\"matSortActive\", \"active\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\"] }, outputs: { sortChange: \"matSortChange\" }, host: { classAttribute: \"mat-sort\" }, exportAs: [\"matSort\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSort, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matSort]',\n                    exportAs: 'matSort',\n                    host: { 'class': 'mat-sort' },\n                    inputs: ['disabled: matSortDisabled'],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_SORT_DEFAULT_OPTIONS]\n                    }] }];\n    }, propDecorators: { active: [{\n                type: Input,\n                args: ['matSortActive']\n            }], start: [{\n                type: Input,\n                args: ['matSortStart']\n            }], direction: [{\n                type: Input,\n                args: ['matSortDirection']\n            }], disableClear: [{\n                type: Input,\n                args: ['matSortDisableClear']\n            }], sortChange: [{\n                type: Output,\n                args: ['matSortChange']\n            }] } });\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\nfunction getSortDirectionCycle(start, disableClear) {\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\n// Boilerplate for applying mixins to the sort header.\n/** @docs-private */\nconst _MatSortHeaderBase = mixinDisabled(class {\n});\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader extends _MatSortHeaderBase {\n    constructor(\n    /**\n     * @deprecated `_intl` parameter isn't being used anymore and it'll be removed.\n     * @breaking-change 13.0.0\n     */\n    _intl, _changeDetectorRef, \n    // `MatSort` is not optionally injected, but just asserted manually w/ better error.\n    // tslint:disable-next-line: lightweight-tokens\n    _sort, _columnDef, _focusMonitor, _elementRef, \n    /** @breaking-change 14.0.0 _ariaDescriber will be required. */\n    _ariaDescriber) {\n        // Note that we use a string token for the `_columnDef`, because the value is provided both by\n        // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n        // and we want to avoid having the sort header depending on the CDK table because\n        // of this single reference.\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._sort = _sort;\n        this._columnDef = _columnDef;\n        this._focusMonitor = _focusMonitor;\n        this._elementRef = _elementRef;\n        this._ariaDescriber = _ariaDescriber;\n        /**\n         * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n         * provide an affordance that the header is sortable by showing on focus and hover.\n         */\n        this._showIndicatorHint = false;\n        /**\n         * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n         * position through the animation. If animations are currently disabled, the fromState is removed\n         * so that there is no animation displayed.\n         */\n        this._viewState = {};\n        /** The direction the arrow should be facing according to the current state. */\n        this._arrowDirection = '';\n        /**\n         * Whether the view state animation should show the transition between the `from` and `to` states.\n         */\n        this._disableViewStateAnimation = false;\n        /** Sets the position of the arrow that displays when sorted. */\n        this.arrowPosition = 'after';\n        // Default the action description to \"Sort\" because it's better than nothing.\n        // Without a description, the button's label comes from the sort header text content,\n        // which doesn't give any indication that it performs a sorting operation.\n        this._sortActionDescription = 'Sort';\n        if (!_sort && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        this._handleStateChanges();\n    }\n    /**\n     * Description applied to MatSortHeader's button element with aria-describedby. This text should\n     * describe the action that will occur when the user clicks the sort header.\n     */\n    get sortActionDescription() {\n        return this._sortActionDescription;\n    }\n    set sortActionDescription(value) {\n        this._updateSortActionDescription(value);\n    }\n    /** Overrides the disable clear value of the containing MatSort for this MatSortable. */\n    get disableClear() {\n        return this._disableClear;\n    }\n    set disableClear(v) {\n        this._disableClear = coerceBooleanProperty(v);\n    }\n    ngOnInit() {\n        if (!this.id && this._columnDef) {\n            this.id = this._columnDef.name;\n        }\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({\n            toState: this._isSorted() ? 'active' : this._arrowDirection,\n        });\n        this._sort.register(this);\n        this._sortButton = this._elementRef.nativeElement.querySelector('.mat-sort-header-container');\n        this._updateSortActionDescription(this._sortActionDescription);\n    }\n    ngAfterViewInit() {\n        // We use the focus monitor because we also want to style\n        // things differently based on the focus origin.\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n            const newState = !!origin;\n            if (newState !== this._showIndicatorHint) {\n                this._setIndicatorHintVisible(newState);\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     */\n    _setIndicatorHintVisible(visible) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n        this._showIndicatorHint = visible;\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n            }\n            else {\n                this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n            }\n        }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     */\n    _setAnimationTransitionState(viewState) {\n        this._viewState = viewState || {};\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = { toState: viewState.toState };\n        }\n    }\n    /** Triggers the sort on this sort header and removes the indicator hint. */\n    _toggleOnInteraction() {\n        this._sort.sort(this);\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n    }\n    _handleClick() {\n        if (!this._isDisabled()) {\n            this._sort.sort(this);\n        }\n    }\n    _handleKeydown(event) {\n        if (!this._isDisabled() && (event.keyCode === SPACE || event.keyCode === ENTER)) {\n            event.preventDefault();\n            this._toggleOnInteraction();\n        }\n    }\n    /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\n    _isSorted() {\n        return (this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc'));\n    }\n    /** Returns the animation state for the arrow direction (indicator and pointers). */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /** Returns the arrow position state (opacity, translation). */\n    _getArrowViewState() {\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ? this._sort.direction : this.start || this._sort.start;\n    }\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return 'none';\n        }\n        return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /** Whether the arrow inside the sort header should be rendered. */\n    _renderArrow() {\n        return !this._isDisabled() || this._isSorted();\n    }\n    _updateSortActionDescription(newDescription) {\n        var _a, _b;\n        // We use AriaDescriber for the sort button instead of setting an `aria-label` because some\n        // screen readers (notably VoiceOver) will read both the column header *and* the button's label\n        // for every *cell* in the table, creating a lot of unnecessary noise.\n        // If _sortButton is undefined, the component hasn't been initialized yet so there's\n        // nothing to update in the DOM.\n        if (this._sortButton) {\n            // removeDescription will no-op if there is no existing message.\n            // TODO(jelbourn): remove optional chaining when AriaDescriber is required.\n            (_a = this._ariaDescriber) === null || _a === void 0 ? void 0 : _a.removeDescription(this._sortButton, this._sortActionDescription);\n            (_b = this._ariaDescriber) === null || _b === void 0 ? void 0 : _b.describe(this._sortButton, newDescription);\n        }\n        this._sortActionDescription = newDescription;\n    }\n    /** Handles changes in the sorting state. */\n    _handleStateChanges() {\n        this._rerenderSubscription = merge(this._sort.sortChange, this._sort._stateChanges, this._intl.changes).subscribe(() => {\n            if (this._isSorted()) {\n                this._updateArrowDirection();\n                // Do not show the animation if the header was already shown in the right position.\n                if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n                    this._disableViewStateAnimation = true;\n                }\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'active' });\n                this._showIndicatorHint = false;\n            }\n            // If this header was recently active and now no longer sorted, animate away the arrow.\n            if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                this._disableViewStateAnimation = false;\n                this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n}\nMatSortHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSortHeader, deps: [{ token: MatSortHeaderIntl }, { token: i0.ChangeDetectorRef }, { token: MatSort, optional: true }, { token: 'MAT_SORT_HEADER_COLUMN_DEF', optional: true }, { token: i3.FocusMonitor }, { token: i0.ElementRef }, { token: i3.AriaDescriber, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatSortHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatSortHeader, selector: \"[mat-sort-header]\", inputs: { disabled: \"disabled\", id: [\"mat-sort-header\", \"id\"], arrowPosition: \"arrowPosition\", start: \"start\", sortActionDescription: \"sortActionDescription\", disableClear: \"disableClear\" }, host: { listeners: { \"click\": \"_handleClick()\", \"keydown\": \"_handleKeydown($event)\", \"mouseenter\": \"_setIndicatorHintVisible(true)\", \"mouseleave\": \"_setIndicatorHintVisible(false)\" }, properties: { \"attr.aria-sort\": \"_getAriaSortAttribute()\", \"class.mat-sort-header-disabled\": \"_isDisabled()\" }, classAttribute: \"mat-sort-header\" }, exportAs: [\"matSortHeader\"], usesInheritance: true, ngImport: i0, template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition == 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     [attr.role]=\\\"_isDisabled() ? null : 'button'\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"], directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n        matSortAnimations.indicator,\n        matSortAnimations.leftPointer,\n        matSortAnimations.rightPointer,\n        matSortAnimations.arrowOpacity,\n        matSortAnimations.arrowPosition,\n        matSortAnimations.allowChildren,\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSortHeader, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-sort-header]', exportAs: 'matSortHeader', host: {\n                        'class': 'mat-sort-header',\n                        '(click)': '_handleClick()',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(mouseenter)': '_setIndicatorHintVisible(true)',\n                        '(mouseleave)': '_setIndicatorHintVisible(false)',\n                        '[attr.aria-sort]': '_getAriaSortAttribute()',\n                        '[class.mat-sort-header-disabled]': '_isDisabled()',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled'], animations: [\n                        matSortAnimations.indicator,\n                        matSortAnimations.leftPointer,\n                        matSortAnimations.rightPointer,\n                        matSortAnimations.arrowOpacity,\n                        matSortAnimations.arrowPosition,\n                        matSortAnimations.allowChildren,\n                    ], template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition == 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     [attr.role]=\\\"_isDisabled() ? null : 'button'\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: MatSortHeaderIntl }, { type: i0.ChangeDetectorRef }, { type: MatSort, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: ['MAT_SORT_HEADER_COLUMN_DEF']\n                    }, {\n                        type: Optional\n                    }] }, { type: i3.FocusMonitor }, { type: i0.ElementRef }, { type: i3.AriaDescriber, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { id: [{\n                type: Input,\n                args: ['mat-sort-header']\n            }], arrowPosition: [{\n                type: Input\n            }], start: [{\n                type: Input\n            }], sortActionDescription: [{\n                type: Input\n            }], disableClear: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSortModule {\n}\nMatSortModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSortModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatSortModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSortModule, declarations: [MatSort, MatSortHeader], imports: [CommonModule, MatCommonModule], exports: [MatSort, MatSortHeader] });\nMatSortModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSortModule, providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [[CommonModule, MatCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSortModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule],\n                    exports: [MatSort, MatSortHeader],\n                    declarations: [MatSort, MatSortHeader],\n                    providers: [MAT_SORT_HEADER_INTL_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_DEFAULT_OPTIONS, MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/table';\nimport { CdkTable, CDK_TABLE, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, STICKY_POSITIONING_LISTENER, CDK_TABLE_TEMPLATE, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CDK_ROW_TEMPLATE, CdkFooterRow, CdkRow, CdkNoDataRow, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, Subject, merge, of, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass MatRecycleRows {\n}\nMatRecycleRows.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRecycleRows, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatRecycleRows.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatRecycleRows, selector: \"mat-table[recycleRows], table[mat-table][recycleRows]\", providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRecycleRows, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-table[recycleRows], table[mat-table][recycleRows]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }] });\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /** Overrides the sticky CSS class set by the `CdkTable`. */\n        this.stickyCssClass = 'mat-table-sticky';\n        /** Overrides the need to add position: sticky on every sticky cell element in `CdkTable`. */\n        this.needsPositionStickyOnElement = false;\n    }\n}\nMatTable.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTable, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatTable.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTable, selector: \"mat-table, table[mat-table]\", host: { properties: { \"class.mat-table-fixed-layout\": \"fixedLayout\" }, classAttribute: \"mat-table\" }, providers: [\n        // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n        //  is only included in the build if used.\n        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n        { provide: CdkTable, useExisting: MatTable },\n        { provide: CDK_TABLE, useExisting: MatTable },\n        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n        // Prevent nested tables from seeing this table's StickyPositioningListener.\n        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n    ], exportAs: [\"matTable\"], usesInheritance: true, ngImport: i0, template: \"\\n  <ng-content select=\\\"caption\\\"></ng-content>\\n  <ng-content select=\\\"colgroup, col\\\"></ng-content>\\n  <ng-container headerRowOutlet></ng-container>\\n  <ng-container rowOutlet></ng-container>\\n  <ng-container noDataRowOutlet></ng-container>\\n  <ng-container footerRowOutlet></ng-container>\\n\", isInline: true, styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\\n\"], directives: [{ type: i1.HeaderRowOutlet, selector: \"[headerRowOutlet]\" }, { type: i1.DataRowOutlet, selector: \"[rowOutlet]\" }, { type: i1.NoDataRowOutlet, selector: \"[noDataRowOutlet]\" }, { type: i1.FooterRowOutlet, selector: \"[footerRowOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTable, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-table, table[mat-table]', exportAs: 'matTable', template: CDK_TABLE_TEMPLATE, host: {\n                        'class': 'mat-table',\n                        '[class.mat-table-fixed-layout]': 'fixedLayout',\n                    }, providers: [\n                        // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n                        //  is only included in the build if used.\n                        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                        { provide: CdkTable, useExisting: MatTable },\n                        { provide: CDK_TABLE, useExisting: MatTable },\n                        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                        // Prevent nested tables from seeing this table's StickyPositioningListener.\n                        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\\n\"] }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n}\nMatCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatCellDef, selector: \"[matCellDef]\", providers: [{ provide: CdkCellDef, useExisting: MatCellDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matCellDef]',\n                    providers: [{ provide: CdkCellDef, useExisting: MatCellDef }],\n                }]\n        }] });\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n}\nMatHeaderCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatHeaderCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatHeaderCellDef, selector: \"[matHeaderCellDef]\", providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matHeaderCellDef]',\n                    providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }],\n                }]\n        }] });\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n}\nMatFooterCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatFooterCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatFooterCellDef, selector: \"[matFooterCellDef]\", providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matFooterCellDef]',\n                    providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }],\n                }]\n        }] });\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n    /** Unique name for this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._setNameInput(name);\n    }\n    /**\n     * Add \"mat-column-\" prefix in addition to \"cdk-column-\" prefix.\n     * In the future, this will only add \"mat-column-\" and columnCssClassName\n     * will change from type string[] to string.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        super._updateColumnCssClassName();\n        this._columnCssClassName.push(`mat-column-${this.cssClassFriendlyName}`);\n    }\n}\nMatColumnDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatColumnDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatColumnDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatColumnDef, selector: \"[matColumnDef]\", inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, providers: [\n        { provide: CdkColumnDef, useExisting: MatColumnDef },\n        { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef },\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatColumnDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matColumnDef]',\n                    inputs: ['sticky'],\n                    providers: [\n                        { provide: CdkColumnDef, useExisting: MatColumnDef },\n                        { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef },\n                    ],\n                }]\n        }], propDecorators: { name: [{\n                type: Input,\n                args: ['matColumnDef']\n            }] } });\n/** Header cell template container that adds the right classes and role. */\nclass MatHeaderCell extends CdkHeaderCell {\n}\nMatHeaderCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderCell, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatHeaderCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatHeaderCell, selector: \"mat-header-cell, th[mat-header-cell]\", host: { attributes: { \"role\": \"columnheader\" }, classAttribute: \"mat-header-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-header-cell, th[mat-header-cell]',\n                    host: {\n                        'class': 'mat-header-cell',\n                        'role': 'columnheader',\n                    },\n                }]\n        }] });\n/** Footer cell template container that adds the right classes and role. */\nclass MatFooterCell extends CdkFooterCell {\n}\nMatFooterCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterCell, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatFooterCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatFooterCell, selector: \"mat-footer-cell, td[mat-footer-cell]\", host: { attributes: { \"role\": \"gridcell\" }, classAttribute: \"mat-footer-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-footer-cell, td[mat-footer-cell]',\n                    host: {\n                        'class': 'mat-footer-cell',\n                        'role': 'gridcell',\n                    },\n                }]\n        }] });\n/** Cell template container that adds the right classes and role. */\nclass MatCell extends CdkCell {\n}\nMatCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCell, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatCell, selector: \"mat-cell, td[mat-cell]\", host: { attributes: { \"role\": \"gridcell\" }, classAttribute: \"mat-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-cell, td[mat-cell]',\n                    host: {\n                        'class': 'mat-cell',\n                        'role': 'gridcell',\n                    },\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n}\nMatHeaderRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatHeaderRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatHeaderRowDef, selector: \"[matHeaderRowDef]\", inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matHeaderRowDef]',\n                    providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                    inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky'],\n                }]\n        }] });\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n}\nMatFooterRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatFooterRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatFooterRowDef, selector: \"[matFooterRowDef]\", inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matFooterRowDef]',\n                    providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                    inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky'],\n                }]\n        }] });\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass MatRowDef extends CdkRowDef {\n}\nMatRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatRowDef, selector: \"[matRowDef]\", inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, providers: [{ provide: CdkRowDef, useExisting: MatRowDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matRowDef]',\n                    providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                    inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen'],\n                }]\n        }] });\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderRow, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatHeaderRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatHeaderRow, selector: \"mat-header-row, tr[mat-header-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-header-row\" }, providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }], exportAs: [\"matHeaderRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-header-row, tr[mat-header-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-header-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matHeaderRow',\n                    providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }],\n                }]\n        }] });\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterRow, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatFooterRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatFooterRow, selector: \"mat-footer-row, tr[mat-footer-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-footer-row\" }, providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }], exportAs: [\"matFooterRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-footer-row, tr[mat-footer-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-footer-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matFooterRow',\n                    providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }],\n                }]\n        }] });\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass MatRow extends CdkRow {\n}\nMatRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRow, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatRow, selector: \"mat-row, tr[mat-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-row\" }, providers: [{ provide: CdkRow, useExisting: MatRow }], exportAs: [\"matRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-row, tr[mat-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matRow',\n                    providers: [{ provide: CdkRow, useExisting: MatRow }],\n                }]\n        }] });\n/** Row that can be used to display a message when no data is shown in the table. */\nclass MatNoDataRow extends CdkNoDataRow {\n    constructor() {\n        super(...arguments);\n        this._contentClassName = 'mat-no-data-row';\n    }\n}\nMatNoDataRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatNoDataRow, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatNoDataRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatNoDataRow, selector: \"ng-template[matNoDataRow]\", providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatNoDataRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matNoDataRow]',\n                    providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass MatTextColumn extends CdkTextColumn {\n}\nMatTextColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTextColumn, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatTextColumn.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTextColumn, selector: \"mat-text-column\", usesInheritance: true, ngImport: i0, template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `, isInline: true, directives: [{ type: MatColumnDef, selector: \"[matColumnDef]\", inputs: [\"sticky\", \"matColumnDef\"] }, { type: MatHeaderCellDef, selector: \"[matHeaderCellDef]\" }, { type: MatHeaderCell, selector: \"mat-header-cell, th[mat-header-cell]\" }, { type: MatCellDef, selector: \"[matCellDef]\" }, { type: MatCell, selector: \"mat-cell, td[mat-cell]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTextColumn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-text-column',\n                    template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                    encapsulation: ViewEncapsulation.None,\n                    // Change detection is intentionally not set to OnPush. This component's template will be provided\n                    // to the table to be inserted into its view. This is problematic when change detection runs since\n                    // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                    // mean's the template in the table's view will not have the updated value (and in fact will cause\n                    // an ExpressionChangedAfterItHasBeenCheckedError).\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    MatRecycleRows,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatNoDataRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n}\nMatTableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatTableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTableModule, declarations: [\n        // Table\n        MatTable,\n        MatRecycleRows,\n        // Template defs\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        // Cell directives\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        // Row directives\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatNoDataRow,\n        MatTextColumn\n    ], imports: [CdkTableModule, MatCommonModule], exports: [MatCommonModule,\n        // Table\n        MatTable,\n        MatRecycleRows,\n        // Template defs\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        // Cell directives\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        // Row directives\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatNoDataRow,\n        MatTextColumn] });\nMatTableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTableModule, imports: [[CdkTableModule, MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkTableModule, MatCommonModule],\n                    exports: [MatCommonModule, EXPORTED_DECLARATIONS],\n                    declarations: EXPORTED_DECLARATIONS,\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/** Shared base class with MDC-based implementation. */\nclass _MatTableDataSource extends DataSource {\n    constructor(initialData = []) {\n        super();\n        /** Stream emitting render data to the table (depends on ordered data changes). */\n        this._renderData = new BehaviorSubject([]);\n        /** Stream that emits when a new filter string is set on the data source. */\n        this._filter = new BehaviorSubject('');\n        /** Used to react to internal changes of the paginator that are made by the data source itself. */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = null;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (data, sortHeaderId) => {\n            const value = data[sortHeaderId];\n            if (_isNumberValue(value)) {\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        };\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (data, sort) => {\n            const active = sort.active;\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((a, b) => {\n                let valueA = this.sortingDataAccessor(a, active);\n                let valueB = this.sortingDataAccessor(b, active);\n                // If there are data in the column that can be converted to a number,\n                // it must be ensured that the rest of the data\n                // is of the same type so as not to order incorrectly.\n                const valueAType = typeof valueA;\n                const valueBType = typeof valueB;\n                if (valueAType !== valueBType) {\n                    if (valueAType === 'number') {\n                        valueA += '';\n                    }\n                    if (valueBType === 'number') {\n                        valueB += '';\n                    }\n                }\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            });\n        };\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @returns Whether the filter matches against the data\n         */\n        this.filterPredicate = (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            const dataStr = Object.keys(data)\n                .reduce((currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + data[key] + '◬';\n            }, '')\n                .toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        };\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /** Array of data that should be rendered by the table, where each object represents one row. */\n    get data() {\n        return this._data.value;\n    }\n    set data(data) {\n        data = Array.isArray(data) ? data : [];\n        this._data.next(data);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(data);\n        }\n    }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     */\n    get filter() {\n        return this._filter.value;\n    }\n    set filter(filter) {\n        this._filter.next(filter);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(this.data);\n        }\n    }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     */\n    get sort() {\n        return this._sort;\n    }\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     */\n    get paginator() {\n        return this._paginator;\n    }\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     */\n    _updateChangeSubscription() {\n        var _a;\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        const sortChange = this._sort\n            ? merge(this._sort.sortChange, this._sort.initialized)\n            : of(null);\n        const pageChange = this._paginator\n            ? merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized)\n            : of(null);\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        const filteredData = combineLatest([dataStream, this._filter]).pipe(map(([data]) => this._filterData(data)));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        const orderedData = combineLatest([filteredData, sortChange]).pipe(map(([data]) => this._orderData(data)));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        const paginatedData = combineLatest([orderedData, pageChange]).pipe(map(([data]) => this._pageData(data)));\n        // Watched for paged data changes and send the result to the table to render.\n        (_a = this._renderChangesSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData =\n            this.filter == null || this.filter === ''\n                ? data\n                : data.filter(obj => this.filterPredicate(obj, this.filter));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then(() => {\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        });\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * @docs-private\n     */\n    connect() {\n        if (!this._renderChangesSubscription) {\n            this._updateChangeSubscription();\n        }\n        return this._renderData;\n    }\n    /**\n     * Used by the MatTable. Called when it disconnects from the data source.\n     * @docs-private\n     */\n    disconnect() {\n        var _a;\n        (_a = this._renderChangesSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this._renderChangesSubscription = null;\n    }\n}\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n */\nclass MatTableDataSource extends _MatTableDataSource {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatNoDataRow, MatRecycleRows, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn, _MatTableDataSource };\n"],"names":["coerceBooleanProperty","_VIEW_REPEATER_STRATEGY","_RecycleViewRepeaterStrategy","isDataSource","_DisposeViewRepeaterStrategy","DataSource","DOCUMENT","i0","InjectionToken","Directive","Inject","Optional","Input","ContentChild","Injectable","Component","ChangeDetectionStrategy","ViewEncapsulation","EmbeddedViewRef","EventEmitter","NgZone","Attribute","SkipSelf","Output","ViewChild","ContentChildren","NgModule","Subject","from","BehaviorSubject","isObservable","of","takeUntil","take","i1","i2","i3","ScrollingModule","mixinHasStickyInput","base","constructor","args","_sticky","_hasStickyChanged","sticky","v","prevValue","hasStickyChanged","resetStickyChanged","CDK_TABLE","TEXT_COLUMN_OPTIONS","CdkCellDef","template","ɵfac","TemplateRef","ɵdir","type","selector","CdkHeaderCellDef","CdkFooterCellDef","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_table","_stickyEnd","name","_name","_setNameInput","stickyEnd","_updateColumnCssClassName","_columnCssClassName","cssClassFriendlyName","value","replace","provide","useExisting","inputs","providers","undefined","decorators","cell","headerCell","footerCell","BaseCdkCell","columnDef","elementRef","nativeElement","classList","add","CdkHeaderCell","ElementRef","host","CdkFooterCell","_a","_elementRef","nodeType","tableRole","getAttribute","role","setAttribute","CdkCell","_Schedule","tasks","endTasks","_COALESCED_STYLE_SCHEDULER","_CoalescedStyleScheduler","_ngZone","_currentSchedule","_destroyed","schedule","task","_createScheduleIfNeeded","push","scheduleEnd","ngOnDestroy","next","complete","_getScheduleObservable","pipe","subscribe","length","isStable","Promise","resolve","onStable","ɵprov","CDK_ROW_TEMPLATE","BaseRowDef","_differs","ngOnChanges","changes","_columnsDiffer","columns","currentValue","find","create","diff","getColumnsDiff","extractCellTemplate","column","CdkHeaderRowDef","CdkFooterRowDef","IterableDiffers","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkRowDef","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","ViewContainerRef","CdkHeaderRow","ɵcmp","changeDetection","Default","encapsulation","None","CdkFooterRow","CdkRow","CdkNoDataRow","templateRef","_contentClassName","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","direction","_coalescedStyleScheduler","_isBrowser","_needsPositionStickyOnElement","_positionListener","_cachedCellWidths","_borderCellCss","clearStickyPositioning","rows","stickyDirections","elementsToClear","row","ELEMENT_NODE","i","children","element","_removeStickyStyle","updateStickyColumns","stickyStartStates","stickyEndStates","recalculateCellWidths","some","state","stickyColumnsUpdated","sizes","stickyEndColumnsUpdated","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","lastStickyStart","lastIndexOf","firstStickyEnd","indexOf","isRtl","start","end","_addStickyStyle","slice","map","width","index","reverse","stickRows","rowsToStick","stickyStates","position","states","stickyOffsets","stickyCellHeights","elementsToStick","rowIndex","stickyOffset","Array","height","getBoundingClientRect","borderedRowIndex","_b","offset","isBorderedRowIndex","stickyHeaderRowsUpdated","offsets","elements","stickyFooterRowsUpdated","updateStickyFooterContainer","tableElement","tfoot","querySelector","dir","style","remove","hasDirection","zIndex","_getCalculatedZIndex","dirValue","isBorderElement","cssText","zIndexIncrements","top","bottom","left","right","firstRowCells","widths","positions","nextPosition","getTableUnknownColumnError","id","Error","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","data","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","STICKY_POSITIONING_LISTENER","CdkRecycleRows","useClass","DataRowOutlet","viewContainer","HeaderRowOutlet","FooterRowOutlet","NoDataRowOutlet","CDK_TABLE_TEMPLATE","RowViewRef","CdkTable","_changeDetectorRef","_dir","_document","_platform","_viewRepeater","_viewportRuler","_stickyPositioningListener","_onDestroy","_columnDefsByName","Map","_customColumnDefs","Set","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_stickyColumnStylesNeedReset","_forceRecalculateCellWidths","_cachedRenderRowsMap","stickyCssClass","needsPositionStickyOnElement","_isShowingNoDataRow","_multiTemplateDataRows","_fixedLayout","contentChanged","viewChange","Number","MAX_VALUE","nodeName","trackBy","_trackByFn","fn","ngDevMode","console","warn","dataSource","_dataSource","_switchDataSource","multiTemplateDataRows","_rowOutlet","_forceRenderDataRows","updateStickyColumnStyles","fixedLayout","ngOnInit","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","dataIndex","change","ngAfterContentChecked","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","columnsChanged","_renderUpdatedColumns","rowDefsChanged","_forceRenderHeaderRows","_forceRenderFooterRows","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","_headerRowOutlet","_footerRowOutlet","forEach","def","clear","_defaultRowDef","disconnect","renderRows","_renderRows","_getAllRenderRows","_updateNoDataRow","applyChanges","record","_adjustedPreviousIndex","currentIndex","_getEmbeddedViewArgs","item","operation","context","_renderCellTemplateForItem","rowDef","_updateRowIndexContext","forEachIdentityChange","rowView","get","$implicit","isInAngularZone","addColumnDef","removeColumnDef","delete","addRowDef","removeRowDef","addHeaderRowDef","headerRowDef","removeHeaderRowDef","addFooterRowDef","footerRowDef","removeFooterRowDef","setNoDataRow","noDataRow","_customNoDataRow","updateStickyHeaderRowStyles","headerRows","_getRenderedRows","thead","display","_stickyStyler","updateStickyFooterRowStyles","footerRows","dataRows","headerRow","_addStickyColumnStyles","footerRow","values","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","has","set","WeakMap","j","renderRow","cache","rowDefs","_getRowDefs","cachedRenderRows","shift","columnDefs","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","filter","when","columnsDiffReducer","acc","dataColumnsChanged","reduce","headerColumnsChanged","footerColumnsChanged","unsubscribe","dataStream","connect","isArray","_renderRow","columnName","rowOutlet","renderedRows","viewRef","rootNodes","outlet","view","createEmbeddedView","cellTemplate","_getCellTemplates","markForCheck","renderIndex","count","first","last","even","odd","columnId","documentFragment","createDocumentFragment","sections","tag","outlets","_noDataRowOutlet","section","createElement","appendChild","stickyCheckReducer","d","isBrowser","items","_noDataRow","shouldShow","container","rootNode","ChangeDetectorRef","Directionality","Platform","ViewportRuler","useValue","exportAs","styles","static","descendants","array","concat","CdkTextColumn","_options","justify","_syncColumnDefName","headerText","_createDefaultHeaderText","dataAccessor","defaultDataAccessor","defaultHeaderTextTransform","toUpperCase","EXPORTED_DECLARATIONS","CdkTableModule","ɵmod","ɵinj","exports","declarations","imports","i1$1","Overlay","OverlayConfig","OverlayModule","BasePortalOutlet","CdkPortalOutlet","ComponentPortal","TemplatePortal","PortalModule","Injector","InjectFlags","MatCommonModule","defer","startWith","_getFocusedElementPierceShadowDom","trigger","transition","group","animate","query","animateChild","ESCAPE","hasModifierKey","ANIMATION_MODULE_TYPE","MatDialogConfig","panelClass","hasBackdrop","backdropClass","disableClose","maxWidth","ariaDescribedBy","ariaLabelledBy","ariaLabel","autoFocus","restoreFocus","delayFocusTrap","closeOnNavigation","matDialogAnimations","dialogContainer","opacity","transform","optional","throwMatDialogContentAlreadyAttachedError","_MatDialogContainerBase","_focusTrapFactory","_config","_interactivityChecker","_focusMonitor","_animationStateChanged","_elementFocusedBeforeDialogWasOpened","_closeInteractionType","attachDomPortal","portal","_portalOutlet","hasAttached","_ariaLabelledBy","_initializeWithAttachedContent","_focusTrap","attachComponentPortal","attachTemplatePortal","_recaptureFocus","_containsFocus","_trapFocus","_forceFocus","options","isFocusable","tabIndex","runOutsideAngular","callback","removeEventListener","removeAttribute","addEventListener","focus","_focusByCssSelector","elementToFocus","focusInitialElementWhenReady","then","focusedSuccessfully","_focusDialogContainer","_restoreFocus","previousElement","activeElement","body","contains","focusVia","destroy","FocusTrapFactory","InteractivityChecker","FocusMonitor","MatDialogContainer","arguments","_state","_onAnimationDone","toState","totalTime","_onAnimationStart","_startExitAnimation","animations","uniqueId","MatDialogRef","_overlayRef","_containerInstance","_afterOpened","_afterClosed","_beforeClosed","_id","event","clearTimeout","_closeFallbackTimeout","_finishDialogClose","detachments","_result","componentInstance","dispose","keydownEvents","keyCode","preventDefault","_closeDialogVia","backdropClick","close","dialogResult","detachBackdrop","setTimeout","afterOpened","afterClosed","beforeClosed","updatePosition","strategy","_getPositionStrategy","centerHorizontally","centerVertically","updateSize","addPanelClass","classes","removePanelClass","getState","getConfig","positionStrategy","ref","interactionType","result","MAT_DIALOG_DATA","MAT_DIALOG_DEFAULT_OPTIONS","MAT_DIALOG_SCROLL_STRATEGY","MAT_DIALOG_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","block","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER","deps","useFactory","_MatDialogBase","_overlay","_injector","_defaultOptions","_parentDialog","_overlayContainer","scrollStrategy","_dialogRefConstructor","_dialogContainerType","_dialogDataToken","_animationMode","_openDialogsAtThisLevel","_afterAllClosedAtThisLevel","_afterOpenedAtThisLevel","_ariaHiddenElements","afterAllClosed","openDialogs","_getAfterAllClosed","_scrollStrategy","parent","open","componentOrTemplateRef","config","_applyConfigDefaults","getDialogById","overlayRef","_createOverlay","_attachDialogContainer","dialogRef","_attachDialogContent","_hideNonDialogContentFromAssistiveTechnology","_removeOpenDialog","closeAll","_closeDialogs","dialog","overlayConfig","_getOverlayConfig","dialogConfig","global","minWidth","minHeight","maxHeight","disposeOnNavigation","userInjector","viewContainerRef","injector","containerPortal","componentFactoryResolver","containerRef","attach","instance","_createInjector","contentRef","splice","previousValue","overlayContainer","getContainerElement","parentElement","siblings","sibling","hasAttribute","dialogs","OverlayContainer","Type","MatDialog","location","defaultOptions","parentDialog","animationMode","Location","Object","assign","dialogElementUid","MatDialogClose","_dialog","getClosestDialog","proxiedChange","_onButtonClick","screenX","screenY","_matDialogClose","MatDialogTitle","_dialogRef","MatDialogContent","MatDialogActions","MatDialogModule","i6","CommonModule","i4","mixinDisabled","mixinInitialized","i5","MatButtonModule","MatSelectModule","i7","MatTooltipModule","coerceNumberProperty","MatPaginatorIntl","itemsPerPageLabel","nextPageLabel","previousPageLabel","firstPageLabel","lastPageLabel","getRangeLabel","page","pageSize","Math","max","startIndex","endIndex","min","providedIn","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_INTL_PROVIDER","DEFAULT_PAGE_SIZE","PageEvent","MAT_PAGINATOR_DEFAULT_OPTIONS","_MatPaginatorMixinBase","_MatPaginatorBase","_intl","defaults","_pageIndex","_length","_pageSizeOptions","_hidePageSize","_showFirstLastButtons","_intlChanges","pageSizeOptions","hidePageSize","showFirstLastButtons","_pageSize","pageIndex","_updateDisplayedPageSizeOptions","p","_initialized","_markInitialized","nextPage","hasNextPage","previousPageIndex","_emitPageEvent","previousPage","hasPreviousPage","firstPage","lastPage","getNumberOfPages","maxPageIndex","ceil","_changePageSize","floor","_nextButtonsDisabled","disabled","_previousButtonsDisabled","_displayedPageSizeOptions","sort","a","b","emit","color","MatPaginator","intl","changeDetectorRef","formFieldAppearance","_formFieldAppearance","MatFormField","MatSelect","MatOption","MatButton","NgIf","NgForOf","MatTooltip","OnPush","MatPaginatorModule","SPACE","ENTER","AnimationDurations","AnimationCurves","merge","keyframes","SORT_ANIMATION_TRANSITION","ENTERING","STANDARD_CURVE","matSortAnimations","indicator","leftPointer","rightPointer","arrowOpacity","arrowPosition","allowChildren","getSortDuplicateSortableIdError","getSortHeaderNotContainedWithinSortError","getSortHeaderMissingIdError","getSortInvalidDirectionError","MatSortHeaderIntl","MAT_SORT_HEADER_INTL_PROVIDER_FACTORY","MAT_SORT_HEADER_INTL_PROVIDER","MAT_SORT_DEFAULT_OPTIONS","_MatSortBase","MatSort","sortables","_stateChanges","_direction","sortChange","disableClear","_disableClear","register","sortable","deregister","active","getNextSortDirection","_c","sortDirectionCycle","getSortDirectionCycle","nextDirectionIndex","sortOrder","_MatSortHeaderBase","MatSortHeader","_sort","_columnDef","_ariaDescriber","_showIndicatorHint","_viewState","_arrowDirection","_disableViewStateAnimation","_sortActionDescription","_handleStateChanges","sortActionDescription","_updateSortActionDescription","_updateArrowDirection","_setAnimationTransitionState","_isSorted","_sortButton","ngAfterViewInit","monitor","origin","newState","_setIndicatorHintVisible","stopMonitoring","_rerenderSubscription","visible","_isDisabled","fromState","viewState","_toggleOnInteraction","_handleClick","_handleKeydown","_getArrowDirectionState","_getArrowViewState","_getAriaSortAttribute","_renderArrow","newDescription","removeDescription","describe","AriaDescriber","MatSortModule","_isNumberValue","combineLatest","MatRecycleRows","MatTable","MatCellDef","MatHeaderCellDef","MatFooterCellDef","MatColumnDef","MatHeaderCell","MatFooterCell","MatCell","MatHeaderRowDef","MatFooterRowDef","MatRowDef","MatHeaderRow","MatFooterRow","MatRow","MatNoDataRow","MatTextColumn","MatTableModule","MAX_SAFE_INTEGER","_MatTableDataSource","initialData","_renderData","_filter","_internalPageChanges","_renderChangesSubscription","sortingDataAccessor","sortHeaderId","numberValue","sortData","valueA","valueB","valueAType","valueBType","comparatorResult","filterPredicate","dataStr","keys","currentTerm","key","toLowerCase","transformedFilter","trim","_updateChangeSubscription","_filterData","paginator","_paginator","initialized","pageChange","filteredData","orderedData","_orderData","paginatedData","_pageData","obj","_updatePaginator","filteredDataLength","lastPageIndex","newPageIndex","MatTableDataSource"],"sourceRoot":"webpack:///"}