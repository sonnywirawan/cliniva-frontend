{"version":3,"file":"default-src_app_doctor_dashboard_dashboard_component_ts.js","mappings":"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","sources":["./src/app/doctor/dashboard/dashboard.component.ts","./src/app/doctor/dashboard/dashboard.component.html","./node_modules/rxjs/dist/esm/internal/observable/interval.js","./node_modules/@angular/cdk/fesm2015/drag-drop.mjs"],"sourcesContent":["import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport {\n  ChartComponent,\n  ApexAxisChartSeries,\n  ApexChart,\n  ApexXAxis,\n  ApexDataLabels,\n  ApexTooltip,\n  ApexYAxis,\n  ApexPlotOptions,\n  ApexStroke,\n  ApexLegend,\n  ApexNonAxisChartSeries,\n  ApexFill,\n} from \"ng-apexcharts\";\nexport type areaChartOptions = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  xaxis: ApexXAxis;\n  yaxis: ApexYAxis;\n  stroke: ApexStroke;\n  tooltip: ApexTooltip;\n  dataLabels: ApexDataLabels;\n  legend: ApexLegend;\n  colors: string[];\n};\n\nexport type linechartOptions = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  dataLabels: ApexDataLabels;\n  plotOptions: ApexPlotOptions;\n  yaxis: ApexYAxis;\n  xaxis: ApexXAxis;\n  fill: ApexFill;\n  tooltip: ApexTooltip;\n  stroke: ApexStroke;\n  legend: ApexLegend;\n  colors: string[];\n};\n\nexport type radialChartOptions = {\n  series: ApexNonAxisChartSeries;\n  chart: ApexChart;\n  labels: string[];\n  colors: string[];\n  plotOptions: ApexPlotOptions;\n};\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.sass\"],\n})\nexport class DashboardComponent implements OnInit {\n  @ViewChild(\"chart\") chart: ChartComponent;\n  public areaChartOptions: Partial<areaChartOptions>;\n  public radialChartOptions: Partial<radialChartOptions>;\n  public linechartOptions: Partial<linechartOptions>;\n  constructor() {}\n\n  // TODO start\n  tasks = [\n    {\n      id: \"1\",\n      title: \"Check patient report\",\n      done: true,\n      priority: \"High\",\n    },\n    {\n      id: \"2\",\n      title: \"Request for festivle holiday\",\n      done: false,\n      priority: \"High\",\n    },\n    {\n      id: \"3\",\n      title: \"Order new medicine stock\",\n      done: false,\n      priority: \"Low\",\n    },\n    {\n      id: \"4\",\n      title: \"Remind for lunch in hotel\",\n      done: true,\n      priority: \"Normal\",\n    },\n    {\n      id: \"5\",\n      title: \"Conference in london\",\n      done: false,\n      priority: \"High\",\n    },\n    {\n      id: \"6\",\n      title: \"Announcement for\",\n      done: false,\n      priority: \"Normal\",\n    },\n    {\n      id: \"7\",\n      title: \"call bus driver\",\n      done: true,\n      priority: \"High\",\n    },\n    {\n      id: \"8\",\n      title: \"Web service data load issue\",\n      done: false,\n      priority: \"High\",\n    },\n    {\n      id: \"9\",\n      title: \"Java compile error\",\n      done: false,\n      priority: \"Low\",\n    },\n    {\n      id: \"10\",\n      title: \"Integrate project with spring boot\",\n      done: true,\n      priority: \"High\",\n    },\n  ];\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.tasks, event.previousIndex, event.currentIndex);\n  }\n\n  toggle(task, nav: any) {\n    task.done = !task.done;\n  }\n  // TODO end\n\n  ngOnInit() {\n    this.chart1();\n    this.chart2();\n    this.chart3();\n  }\n  private chart1() {\n    this.areaChartOptions = {\n      series: [\n        {\n          name: \"New Patients\",\n          data: [31, 40, 28, 51, 42, 85, 77],\n        },\n        {\n          name: \"Old Patients\",\n          data: [11, 32, 45, 32, 34, 52, 41],\n        },\n      ],\n      chart: {\n        height: 350,\n        type: \"area\",\n        toolbar: {\n          show: false,\n        },\n        foreColor: \"#9aa0ac\",\n      },\n      colors: [\"#7D4988\", \"#66BB6A\"],\n      dataLabels: {\n        enabled: false,\n      },\n      stroke: {\n        curve: \"smooth\",\n      },\n      xaxis: {\n        type: \"datetime\",\n        categories: [\n          \"2018-09-19T00:00:00.000Z\",\n          \"2018-09-19T01:30:00.000Z\",\n          \"2018-09-19T02:30:00.000Z\",\n          \"2018-09-19T03:30:00.000Z\",\n          \"2018-09-19T04:30:00.000Z\",\n          \"2018-09-19T05:30:00.000Z\",\n          \"2018-09-19T06:30:00.000Z\",\n        ],\n      },\n      legend: {\n        show: true,\n        position: \"top\",\n        horizontalAlign: \"center\",\n        offsetX: 0,\n        offsetY: 0,\n      },\n\n      tooltip: {\n        theme: \"dark\",\n        marker: {\n          show: true,\n        },\n        x: {\n          format: \"dd/MM/yy HH:mm\",\n        },\n      },\n    };\n  }\n  private chart2() {\n    this.radialChartOptions = {\n      series: [44, 55, 67],\n      chart: {\n        height: 265,\n        type: \"radialBar\",\n      },\n      plotOptions: {\n        radialBar: {\n          dataLabels: {\n            name: {\n              fontSize: \"22px\",\n            },\n            value: {\n              fontSize: \"16px\",\n            },\n            total: {\n              show: true,\n              label: \"Total\",\n              formatter: function (w) {\n                return \"249\";\n              },\n            },\n          },\n        },\n      },\n      colors: [\"#ffc107\", \"#3f51b5\", \"#8bc34a\"],\n\n      labels: [\"Face TO Face\", \"E-Consult\", \"Available\"],\n    };\n  }\n  private chart3() {\n    this.linechartOptions = {\n      series: [\n        {\n          name: \"Male\",\n          data: [44, 55, 57, 56, 61, 58],\n        },\n        {\n          name: \"Female\",\n          data: [76, 85, 101, 98, 87, 105],\n        },\n      ],\n      chart: {\n        type: \"bar\",\n        height: 350,\n        dropShadow: {\n          enabled: true,\n          color: \"#000\",\n          top: 18,\n          left: 7,\n          blur: 10,\n          opacity: 0.2,\n        },\n        toolbar: {\n          show: false,\n        },\n        foreColor: \"#9aa0ac\",\n      },\n      colors: [\"#5C9FFB\", \"#AEAEAE\"],\n      plotOptions: {\n        bar: {\n          horizontal: false,\n          columnWidth: \"55%\",\n          borderRadius: 5,\n        },\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      stroke: {\n        show: true,\n        width: 2,\n        colors: [\"transparent\"],\n      },\n      xaxis: {\n        categories: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n      },\n      yaxis: {},\n      fill: {\n        opacity: 1,\n      },\n      tooltip: {\n        theme: \"dark\",\n        marker: {\n          show: true,\n        },\n        x: {\n          show: true,\n        },\n      },\n    };\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Doctor Dashboard'\" [items]=\"[]\" [active_item]=\"'Dashboard'\"></app-breadcrumb>\n    </div>\n    <!-- Widgets -->\n    <div class=\"row\">\n      <div class=\"col-lg-3 col-sm-6\">\n        <div class=\"info-box7 l-bg-card1 order-info-box7\">\n          <div class=\"info-box7-block\">\n            <h5 class=\"m-b-15\">Todays Patients</h5>\n            <h2 class=\"text-end\"><i class=\"fas fa-user-injured float-start\"></i><span>231</span></h2>\n            <p class=\"m-b-0\">18% Higher Then Last Month</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-lg-3 col-sm-6\">\n        <div class=\"info-box7 l-bg-card2 order-info-box7\">\n          <div class=\"info-box7-block\">\n            <h5 class=\"m-b-15\">Appointments</h5>\n            <h2 class=\"text-end\"><i class=\"far fa-calendar-check float-start\"></i><span>122</span></h2>\n            <p class=\"m-b-0\">21% Higher Then Last Month</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-lg-3 col-sm-6\">\n        <div class=\"info-box7 l-bg-card3 order-info-box7\">\n          <div class=\"info-box7-block\">\n            <h5 class=\"m-b-15\">Todays Operations</h5>\n            <h2 class=\"text-end\"><i class=\"fas fa-cut float-start\"></i><span>28</span></h2>\n            <p class=\"m-b-0\">37% Higher Then Last Month</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-lg-3 col-sm-6\">\n        <div class=\"info-box7 l-bg-card4 order-info-box7\">\n          <div class=\"info-box7-block\">\n            <h5 class=\"m-b-15\">Online Appointment</h5>\n            <h2 class=\"text-end\"><i class=\"fab fa-internet-explorer float-start\"></i><span>42</span></h2>\n            <p class=\"m-b-0\">10% Higher Then Last Month</p>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- #END# Widgets -->\n    <div class=\"row\">\n      <div class=\"col-xl-8 col-lg-8 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"header\">\n            <h2>\n              Patients Survay</h2>\n\n          </div>\n          <div class=\"body\">\n            <apx-chart [series]=\"areaChartOptions.series\" [chart]=\"areaChartOptions.chart\"\n              [xaxis]=\"areaChartOptions.xaxis\" [yaxis]=\"areaChartOptions.yaxis\" [colors]=\"areaChartOptions.colors\"\n              [stroke]=\"areaChartOptions.stroke\" [legend]=\"areaChartOptions.legend\" [tooltip]=\"areaChartOptions.tooltip\"\n              [dataLabels]=\"areaChartOptions.dataLabels\"></apx-chart>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"header\">\n            <h2>Appointment Review</h2>\n\n          </div>\n          <div class=\"body\">\n            <apx-chart [series]=\"radialChartOptions.series\" [chart]=\"radialChartOptions.chart\"\n              [plotOptions]=\"radialChartOptions.plotOptions\" [labels]=\"radialChartOptions.labels\"></apx-chart>\n            <div class=\"text-center p-t-20\">\n              <div class=\"chart-note\">\n                <span class=\"dot bg-orange\"></span>\n                <span>Face To Face</span>\n              </div>\n              <div class=\"chart-note\">\n                <span class=\"dot bg-indigo\"></span>\n                <span>E-Consult</span>\n              </div>\n              <div class=\"chart-note msr-0\">\n                <span class=\"dot bg-green\"></span>\n                <span>Available</span>\n              </div>\n            </div>\n            <div class=\"text-center p-t-20\">\n              <button mat-stroked-button color=\"primary\">Modify Availability</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row clearfix\">\n      <div class=\"col-xs-12 col-sm-12 col-md-8 col-lg-8\">\n        <div class=\"card\">\n          <div class=\"header\">\n            <h2>\n              Todays Appointment</h2>\n\n          </div>\n          <div class=\"tableBody\">\n            <div class=\"table-responsive\">\n              <table class=\"table table-hover \">\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Patient Name</th>\n                    <th>Gender</th>\n                    <th>Last Visit</th>\n                    <th>Diseases</th>\n                    <th>Report</th>\n                    <th>Details </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td class=\"table-img\">\n                      <img src=\"assets/images/user/user1.jpg\" alt=\"\">\n                    </td>\n                    <td>John Doe</td>\n                    <td>Male</td>\n                    <td>12/05/2016 </td>\n                    <td>\n                      <div class=\"badge col-red\">Fever</div>\n                    </td>\n                    <td>\n                      <i class=\"far fa-file-pdf tbl-pdf\"></i>\n                    </td>\n                    <td>\n                      <button mat-flat-button color=\"primary\">Details</button>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td class=\"table-img\">\n                      <img src=\"assets/images/user/user2.jpg\" alt=\"\">\n                    </td>\n                    <td>Sarah Smith</td>\n                    <td>Female</td>\n                    <td>12/05/2016 </td>\n                    <td>\n                      <div class=\"badge col-green\">Cholera</div>\n                    </td>\n                    <td>\n                      <i class=\"far fa-file-pdf tbl-pdf\"></i>\n                    </td>\n                    <td>\n                      <button mat-flat-button color=\"primary\">Details</button>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td class=\"table-img\">\n                      <img src=\"assets/images/user/user3.jpg\" alt=\"\">\n                    </td>\n                    <td>Airi Satou</td>\n                    <td>Male</td>\n                    <td>12/05/2016 </td>\n                    <td>\n                      <div class=\"badge col-purple\">Jaundice</div>\n                    </td>\n                    <td>\n                      <i class=\"far fa-file-pdf tbl-pdf\"></i>\n                    </td>\n                    <td>\n                      <button mat-flat-button color=\"primary\">Details</button>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td class=\"table-img\">\n                      <img src=\"assets/images/user/user4.jpg\" alt=\"\">\n                    </td>\n                    <td>Angelica Ramos</td>\n                    <td>Female</td>\n                    <td>12/05/2016 </td>\n                    <td>\n                      <div class=\"badge col-purple\">Typhod</div>\n                    </td>\n                    <td>\n                      <i class=\"far fa-file-pdf tbl-pdf\"></i>\n                    </td>\n                    <td>\n                      <button mat-flat-button color=\"primary\">Details</button>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td class=\"table-img\">\n                      <img src=\"assets/images/user/user5.jpg\" alt=\"\">\n                    </td>\n                    <td>Ashton Cox</td>\n                    <td>Female</td>\n                    <td>12/05/2016 </td>\n                    <td>\n                      <div class=\"badge col-orange\">Maleria</div>\n                    </td>\n                    <td>\n                      <i class=\"far fa-file-pdf tbl-pdf\"></i>\n                    </td>\n                    <td>\n                      <button mat-flat-button color=\"primary\">Details</button>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td class=\"table-img\">\n                      <img src=\"assets/images/user/user8.jpg\" alt=\"\">\n                    </td>\n                    <td>Cara Stevens</td>\n                    <td>Male</td>\n                    <td>12/05/2016 </td>\n                    <td>\n                      <div class=\"badge col-cyan\">Infection</div>\n                    </td>\n                    <td>\n                      <i class=\"far fa-file-pdf tbl-pdf\"></i>\n                    </td>\n                    <td>\n                      <button mat-flat-button color=\"primary\">Details</button>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-xs-12 col-sm-12 col-md-4 col-lg-4\">\n        <div class=\"card\">\n          <div class=\"header\">\n            <h2>Patients Group</h2>\n          </div>\n          <div class=\"list-body\">\n            <ul class=\"list-unstyled list-unstyled-noborder\">\n              <li class=\"patient-group-list\">\n                <div class=\"d-flex\">\n                  <div class=\"lbl-bedge l-bg-orange\">\n                    <span class=\"lbl-bedge-title\">C</span>\n                  </div>\n                  <div class=\"group-details font-16\">Cholesterol</div>\n                </div>\n                <div class=\"ms-auto\">\n                  <div class=\"media-title text-muted mb-0 font-14\">5 Patients</div>\n                </div>\n              </li>\n              <li class=\"patient-group-list\">\n                <div class=\"d-flex\">\n                  <div class=\"lbl-bedge l-bg-card1\">\n                    <span class=\"lbl-bedge-title\">D</span>\n                  </div>\n                  <div class=\"group-details font-16\">Diabetic</div>\n                </div>\n                <div class=\"ms-auto\">\n                  <div class=\"media-title text-muted mb-0 font-14\">14 Patients</div>\n                </div>\n              </li>\n              <li class=\"patient-group-list\">\n                <div class=\"d-flex\">\n                  <div class=\"lbl-bedge l-bg-card2\">\n                    <span class=\"lbl-bedge-title\">L</span>\n                  </div>\n                  <div class=\"group-details font-16\">Low Blood Pressure</div>\n                </div>\n                <div class=\"ms-auto\">\n                  <div class=\"media-title text-muted mb-0 font-14\">10 Patients</div>\n                </div>\n              </li>\n              <li class=\"patient-group-list\">\n                <div class=\"d-flex\">\n                  <div class=\"lbl-bedge l-bg-cyan\">\n                    <span class=\"lbl-bedge-title\">H</span>\n                  </div>\n                  <div class=\"group-details font-16\">Hypertension</div>\n                </div>\n                <div class=\"ms-auto\">\n                  <div class=\"media-title text-muted mb-0 font-14\">21 Patients</div>\n                </div>\n              </li>\n              <li class=\"patient-group-list\">\n                <div class=\"d-flex\">\n                  <div class=\"lbl-bedge l-bg-red\">\n                    <span class=\"lbl-bedge-title\">M</span>\n                  </div>\n                  <div class=\"group-details font-16\">Malaria</div>\n                </div>\n                <div class=\"ms-auto\">\n                  <div class=\"media-title text-muted mb-0 font-14\">11 Patients</div>\n                </div>\n              </li>\n              <li class=\"patient-group-list\">\n                <div class=\"d-flex\">\n                  <div class=\"lbl-bedge l-bg-card3\">\n                    <span class=\"lbl-bedge-title\">D</span>\n                  </div>\n                  <div class=\"group-details font-16\">Dental Problem</div>\n                </div>\n                <div class=\"ms-auto\">\n                  <div class=\"media-title text-muted mb-0 font-14\">17 Patients</div>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-xs-12 col-sm-12 col-md-4 col-lg-4\">\n        <div class=\"card\">\n          <div class=\"header\">\n            <h2>\n              <strong>Todo</strong> List</h2>\n          </div>\n          <div class=\"body\">\n            <div cdkDropList class=\"task-list\" (cdkDropListDropped)=\"drop($event)\"\n              style=\"position: relative; max-height: 370px;\" [perfectScrollbar]>\n              <div class=\"task-box\" *ngFor=\"let task of tasks\" cdkDrag>\n                <div>\n                  <div class=\"task-handle m-r-20\" cdkDragHandle>\n                    <mat-icon aria-hidden=\"false\">drag_indicator</mat-icon>\n                  </div>\n                </div>\n                <mat-checkbox (change)=\"toggle(task, sidenav)\" [checked]=\"!!task.done\" class=\"m-r-15\" color=\"primary\">\n                </mat-checkbox>\n                <div class=\"task-custom-placeholder\" *cdkDragPlaceholder></div>\n                <div matTooltip=\"Title\" [ngClass]=\"{done:task.done}\">\n                  {{task.title}}</div>\n                <div\n                  [ngClass]=\"{'task-low': task.priority=='Low', 'task-high': task.priority=='High','task-normal': task.priority=='Normal'}\">\n                  <mat-icon matTooltip=\"Low\" aria-hidden=\"false\" class=\"lbl-low\" *ngIf=\"task?.priority == 'Low'\">\n                    arrow_downward\n                  </mat-icon>\n                  <mat-icon matTooltip=\"High\" aria-hidden=\"false\" class=\"lbl-high\" *ngIf=\"task?.priority == 'High'\">\n                    arrow_upward\n                  </mat-icon>\n                  <mat-icon matTooltip=\"Normal\" aria-hidden=\"false\" class=\"lbl-normal\"\n                    *ngIf=\"task?.priority == 'Normal'\">\n                    remove</mat-icon>\n                  {{task.priority}}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-xs-12 col-sm-12 col-md-4 col-lg-4\">\n        <div class=\"card\">\n          <div class=\"header\">\n            <h2>\n              Doctors List</h2>\n\n          </div>\n          <div class=\"tableBody\">\n            <div class=\"table-responsive\">\n              <table class=\"table table-hover \">\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Doctor Name</th>\n                    <th>Status</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td class=\"table-img\">\n                      <img src=\"assets/images/user/user5.jpg\" alt=\"\">\n                    </td>\n                    <td>\n                      <div class=\"media-title\"><a href=\"mailto:test@gmail.com\"> Dr.Jay Soni\n                        </a></div>\n                      <div class=\"text-job font-11\">(MBBS,MD)</div>\n                    </td>\n                    <td>\n                      <div class=\"badge col-green\">Available</div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td class=\"table-img\">\n                      <img src=\"assets/images/user/user6.jpg\" alt=\"\">\n                    </td>\n                    <td>\n                      <div class=\"media-title\"><a href=\"mailto:test@gmail.com\"> Dr.Sarah Smith\n                        </a></div>\n                      <div class=\"text-job font-11\">(BDS,MDS)</div>\n                    </td>\n                    <td>\n                      <div class=\"badge col-red\">Absend</div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td class=\"table-img\">\n                      <img src=\"assets/images/user/user3.jpg\" alt=\"\">\n                    </td>\n                    <td>\n                      <div class=\"media-title\"><a href=\"mailto:test@gmail.com\">Dr.Megha Trivedi\n                        </a></div>\n                      <div class=\"text-job font-11\">(BHMS)</div>\n                    </td>\n                    <td>\n                      <div class=\"badge col-green\">Available</div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td class=\"table-img\">\n                      <img src=\"assets/images/user/user2.jpg\" alt=\"\">\n                    </td>\n                    <td>\n                      <div class=\"media-title\"><a href=\"mailto:test@gmail.com\"> Dr.John Deo\n                        </a></div>\n                      <div class=\"text-job font-11\">(MBBS,MS)</div>\n                    </td>\n                    <td>\n                      <div class=\"badge col-green\">Available</div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td class=\"table-img\">\n                      <img src=\"assets/images/user/user1.jpg\" alt=\"\">\n                    </td>\n                    <td>\n                      <div class=\"media-title\"><a href=\"mailto:test@gmail.com\"> Dr.Jacob Ryan\n                        </a></div>\n                      <div class=\"text-job font-11\">(MBBS,MD)</div>\n                    </td>\n                    <td>\n                      <div class=\"badge col-red\">Absend</div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td class=\"table-img\">\n                      <img src=\"assets/images/user/user8.jpg\" alt=\"\">\n                    </td>\n                    <td>\n                      <div class=\"media-title\"><a href=\"mailto:test@gmail.com\"> Dr.Jay Soni\n                        </a></div>\n                      <div class=\"text-job font-11\">(MBBS)</div>\n                    </td>\n                    <td>\n                      <div class=\"badge col-green\">Available</div>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"header\">\n            <h2>Number Of Patients</h2>\n          </div>\n          <div class=\"body\">\n            <apx-chart [series]=\"linechartOptions.series\" [chart]=\"linechartOptions.chart\"\n              [dataLabels]=\"linechartOptions.dataLabels\" [plotOptions]=\"linechartOptions.plotOptions\"\n              [yaxis]=\"linechartOptions.yaxis\" [legend]=\"linechartOptions.legend\" [fill]=\"linechartOptions.fill\"\n              [colors]=\"linechartOptions.colors\" [stroke]=\"linechartOptions.stroke\" [tooltip]=\"linechartOptions.tooltip\"\n              [xaxis]=\"linechartOptions.xaxis\">\n            </apx-chart>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { asyncScheduler } from '../scheduler/async';\nimport { timer } from './timer';\nexport function interval(period = 0, scheduler = asyncScheduler) {\n    if (period < 0) {\n        period = 0;\n    }\n    return timer(period, period, scheduler);\n}\n","import * as i0 from '@angular/core';\nimport { Injectable, Inject, InjectionToken, Directive, Input, EventEmitter, Optional, SkipSelf, Output, Self, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { _getEventTarget, normalizePassiveListenerOptions, _getShadowRoot } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement, coerceArray, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge } from 'rxjs';\nimport { takeUntil, startWith, map, take, tap, switchMap } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i3 from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shallow-extends a stylesheet object with another stylesheet-like object.\n * Note that the keys in `source` have to be dash-cased.\n * @docs-private\n */\nfunction extendStyles(dest, source, importantProperties) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            const value = source[key];\n            if (value) {\n                dest.setProperty(key, value, (importantProperties === null || importantProperties === void 0 ? void 0 : importantProperties.has(key)) ? 'important' : '');\n            }\n            else {\n                dest.removeProperty(key);\n            }\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    const userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        'touch-action': enable ? '' : 'none',\n        '-webkit-user-drag': enable ? '' : 'none',\n        '-webkit-tap-highlight-color': enable ? '' : 'transparent',\n        'user-select': userSelect,\n        '-ms-user-select': userSelect,\n        '-webkit-user-select': userSelect,\n        '-moz-user-select': userSelect,\n    });\n}\n/**\n * Toggles whether an element is visible while preserving its dimensions.\n * @param element Element whose visibility to toggle\n * @param enable Whether the element should be visible.\n * @param importantProperties Properties to be set as `!important`.\n * @docs-private\n */\nfunction toggleVisibility(element, enable, importantProperties) {\n    extendStyles(element.style, {\n        position: enable ? '' : 'fixed',\n        top: enable ? '' : '0',\n        opacity: enable ? '' : '0',\n        left: enable ? '' : '-999em',\n    }, importantProperties);\n}\n/**\n * Combines a transform string with an optional other transform\n * that exited before the base transform was applied.\n */\nfunction combineTransforms(transform, initialTransform) {\n    return initialTransform && initialTransform != 'none'\n        ? transform + ' ' + initialTransform\n        : transform;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Parses a CSS time value to milliseconds. */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\nfunction getTransformTransitionDurationInMs(element) {\n    const computedStyle = getComputedStyle(element);\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    const propertyIndex = transitionedProperties.indexOf(property);\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return (parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]));\n}\n/** Parses out multiple values from a computed style into an array. */\nfunction parseCssPropertyValue(computedStyle, name) {\n    const value = computedStyle.getPropertyValue(name);\n    return value.split(',').map(part => part.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Gets a mutable version of an element's bounding `ClientRect`. */\nfunction getMutableClientRect(element) {\n    const clientRect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `ClientRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: clientRect.top,\n        right: clientRect.right,\n        bottom: clientRect.bottom,\n        left: clientRect.left,\n        width: clientRect.width,\n        height: clientRect.height,\n        x: clientRect.x,\n        y: clientRect.y,\n    };\n}\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param clientRect ClientRect that is being checked.\n * @param x Coordinates along the X axis.\n * @param y Coordinates along the Y axis.\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    const { top, bottom, left, right } = clientRect;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n * @param clientRect `ClientRect` that should be updated.\n * @param top Amount to add to the `top` position.\n * @param left Amount to add to the `left` position.\n */\nfunction adjustClientRect(clientRect, top, left) {\n    clientRect.top += top;\n    clientRect.bottom = clientRect.top + clientRect.height;\n    clientRect.left += left;\n    clientRect.right = clientRect.left + clientRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a ClientRect.\n * @param rect ClientRect to check against.\n * @param threshold Threshold around the ClientRect.\n * @param pointerX Coordinates along the X axis.\n * @param pointerY Coordinates along the Y axis.\n */\nfunction isPointerNearClientRect(rect, threshold, pointerX, pointerY) {\n    const { top, right, bottom, left, width, height } = rect;\n    const xThreshold = width * threshold;\n    const yThreshold = height * threshold;\n    return (pointerY > top - yThreshold &&\n        pointerY < bottom + yThreshold &&\n        pointerX > left - xThreshold &&\n        pointerX < right + xThreshold);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\nclass ParentPositionTracker {\n    constructor(_document) {\n        this._document = _document;\n        /** Cached positions of the scrollable parent elements. */\n        this.positions = new Map();\n    }\n    /** Clears the cached positions. */\n    clear() {\n        this.positions.clear();\n    }\n    /** Caches the positions. Should be called at the beginning of a drag sequence. */\n    cache(elements) {\n        this.clear();\n        this.positions.set(this._document, {\n            scrollPosition: this.getViewportScrollPosition(),\n        });\n        elements.forEach(element => {\n            this.positions.set(element, {\n                scrollPosition: { top: element.scrollTop, left: element.scrollLeft },\n                clientRect: getMutableClientRect(element),\n            });\n        });\n    }\n    /** Handles scrolling while a drag is taking place. */\n    handleScroll(event) {\n        const target = _getEventTarget(event);\n        const cachedPosition = this.positions.get(target);\n        if (!cachedPosition) {\n            return null;\n        }\n        const scrollPosition = cachedPosition.scrollPosition;\n        let newTop;\n        let newLeft;\n        if (target === this._document) {\n            const viewportScrollPosition = this.getViewportScrollPosition();\n            newTop = viewportScrollPosition.top;\n            newLeft = viewportScrollPosition.left;\n        }\n        else {\n            newTop = target.scrollTop;\n            newLeft = target.scrollLeft;\n        }\n        const topDifference = scrollPosition.top - newTop;\n        const leftDifference = scrollPosition.left - newLeft;\n        // Go through and update the cached positions of the scroll\n        // parents that are inside the element that was scrolled.\n        this.positions.forEach((position, node) => {\n            if (position.clientRect && target !== node && target.contains(node)) {\n                adjustClientRect(position.clientRect, topDifference, leftDifference);\n            }\n        });\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n        return { top: topDifference, left: leftDifference };\n    }\n    /**\n     * Gets the scroll position of the viewport. Note that we use the scrollX and scrollY directly,\n     * instead of going through the `ViewportRuler`, because the first value the ruler looks at is\n     * the top/left offset of the `document.documentElement` which works for most cases, but breaks\n     * if the element is offset by something like the `BlockScrollStrategy`.\n     */\n    getViewportScrollPosition() {\n        return { top: window.scrollY, left: window.scrollX };\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n    const clone = node.cloneNode(true);\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    const nodeName = node.nodeName.toLowerCase();\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (let i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    if (nodeName === 'canvas') {\n        transferCanvasData(node, clone);\n    }\n    else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\n        transferInputData(node, clone);\n    }\n    transferData('canvas', node, clone, transferCanvasData);\n    transferData('input, textarea, select', node, clone, transferInputData);\n    return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n    const descendantElements = node.querySelectorAll(selector);\n    if (descendantElements.length) {\n        const cloneElements = clone.querySelectorAll(selector);\n        for (let i = 0; i < descendantElements.length; i++) {\n            callback(descendantElements[i], cloneElements[i]);\n        }\n    }\n}\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n    // Browsers throw an error when assigning the value of a file input programmatically.\n    if (clone.type !== 'file') {\n        clone.value = source.value;\n    }\n    // Radio button `name` attributes must be unique for radio button groups\n    // otherwise original radio buttons can lose their checked state\n    // once the clone is inserted in the DOM.\n    if (clone.type === 'radio' && clone.name) {\n        clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n    }\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n    const context = clone.getContext('2d');\n    if (context) {\n        // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n        // We can't do much about it so just ignore the error.\n        try {\n            context.drawImage(source, 0, 0);\n        }\n        catch (_a) { }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/** Inline styles to be set as `!important` while dragging. */\nconst dragImportantProperties = new Set([\n    // Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\n    'position',\n]);\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n */\nclass DragRef {\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /** CSS `transform` that is applied to the element while it's being dragged. */\n        this._activeTransform = { x: 0, y: 0 };\n        /**\n         * Whether the dragging sequence has been started. Doesn't\n         * necessarily mean that the element has been moved.\n         */\n        this._hasStartedDragging = false;\n        /** Emits when the item is being moved. */\n        this._moveEvents = new Subject();\n        /** Subscription to pointer movement events. */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /** Subscription to the event that is dispatched when the user lifts their pointer. */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being scrolled. */\n        this._scrollSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being resized. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Cached reference to the boundary element. */\n        this._boundaryElement = null;\n        /** Whether the native dragging interactions have been enabled on the root element. */\n        this._nativeInteractionsEnabled = true;\n        /** Elements that can be used to drag the draggable item. */\n        this._handles = [];\n        /** Registered handles that are currently disabled. */\n        this._disabledHandles = new Set();\n        /** Layout direction of the item. */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /** Emits as the drag sequence is being prepared. */\n        this.beforeStarted = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new Subject();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new Subject();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new Subject();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new Subject();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new Subject();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents;\n        /** Handler for the `mousedown`/`touchstart` events. */\n        this._pointerDown = (event) => {\n            this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (this._handles.length) {\n                const targetHandle = this._getTargetHandle(event);\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!this.disabled) {\n                this._initializeDragSequence(this._rootElement, event);\n            }\n        };\n        /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n        this._pointerMove = (event) => {\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            if (!this._hasStartedDragging) {\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferrable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n                    const container = this._dropContainer;\n                    if (!isDelayElapsed) {\n                        this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!container || (!container.isDragging() && !container.isReceiving())) {\n                        // Prevent the default action as soon as the dragging sequence is considered as\n                        // \"started\" since waiting for the next event can allow the device to begin scrolling.\n                        event.preventDefault();\n                        this._hasStartedDragging = true;\n                        this._ngZone.run(() => this._startDragSequence(event));\n                    }\n                }\n                return;\n            }\n            // We prevent the default action down here so that we know that dragging has started. This is\n            // important for touch devices where doing this too early can unnecessarily block scrolling,\n            // if there's a dragging delay.\n            event.preventDefault();\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n            this._hasMoved = true;\n            this._lastKnownPointerPosition = pointerPosition;\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (this._dropContainer) {\n                this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\n            }\n            else {\n                const activeTransform = this._activeTransform;\n                activeTransform.x =\n                    constrainedPointerPosition.x - this._pickupPositionOnPage.x + this._passiveTransform.x;\n                activeTransform.y =\n                    constrainedPointerPosition.y - this._pickupPositionOnPage.y + this._passiveTransform.y;\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (this._moveEvents.observers.length) {\n                this._ngZone.run(() => {\n                    this._moveEvents.next({\n                        source: this,\n                        pointerPosition: constrainedPointerPosition,\n                        event,\n                        distance: this._getDragDistance(constrainedPointerPosition),\n                        delta: this._pointerDirectionDelta,\n                    });\n                });\n            }\n        };\n        /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n        this._pointerUp = (event) => {\n            this._endDragSequence(event);\n        };\n        /** Handles a native `dragstart` event. */\n        this._nativeDragStart = (event) => {\n            if (this._handles.length) {\n                const targetHandle = this._getTargetHandle(event);\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    event.preventDefault();\n                }\n            }\n            else if (!this.disabled) {\n                // Usually this isn't necessary since the we prevent the default action in `pointerDown`,\n                // but some cases like dragging of links can slip through (see #24403).\n                event.preventDefault();\n            }\n        };\n        this.withRootElement(element).withParent(_config.parentDragRef || null);\n        this._parentPositions = new ParentPositionTracker(_document);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._toggleNativeDragInteractions();\n            this._handles.forEach(handle => toggleNativeDragInteractions(handle, newValue));\n        }\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._placeholder;\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._rootElement;\n    }\n    /**\n     * Gets the currently-visible element that represents the drag item.\n     * While dragging this is the placeholder, otherwise it's the root element.\n     */\n    getVisibleElement() {\n        return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n    }\n    /** Registers the handles that can be used to drag the element. */\n    withHandles(handles) {\n        this._handles = handles.map(handle => coerceElement(handle));\n        this._handles.forEach(handle => toggleNativeDragInteractions(handle, this.disabled));\n        this._toggleNativeDragInteractions();\n        // Delete any lingering disabled handles that may have been destroyed. Note that we re-create\n        // the set, rather than iterate over it and filter out the destroyed handles, because while\n        // the ES spec allows for sets to be modified while they're being iterated over, some polyfills\n        // use an array internally which may throw an error.\n        const disabledHandles = new Set();\n        this._disabledHandles.forEach(handle => {\n            if (this._handles.indexOf(handle) > -1) {\n                disabledHandles.add(handle);\n            }\n        });\n        this._disabledHandles = disabledHandles;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @param template Template that from which to stamp out the preview.\n     */\n    withPreviewTemplate(template) {\n        this._previewTemplate = template;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @param template Template that from which to stamp out the placeholder.\n     */\n    withPlaceholderTemplate(template) {\n        this._placeholderTemplate = template;\n        return this;\n    }\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     */\n    withRootElement(rootElement) {\n        const element = coerceElement(rootElement);\n        if (element !== this._rootElement) {\n            if (this._rootElement) {\n                this._removeRootElementListeners(this._rootElement);\n            }\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n                element.addEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n                element.addEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n            });\n            this._initialTransform = undefined;\n            this._rootElement = element;\n        }\n        if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n            this._ownerSVGElement = this._rootElement.ownerSVGElement;\n        }\n        return this;\n    }\n    /**\n     * Element to which the draggable's position will be constrained.\n     */\n    withBoundaryElement(boundaryElement) {\n        this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        this._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            this._resizeSubscription = this._viewportRuler\n                .change(10)\n                .subscribe(() => this._containInsideBoundaryOnResize());\n        }\n        return this;\n    }\n    /** Sets the parent ref that the ref is nested in.  */\n    withParent(parent) {\n        this._parentDragRef = parent;\n        return this;\n    }\n    /** Removes the dragging functionality from the DOM element. */\n    dispose() {\n        var _a, _b;\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            (_a = this._rootElement) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        (_b = this._anchor) === null || _b === void 0 ? void 0 : _b.remove();\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeSubscriptions();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._resizeSubscription.unsubscribe();\n        this._parentPositions.clear();\n        this._boundaryElement =\n            this._rootElement =\n                this._ownerSVGElement =\n                    this._placeholderTemplate =\n                        this._previewTemplate =\n                            this._anchor =\n                                this._parentDragRef =\n                                    null;\n    }\n    /** Checks whether the element is currently being dragged. */\n    isDragging() {\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    }\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param handle Handle element that should be disabled.\n     */\n    disableHandle(handle) {\n        if (!this._disabledHandles.has(handle) && this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n            toggleNativeDragInteractions(handle, true);\n        }\n    }\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param handle Handle element to be enabled.\n     */\n    enableHandle(handle) {\n        if (this._disabledHandles.has(handle)) {\n            this._disabledHandles.delete(handle);\n            toggleNativeDragInteractions(handle, this.disabled);\n        }\n    }\n    /** Sets the layout direction of the draggable item. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /** Sets the container that the item is part of. */\n    _withDropContainer(container) {\n        this._dropContainer = container;\n    }\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform.x = value.x;\n        this._passiveTransform.y = value.y;\n        if (!this._dropContainer) {\n            this._applyRootElementTransform(value.x, value.y);\n        }\n        return this;\n    }\n    /**\n     * Sets the container into which to insert the preview element.\n     * @param value Container into which to insert the preview.\n     */\n    withPreviewContainer(value) {\n        this._previewContainer = value;\n        return this;\n    }\n    /** Updates the item's sort order based on the last-known pointer position. */\n    _sortFromLastPointerPosition() {\n        const position = this._lastKnownPointerPosition;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\n        }\n    }\n    /** Unsubscribes from the global subscriptions. */\n    _removeSubscriptions() {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n    }\n    /** Destroys the preview element and its ViewRef. */\n    _destroyPreview() {\n        var _a, _b;\n        (_a = this._preview) === null || _a === void 0 ? void 0 : _a.remove();\n        (_b = this._previewRef) === null || _b === void 0 ? void 0 : _b.destroy();\n        this._preview = this._previewRef = null;\n    }\n    /** Destroys the placeholder element and its ViewRef. */\n    _destroyPlaceholder() {\n        var _a, _b;\n        (_a = this._placeholder) === null || _a === void 0 ? void 0 : _a.remove();\n        (_b = this._placeholderRef) === null || _b === void 0 ? void 0 : _b.destroy();\n        this._placeholder = this._placeholderRef = null;\n    }\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @param event Browser event object that ended the sequence.\n     */\n    _endDragSequence(event) {\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeSubscriptions();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor =\n                this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging) {\n            return;\n        }\n        this.released.next({ source: this });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then(() => {\n                this._cleanupDragArtifacts(event);\n                this._cleanupCachedDimensions();\n                this._dragDropRegistry.stopDragging(this);\n            });\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run(() => {\n                this.ended.next({\n                    source: this,\n                    distance: this._getDragDistance(pointerPosition),\n                    dropPoint: pointerPosition,\n                });\n            });\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    }\n    /** Starts the dragging sequence. */\n    _startDragSequence(event) {\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        const dropContainer = this._dropContainer;\n        if (dropContainer) {\n            const element = this._rootElement;\n            const parent = element.parentNode;\n            const placeholder = (this._placeholder = this._createPlaceholderElement());\n            const anchor = (this._anchor = this._anchor || this._document.createComment(''));\n            // Needs to happen before the root element is moved.\n            const shadowRoot = this._getShadowRoot();\n            // Insert an anchor node so that we can restore the element's position in the DOM.\n            parent.insertBefore(anchor, element);\n            // There's no risk of transforms stacking when inside a drop container so\n            // we can keep the initial transform up to date any time dragging starts.\n            this._initialTransform = element.style.transform || '';\n            // Create the preview after the initial transform has\n            // been cached, because it can be affected by the transform.\n            this._preview = this._createPreviewElement();\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            toggleVisibility(element, false, dragImportantProperties);\n            this._document.body.appendChild(parent.replaceChild(placeholder, element));\n            this._getPreviewInsertionPoint(parent, shadowRoot).appendChild(this._preview);\n            this.started.next({ source: this }); // Emit before notifying the container.\n            dropContainer.start();\n            this._initialContainer = dropContainer;\n            this._initialIndex = dropContainer.getItemIndex(this);\n        }\n        else {\n            this.started.next({ source: this });\n            this._initialContainer = this._initialIndex = undefined;\n        }\n        // Important to run after we've called `start` on the parent container\n        // so that it has had time to resolve its scrollable parents.\n        this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n    }\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @param referenceElement Element that started the drag sequence.\n     * @param event Browser event object that started the sequence.\n     */\n    _initializeDragSequence(referenceElement, event) {\n        // Stop propagation if the item is inside another\n        // draggable so we don't start multiple drag sequences.\n        if (this._parentDragRef) {\n            event.stopPropagation();\n        }\n        const isDragging = this.isDragging();\n        const isTouchSequence = isTouchEvent(event);\n        const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;\n        const rootElement = this._rootElement;\n        const target = _getEventTarget(event);\n        const isSyntheticEvent = !isTouchSequence &&\n            this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        const isFakeEvent = isTouchSequence\n            ? isFakeTouchstartFromScreenReader(event)\n            : isFakeMousedownFromScreenReader(event);\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (target && target.draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent || isFakeEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            const rootStyles = rootElement.style;\n            this._rootElementTapHighlight = rootStyles.webkitTapHighlightColor || '';\n            rootStyles.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeSubscriptions();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry\n            .scrolled(this._getShadowRoot())\n            .subscribe(scrollEvent => this._updateOnScroll(scrollEvent));\n        if (this._boundaryElement) {\n            this._boundaryRect = getMutableClientRect(this._boundaryElement);\n        }\n        // If we have a custom preview we can't know ahead of time how large it'll be so we position\n        // it next to the cursor. The exception is when the consumer has opted into making the preview\n        // the same size as the root element, in which case we do know the size.\n        const previewTemplate = this._previewTemplate;\n        this._pickupPositionInElement =\n            previewTemplate && previewTemplate.template && !previewTemplate.matchSize\n                ? { x: 0, y: 0 }\n                : this._getPointerPositionInElement(referenceElement, event);\n        const pointerPosition = (this._pickupPositionOnPage =\n            this._lastKnownPointerPosition =\n                this._getPointerPositionOnPage(event));\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    }\n    /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n    _cleanupDragArtifacts(event) {\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        toggleVisibility(this._rootElement, true, dragImportantProperties);\n        this._anchor.parentNode.replaceChild(this._rootElement, this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._boundaryRect = this._previewRect = this._initialTransform = undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run(() => {\n            const container = this._dropContainer;\n            const currentIndex = container.getItemIndex(this);\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            const distance = this._getDragDistance(pointerPosition);\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            this.ended.next({ source: this, distance, dropPoint: pointerPosition });\n            this.dropped.next({\n                item: this,\n                currentIndex,\n                previousIndex: this._initialIndex,\n                container: container,\n                previousContainer: this._initialContainer,\n                isPointerOverContainer,\n                distance,\n                dropPoint: pointerPosition,\n            });\n            container.drop(this, currentIndex, this._initialIndex, this._initialContainer, isPointerOverContainer, distance, pointerPosition);\n            this._dropContainer = this._initialContainer;\n        });\n    }\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     */\n    _updateActiveDropContainer({ x, y }, { x: rawX, y: rawY }) {\n        // Drop container that draggable has been moved into.\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer &&\n            this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run(() => {\n                // Notify the old container that the item has left.\n                this.exited.next({ item: this, container: this._dropContainer });\n                this._dropContainer.exit(this);\n                // Notify the new container that the item has entered.\n                this._dropContainer = newContainer;\n                this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n                    // If we're re-entering the initial container and sorting is disabled,\n                    // put item the into its starting index to begin with.\n                    newContainer.sortingDisabled\n                    ? this._initialIndex\n                    : undefined);\n                this.entered.next({\n                    item: this,\n                    container: newContainer,\n                    currentIndex: newContainer.getItemIndex(this),\n                });\n            });\n        }\n        // Dragging may have been interrupted as a result of the events above.\n        if (this.isDragging()) {\n            this._dropContainer._startScrollingIfNecessary(rawX, rawY);\n            this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\n            this._applyPreviewTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n        }\n    }\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     */\n    _createPreviewElement() {\n        const previewConfig = this._previewTemplate;\n        const previewClass = this.previewClass;\n        const previewTemplate = previewConfig ? previewConfig.template : null;\n        let preview;\n        if (previewTemplate && previewConfig) {\n            // Measure the element before we've inserted the preview\n            // since the insertion could throw off the measurement.\n            const rootRect = previewConfig.matchSize ? this._rootElement.getBoundingClientRect() : null;\n            const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\n            viewRef.detectChanges();\n            preview = getRootNode(viewRef, this._document);\n            this._previewRef = viewRef;\n            if (previewConfig.matchSize) {\n                matchElementSize(preview, rootRect);\n            }\n            else {\n                preview.style.transform = getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n            }\n        }\n        else {\n            const element = this._rootElement;\n            preview = deepCloneNode(element);\n            matchElementSize(preview, element.getBoundingClientRect());\n            if (this._initialTransform) {\n                preview.style.transform = this._initialTransform;\n            }\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            'pointer-events': 'none',\n            // We have to reset the margin, because it can throw off positioning relative to the viewport.\n            'margin': '0',\n            'position': 'fixed',\n            'top': '0',\n            'left': '0',\n            'z-index': `${this._config.zIndex || 1000}`,\n        }, dragImportantProperties);\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('dir', this._direction);\n        if (previewClass) {\n            if (Array.isArray(previewClass)) {\n                previewClass.forEach(className => preview.classList.add(className));\n            }\n            else {\n                preview.classList.add(previewClass);\n            }\n        }\n        return preview;\n    }\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @returns Promise that resolves when the animation completes.\n     */\n    _animatePreviewToPlaceholder() {\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        const placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.classList.add('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._applyPreviewTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        const duration = getTransformTransitionDurationInMs(this._preview);\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular(() => {\n            return new Promise(resolve => {\n                const handler = ((event) => {\n                    var _a;\n                    if (!event ||\n                        (_getEventTarget(event) === this._preview && event.propertyName === 'transform')) {\n                        (_a = this._preview) === null || _a === void 0 ? void 0 : _a.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                });\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                const timeout = setTimeout(handler, duration * 1.5);\n                this._preview.addEventListener('transitionend', handler);\n            });\n        });\n    }\n    /** Creates an element that will be shown instead of the current element while dragging. */\n    _createPlaceholderElement() {\n        const placeholderConfig = this._placeholderTemplate;\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        let placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);\n            this._placeholderRef.detectChanges();\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        // Stop pointer events on the preview so the user can't\n        // interact with it while the preview is animating.\n        placeholder.style.pointerEvents = 'none';\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    }\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @param referenceElement Element that initiated the dragging.\n     * @param event Event that initiated the dragging.\n     */\n    _getPointerPositionInElement(referenceElement, event) {\n        const elementRect = this._rootElement.getBoundingClientRect();\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        const scrollPosition = this._getViewportScrollPosition();\n        const x = point.pageX - referenceRect.left - scrollPosition.left;\n        const y = point.pageY - referenceRect.top - scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y,\n        };\n    }\n    /** Determines the point of the page that was touched by the user. */\n    _getPointerPositionOnPage(event) {\n        const scrollPosition = this._getViewportScrollPosition();\n        const point = isTouchEvent(event)\n            ? // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n                // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\n                // to have a value, but Firefox in device emulation mode has a bug where both can be empty\n                // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\n                // throwing an error. The value returned here will be incorrect, but since this only\n                // breaks inside a developer tool and the value is only used for secondary information,\n                // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\n                event.touches[0] || event.changedTouches[0] || { pageX: 0, pageY: 0 }\n            : event;\n        const x = point.pageX - scrollPosition.left;\n        const y = point.pageY - scrollPosition.top;\n        // if dragging SVG element, try to convert from the screen coordinate system to the SVG\n        // coordinate system\n        if (this._ownerSVGElement) {\n            const svgMatrix = this._ownerSVGElement.getScreenCTM();\n            if (svgMatrix) {\n                const svgPoint = this._ownerSVGElement.createSVGPoint();\n                svgPoint.x = x;\n                svgPoint.y = y;\n                return svgPoint.matrixTransform(svgMatrix.inverse());\n            }\n        }\n        return { x, y };\n    }\n    /** Gets the pointer position on the page, accounting for any position constraints. */\n    _getConstrainedPointerPosition(point) {\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        let { x, y } = this.constrainPosition ? this.constrainPosition(point, this) : point;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            y = this._pickupPositionOnPage.y;\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            x = this._pickupPositionOnPage.x;\n        }\n        if (this._boundaryRect) {\n            const { x: pickupX, y: pickupY } = this._pickupPositionInElement;\n            const boundaryRect = this._boundaryRect;\n            const { width: previewWidth, height: previewHeight } = this._getPreviewRect();\n            const minY = boundaryRect.top + pickupY;\n            const maxY = boundaryRect.bottom - (previewHeight - pickupY);\n            const minX = boundaryRect.left + pickupX;\n            const maxX = boundaryRect.right - (previewWidth - pickupX);\n            x = clamp$1(x, minX, maxX);\n            y = clamp$1(y, minY, maxY);\n        }\n        return { x, y };\n    }\n    /** Updates the current drag delta, based on the user's current pointer position on the page. */\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\n        const { x, y } = pointerPositionOnPage;\n        const delta = this._pointerDirectionDelta;\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        const changeX = Math.abs(x - positionSinceLastChange.x);\n        const changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    }\n    /** Toggles the native drag interactions, based on how many handles are registered. */\n    _toggleNativeDragInteractions() {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    }\n    /** Removes the manually-added event listeners from the root element. */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n        element.removeEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n    }\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyRootElementTransform(x, y) {\n        const transform = getTransform(x, y);\n        const styles = this._rootElement.style;\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        // Should be excluded none because none + translate3d(x, y, x) is invalid css\n        if (this._initialTransform == null) {\n            this._initialTransform =\n                styles.transform && styles.transform != 'none' ? styles.transform : '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        styles.transform = combineTransforms(transform, this._initialTransform);\n    }\n    /**\n     * Applies a `transform` to the preview, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyPreviewTransform(x, y) {\n        var _a;\n        // Only apply the initial transform if the preview is a clone of the original element, otherwise\n        // it could be completely different and the transform might not make sense anymore.\n        const initialTransform = ((_a = this._previewTemplate) === null || _a === void 0 ? void 0 : _a.template) ? undefined : this._initialTransform;\n        const transform = getTransform(x, y);\n        this._preview.style.transform = combineTransforms(transform, initialTransform);\n    }\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @param currentPosition Current position of the user's pointer.\n     */\n    _getDragDistance(currentPosition) {\n        const pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    }\n    /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n    _cleanupCachedDimensions() {\n        this._boundaryRect = this._previewRect = undefined;\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     */\n    _containInsideBoundaryOnResize() {\n        let { x, y } = this._passiveTransform;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\n        const elementRect = this._rootElement.getBoundingClientRect();\n        // It's possible that the element got hidden away after dragging (e.g. by switching to a\n        // different tab). Don't do anything in this case so we don't clear the user's position.\n        if ((boundaryRect.width === 0 && boundaryRect.height === 0) ||\n            (elementRect.width === 0 && elementRect.height === 0)) {\n            return;\n        }\n        const leftOverflow = boundaryRect.left - elementRect.left;\n        const rightOverflow = elementRect.right - boundaryRect.right;\n        const topOverflow = boundaryRect.top - elementRect.top;\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y, x });\n        }\n    }\n    /** Gets the drag start delay, based on the event type. */\n    _getDragStartDelay(event) {\n        const value = this.dragStartDelay;\n        if (typeof value === 'number') {\n            return value;\n        }\n        else if (isTouchEvent(event)) {\n            return value.touch;\n        }\n        return value ? value.mouse : 0;\n    }\n    /** Updates the internal state of the draggable element when scrolling has occurred. */\n    _updateOnScroll(event) {\n        const scrollDifference = this._parentPositions.handleScroll(event);\n        if (scrollDifference) {\n            const target = _getEventTarget(event);\n            // ClientRect dimensions are based on the scroll position of the page and its parent\n            // node so we have to update the cached boundary ClientRect if the user has scrolled.\n            if (this._boundaryRect &&\n                target !== this._boundaryElement &&\n                target.contains(this._boundaryElement)) {\n                adjustClientRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n            }\n            this._pickupPositionOnPage.x += scrollDifference.left;\n            this._pickupPositionOnPage.y += scrollDifference.top;\n            // If we're in free drag mode, we have to update the active transform, because\n            // it isn't relative to the viewport like the preview inside a drop list.\n            if (!this._dropContainer) {\n                this._activeTransform.x -= scrollDifference.left;\n                this._activeTransform.y -= scrollDifference.top;\n                this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\n            }\n        }\n    }\n    /** Gets the scroll position of the viewport. */\n    _getViewportScrollPosition() {\n        var _a;\n        return (((_a = this._parentPositions.positions.get(this._document)) === null || _a === void 0 ? void 0 : _a.scrollPosition) ||\n            this._parentPositions.getViewportScrollPosition());\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (this._cachedShadowRoot === undefined) {\n            this._cachedShadowRoot = _getShadowRoot(this._rootElement);\n        }\n        return this._cachedShadowRoot;\n    }\n    /** Gets the element into which the drag preview should be inserted. */\n    _getPreviewInsertionPoint(initialParent, shadowRoot) {\n        const previewContainer = this._previewContainer || 'global';\n        if (previewContainer === 'parent') {\n            return initialParent;\n        }\n        if (previewContainer === 'global') {\n            const documentRef = this._document;\n            // We can't use the body if the user is in fullscreen mode,\n            // because the preview will render under the fullscreen element.\n            // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n            return (shadowRoot ||\n                documentRef.fullscreenElement ||\n                documentRef.webkitFullscreenElement ||\n                documentRef.mozFullScreenElement ||\n                documentRef.msFullscreenElement ||\n                documentRef.body);\n        }\n        return coerceElement(previewContainer);\n    }\n    /** Lazily resolves and returns the dimensions of the preview. */\n    _getPreviewRect() {\n        // Cache the preview element rect if we haven't cached it already or if\n        // we cached it too early before the element dimensions were computed.\n        if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n            this._previewRect = (this._preview || this._rootElement).getBoundingClientRect();\n        }\n        return this._previewRect;\n    }\n    /** Gets a handle that is the target of an event. */\n    _getTargetHandle(event) {\n        return this._handles.find(handle => {\n            return event.target && (event.target === handle || handle.contains(event.target));\n        });\n    }\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param x Desired position of the element along the X axis.\n * @param y Desired position of the element along the Y axis.\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n/** Clamps a value between a minimum and a maximum. */\nfunction clamp$1(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/** Determines whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n */\nfunction getRootNode(viewRef, _document) {\n    const rootNodes = viewRef.rootNodes;\n    if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n        return rootNodes[0];\n    }\n    const wrapper = _document.createElement('div');\n    rootNodes.forEach(node => wrapper.appendChild(node));\n    return wrapper;\n}\n/**\n * Matches the target element's size to the source's size.\n * @param target Element that needs to be resized.\n * @param sourceRect Dimensions of the source element.\n */\nfunction matchElementSize(target, sourceRect) {\n    target.style.width = `${sourceRect.width}px`;\n    target.style.height = `${sourceRect.height}px`;\n    target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Moves an item one index in an array to another.\n * @param array Array in which to move the item.\n * @param fromIndex Starting index of the item.\n * @param toIndex Index to which the item should be moved.\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    const from = clamp(fromIndex, array.length - 1);\n    const to = clamp(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    const target = array[from];\n    const delta = to < from ? -1 : 1;\n    for (let i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @param currentArray Array from which to transfer the item.\n * @param targetArray Array into which to put the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const from = clamp(currentIndex, currentArray.length - 1);\n    const to = clamp(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @param currentArray Array from which to copy the item.\n * @param targetArray Array into which is copy the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n *\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const to = clamp(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/** Clamps a number between zero and a maximum. */\nfunction clamp(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n */\nclass DropListRef {\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /** Whether starting a dragging sequence from this container is disabled. */\n        this.disabled = false;\n        /** Whether sorting items within the list is disabled. */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /** Number of pixels to scroll for each frame when auto-scrolling an element. */\n        this.autoScrollStep = 2;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Functions that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits right before dragging has started. */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new Subject();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new Subject();\n        /** Whether an item in the list is being dragged. */\n        this._isDragging = false;\n        /** Cache of the dimensions of all the items inside the container. */\n        this._itemPositions = [];\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n         * the pointer was moving in when the swap occured and whether the user's pointer continued to\n         * overlap with the swapped item after the swapping occurred.\n         */\n        this._previousSwap = { drag: null, delta: 0, overlaps: false };\n        /** Draggable items in the container. */\n        this._draggables = [];\n        /** Drop lists that are connected to the current one. */\n        this._siblings = [];\n        /** Direction in which the list is oriented. */\n        this._orientation = 'vertical';\n        /** Connected siblings that currently have a dragged item. */\n        this._activeSiblings = new Set();\n        /** Layout direction of the drop list. */\n        this._direction = 'ltr';\n        /** Subscription to the window being scrolled. */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /** Vertical direction in which the list is currently scrolling. */\n        this._verticalScrollDirection = 0 /* NONE */;\n        /** Horizontal direction in which the list is currently scrolling. */\n        this._horizontalScrollDirection = 0 /* NONE */;\n        /** Used to signal to the current auto-scroll sequence when to stop. */\n        this._stopScrollTimers = new Subject();\n        /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\n        this._cachedShadowRoot = null;\n        /** Starts the interval that'll auto-scroll the element. */\n        this._startScrollInterval = () => {\n            this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(this._stopScrollTimers))\n                .subscribe(() => {\n                const node = this._scrollNode;\n                const scrollStep = this.autoScrollStep;\n                if (this._verticalScrollDirection === 1 /* UP */) {\n                    node.scrollBy(0, -scrollStep);\n                }\n                else if (this._verticalScrollDirection === 2 /* DOWN */) {\n                    node.scrollBy(0, scrollStep);\n                }\n                if (this._horizontalScrollDirection === 1 /* LEFT */) {\n                    node.scrollBy(-scrollStep, 0);\n                }\n                else if (this._horizontalScrollDirection === 2 /* RIGHT */) {\n                    node.scrollBy(scrollStep, 0);\n                }\n            });\n        };\n        this.element = coerceElement(element);\n        this._document = _document;\n        this.withScrollableParents([this.element]);\n        _dragDropRegistry.registerDropContainer(this);\n        this._parentPositions = new ParentPositionTracker(_document);\n    }\n    /** Removes the drop list functionality from the DOM element. */\n    dispose() {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._viewportScrollSubscription.unsubscribe();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = null;\n        this._parentPositions.clear();\n        this._dragDropRegistry.removeDropContainer(this);\n    }\n    /** Whether an item from this list is currently being dragged. */\n    isDragging() {\n        return this._isDragging;\n    }\n    /** Starts dragging an item. */\n    start() {\n        this._draggingStarted();\n        this._notifyReceivingSiblings();\n    }\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        this._draggingStarted();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        let newIndex;\n        if (index == null) {\n            newIndex = this.sortingDisabled ? this._draggables.indexOf(item) : -1;\n            if (newIndex === -1) {\n                // We use the coordinates of where the item entered the drop\n                // zone to figure out at which index it should be inserted.\n                newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n            }\n        }\n        else {\n            newIndex = index;\n        }\n        const activeDraggables = this._activeDraggables;\n        const currentIndex = activeDraggables.indexOf(item);\n        const placeholder = item.getPlaceholderElement();\n        let newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // If we didn't find a new position reference, it means that either the item didn't start off\n        // in this container, or that the item requested to be inserted at the end of the list.\n        if (!newPositionReference &&\n            (newIndex == null || newIndex === -1 || newIndex < activeDraggables.length - 1) &&\n            this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n            newPositionReference = activeDraggables[0];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            const element = newPositionReference.getRootElement();\n            element.parentElement.insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else {\n            coerceElement(this.element).appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that the positions were already cached when we called `start` above,\n        // but we need to refresh them since the amount of items has changed and also parent rects.\n        this._cacheItemPositions();\n        this._cacheParentPositions();\n        // Notify siblings at the end so that the item has been inserted into the `activeDraggables`.\n        this._notifyReceivingSiblings();\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param item Item that was dragged out.\n     */\n    exit(item) {\n        this._reset();\n        this.exited.next({ item, container: this });\n    }\n    /**\n     * Drops an item into this container.\n     * @param item Item being dropped into the container.\n     * @param currentIndex Index at which the item should be inserted.\n     * @param previousIndex Index of the item when dragging started.\n     * @param previousContainer Container from which the item got dragged in.\n     * @param isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param distance Distance the user has dragged since the start of the dragging sequence.\n     */\n    drop(item, currentIndex, previousIndex, previousContainer, isPointerOverContainer, distance, dropPoint) {\n        this._reset();\n        this.dropped.next({\n            item,\n            currentIndex,\n            previousIndex,\n            container: this,\n            previousContainer,\n            isPointerOverContainer,\n            distance,\n            dropPoint,\n        });\n    }\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @param items Items that are a part of this list.\n     */\n    withItems(items) {\n        const previousItems = this._draggables;\n        this._draggables = items;\n        items.forEach(item => item._withDropContainer(this));\n        if (this.isDragging()) {\n            const draggedItems = previousItems.filter(item => item.isDragging());\n            // If all of the items being dragged were removed\n            // from the list, abort the current drag sequence.\n            if (draggedItems.every(item => items.indexOf(item) === -1)) {\n                this._reset();\n            }\n            else {\n                this._cacheItems();\n            }\n        }\n        return this;\n    }\n    /** Sets the layout direction of the drop list. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @param connectedTo Other containers that the current containers should be connected to.\n     */\n    connectedTo(connectedTo) {\n        this._siblings = connectedTo.slice();\n        return this;\n    }\n    /**\n     * Sets the orientation of the container.\n     * @param orientation New orientation for the container.\n     */\n    withOrientation(orientation) {\n        this._orientation = orientation;\n        return this;\n    }\n    /**\n     * Sets which parent elements are can be scrolled while the user is dragging.\n     * @param elements Elements that can be scrolled.\n     */\n    withScrollableParents(elements) {\n        const element = coerceElement(this.element);\n        // We always allow the current element to be scrollable\n        // so we need to ensure that it's in the array.\n        this._scrollableElements =\n            elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n        return this;\n    }\n    /** Gets the scrollable parents that are registered with this drop container. */\n    getScrollableParents() {\n        return this._scrollableElements;\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param item Item whose index should be determined.\n     */\n    getItemIndex(item) {\n        if (!this._isDragging) {\n            return this._draggables.indexOf(item);\n        }\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        const items = this._orientation === 'horizontal' && this._direction === 'rtl'\n            ? this._itemPositions.slice().reverse()\n            : this._itemPositions;\n        return items.findIndex(currentItem => currentItem.drag === item);\n    }\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     */\n    isReceiving() {\n        return this._activeSiblings.size > 0;\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled ||\n            !this._clientRect ||\n            !isPointerNearClientRect(this._clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n            return;\n        }\n        const siblings = this._itemPositions;\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return;\n        }\n        const isHorizontal = this._orientation === 'horizontal';\n        const currentIndex = siblings.findIndex(currentItem => currentItem.drag === item);\n        const siblingAtNewPosition = siblings[newIndex];\n        const currentPosition = siblings[currentIndex].clientRect;\n        const newPosition = siblingAtNewPosition.clientRect;\n        const delta = currentIndex > newIndex ? 1 : -1;\n        // How many pixels the item's placeholder should be offset.\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        const oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        this.sorted.next({\n            previousIndex: currentIndex,\n            currentIndex: newIndex,\n            container: this,\n            item,\n        });\n        siblings.forEach((sibling, index) => {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            const isDraggedItem = sibling.drag === item;\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\n            const elementToOffset = isDraggedItem\n                ? item.getPlaceholderElement()\n                : sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = combineTransforms(`translate3d(${Math.round(sibling.offset)}px, 0, 0)`, sibling.initialTransform);\n                adjustClientRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = combineTransforms(`translate3d(0, ${Math.round(sibling.offset)}px, 0)`, sibling.initialTransform);\n                adjustClientRect(sibling.clientRect, offset, 0);\n            }\n        });\n        // Note that it's important that we do this after the client rects have been adjusted.\n        this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n    }\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param pointerX User's pointer position along the x axis.\n     * @param pointerY User's pointer position along the y axis.\n     */\n    _startScrollingIfNecessary(pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        let scrollNode;\n        let verticalScrollDirection = 0 /* NONE */;\n        let horizontalScrollDirection = 0 /* NONE */;\n        // Check whether we should start scrolling any of the parent containers.\n        this._parentPositions.positions.forEach((position, element) => {\n            // We have special handling for the `document` below. Also this would be\n            // nicer with a  for...of loop, but it requires changing a compiler flag.\n            if (element === this._document || !position.clientRect || scrollNode) {\n                return;\n            }\n            if (isPointerNearClientRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n                [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, pointerX, pointerY);\n                if (verticalScrollDirection || horizontalScrollDirection) {\n                    scrollNode = element;\n                }\n            }\n        });\n        // Otherwise check if we can start scrolling the viewport.\n        if (!verticalScrollDirection && !horizontalScrollDirection) {\n            const { width, height } = this._viewportRuler.getViewportSize();\n            const clientRect = {\n                width,\n                height,\n                top: 0,\n                right: width,\n                bottom: height,\n                left: 0,\n            };\n            verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode &&\n            (verticalScrollDirection !== this._verticalScrollDirection ||\n                horizontalScrollDirection !== this._horizontalScrollDirection ||\n                scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                this._ngZone.runOutsideAngular(this._startScrollInterval);\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    }\n    /** Stops any currently-running auto-scroll sequences. */\n    _stopScrolling() {\n        this._stopScrollTimers.next();\n    }\n    /** Starts the dragging sequence within the list. */\n    _draggingStarted() {\n        const styles = coerceElement(this.element).style;\n        this.beforeStarted.next();\n        this._isDragging = true;\n        // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n        // scrolling. The browser seems to round the value based on the snapping points which means\n        // that we can't increment/decrement the scroll position.\n        this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\n        styles.scrollSnapType = styles.msScrollSnapType = 'none';\n        this._cacheItems();\n        this._viewportScrollSubscription.unsubscribe();\n        this._listenToScrollEvents();\n    }\n    /** Caches the positions of the configured scrollable parents. */\n    _cacheParentPositions() {\n        const element = coerceElement(this.element);\n        this._parentPositions.cache(this._scrollableElements);\n        // The list element is always in the `scrollableElements`\n        // so we can take advantage of the cached `ClientRect`.\n        this._clientRect = this._parentPositions.positions.get(element).clientRect;\n    }\n    /** Refreshes the position cache of the items and sibling containers. */\n    _cacheItemPositions() {\n        const isHorizontal = this._orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables\n            .map(drag => {\n            const elementToMeasure = drag.getVisibleElement();\n            return {\n                drag,\n                offset: 0,\n                initialTransform: elementToMeasure.style.transform || '',\n                clientRect: getMutableClientRect(elementToMeasure),\n            };\n        })\n            .sort((a, b) => {\n            return isHorizontal\n                ? a.clientRect.left - b.clientRect.left\n                : a.clientRect.top - b.clientRect.top;\n        });\n    }\n    /** Resets the container to its initial state. */\n    _reset() {\n        this._isDragging = false;\n        const styles = coerceElement(this.element).style;\n        styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach(item => {\n            var _a;\n            const rootElement = item.getRootElement();\n            if (rootElement) {\n                const initialTransform = (_a = this._itemPositions.find(current => current.drag === item)) === null || _a === void 0 ? void 0 : _a.initialTransform;\n                rootElement.style.transform = initialTransform || '';\n            }\n        });\n        this._siblings.forEach(sibling => sibling._stopReceiving(this));\n        this._activeDraggables = [];\n        this._itemPositions = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._previousSwap.overlaps = false;\n        this._stopScrolling();\n        this._viewportScrollSubscription.unsubscribe();\n        this._parentPositions.clear();\n    }\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @param currentIndex Index of the item currently being dragged.\n     * @param siblings All of the items in the list.\n     * @param delta Direction in which the user is moving.\n     */\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        const currentPosition = siblings[currentIndex].clientRect;\n        const immediateSibling = siblings[currentIndex + delta * -1];\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            const start = isHorizontal ? 'left' : 'top';\n            const end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    }\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @param currentPosition Current position of the item.\n     * @param newPosition Position of the item where the current item should be moved.\n     * @param delta Direction in which the user is moving.\n     */\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        let itemOffset = isHorizontal\n            ? newPosition.left - currentPosition.left\n            : newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal\n                ? newPosition.width - currentPosition.width\n                : newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    }\n    /**\n     * Checks if pointer is entering in the first position\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     */\n    _shouldEnterAsFirstChild(pointerX, pointerY) {\n        if (!this._activeDraggables.length) {\n            return false;\n        }\n        const itemPositions = this._itemPositions;\n        const isHorizontal = this._orientation === 'horizontal';\n        // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n        // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n        const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n        if (reversed) {\n            const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n            return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n        }\n        else {\n            const firstItemRect = itemPositions[0].clientRect;\n            return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n        }\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @param item Item that is being sorted.\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     * @param delta Direction in which the user is moving their pointer.\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        const index = this._itemPositions.findIndex(({ drag, clientRect }) => {\n            // Skip the item itself.\n            if (drag === item) {\n                return false;\n            }\n            if (delta) {\n                const direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, their cursor hasn't left\n                // the item after we made the swap, and they didn't change the direction in which they're\n                // dragging, we don't consider it a direction swap.\n                if (drag === this._previousSwap.drag &&\n                    this._previousSwap.overlaps &&\n                    direction === this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal\n                ? // Round these down since most browsers report client rects with\n                    // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                    pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right)\n                : pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n        });\n        return index === -1 || !this.sortPredicate(index, item, this) ? -1 : index;\n    }\n    /** Caches the current items in the list and their positions. */\n    _cacheItems() {\n        this._activeDraggables = this._draggables.slice();\n        this._cacheItemPositions();\n        this._cacheParentPositions();\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param x Pointer position along the X axis.\n     * @param y Pointer position along the Y axis.\n     */\n    _isOverContainer(x, y) {\n        return this._clientRect != null && isInsideClientRect(this._clientRect, x, y);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param item Drag item that is being moved.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        return this._siblings.find(sibling => sibling._canReceive(item, x, y));\n    }\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param item Item that is being dragged into the list.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _canReceive(item, x, y) {\n        if (!this._clientRect ||\n            !isInsideClientRect(this._clientRect, x, y) ||\n            !this.enterPredicate(item, this)) {\n            return false;\n        }\n        const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        const nativeElement = coerceElement(this.element);\n        // The `ClientRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n    }\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param sibling Sibling in which dragging has started.\n     */\n    _startReceiving(sibling, items) {\n        const activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling) &&\n            items.every(item => {\n                // Note that we have to add an exception to the `enterPredicate` for items that started off\n                // in this drop list. The drag ref has logic that allows an item to return to its initial\n                // container, if it has left the initial container and none of the connected containers\n                // allow it to enter. See `DragRef._updateActiveDropContainer` for more context.\n                return this.enterPredicate(item, this) || this._draggables.indexOf(item) > -1;\n            })) {\n            activeSiblings.add(sibling);\n            this._cacheParentPositions();\n            this._listenToScrollEvents();\n        }\n    }\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param sibling Sibling whose dragging has stopped.\n     */\n    _stopReceiving(sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n    }\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     */\n    _listenToScrollEvents() {\n        this._viewportScrollSubscription = this._dragDropRegistry\n            .scrolled(this._getShadowRoot())\n            .subscribe(event => {\n            if (this.isDragging()) {\n                const scrollDifference = this._parentPositions.handleScroll(event);\n                if (scrollDifference) {\n                    // Since we know the amount that the user has scrolled we can shift all of the\n                    // client rectangles ourselves. This is cheaper than re-measuring everything and\n                    // we can avoid inconsistent behavior where we might be measuring the element before\n                    // its position has changed.\n                    this._itemPositions.forEach(({ clientRect }) => {\n                        adjustClientRect(clientRect, scrollDifference.top, scrollDifference.left);\n                    });\n                    // We need two loops for this, because we want all of the cached\n                    // positions to be up-to-date before we re-sort the item.\n                    this._itemPositions.forEach(({ drag }) => {\n                        if (this._dragDropRegistry.isDragging(drag)) {\n                            // We need to re-sort the item manually, because the pointer move\n                            // events won't be dispatched while the user is scrolling.\n                            drag._sortFromLastPointerPosition();\n                        }\n                    });\n                }\n            }\n            else if (this.isReceiving()) {\n                this._cacheParentPositions();\n            }\n        });\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (!this._cachedShadowRoot) {\n            const shadowRoot = _getShadowRoot(coerceElement(this.element));\n            this._cachedShadowRoot = (shadowRoot || this._document);\n        }\n        return this._cachedShadowRoot;\n    }\n    /** Notifies any siblings that may potentially receive the item. */\n    _notifyReceivingSiblings() {\n        const draggedItems = this._activeDraggables.filter(item => item.isDragging());\n        this._siblings.forEach(sibling => sibling._startReceiving(this, draggedItems));\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    const { top, bottom, height } = clientRect;\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return 1 /* UP */;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return 2 /* DOWN */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerX Position of the user's pointer along the x axis.\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    const { left, right, width } = clientRect;\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return 1 /* LEFT */;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return 2 /* RIGHT */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param element Element for which we should calculate the scroll direction.\n * @param clientRect Bounding client rectangle of the element.\n * @param pointerX Position of the user's pointer along the x axis.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getElementScrollDirections(element, clientRect, pointerX, pointerY) {\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    let verticalScrollDirection = 0 /* NONE */;\n    let horizontalScrollDirection = 0 /* NONE */;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        const scrollTop = element.scrollTop;\n        if (computedVertical === 1 /* UP */) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = 1 /* UP */;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = 2 /* DOWN */;\n        }\n    }\n    if (computedHorizontal) {\n        const scrollLeft = element.scrollLeft;\n        if (computedHorizontal === 1 /* LEFT */) {\n            if (scrollLeft > 0) {\n                horizontalScrollDirection = 1 /* LEFT */;\n            }\n        }\n        else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n            horizontalScrollDirection = 2 /* RIGHT */;\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true,\n});\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * @docs-private\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nclass DragDropRegistry {\n    constructor(_ngZone, _document) {\n        this._ngZone = _ngZone;\n        /** Registered drop container instances. */\n        this._dropInstances = new Set();\n        /** Registered drag item instances. */\n        this._dragInstances = new Set();\n        /** Drag item instances that are currently being dragged. */\n        this._activeDragInstances = [];\n        /** Keeps track of the event listeners that we've bound to the `document`. */\n        this._globalListeners = new Map();\n        /**\n         * Predicate function to check if an item is being dragged.  Moved out into a property,\n         * because it'll be called a lot and we don't want to create a new function every time.\n         */\n        this._draggingPredicate = (item) => item.isDragging();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /**\n         * Emits when the viewport has been scrolled while the user is dragging an item.\n         * @deprecated To be turned into a private member. Use the `scrolled` method instead.\n         * @breaking-change 13.0.0\n         */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (event) => {\n            if (this._activeDragInstances.length > 0) {\n                event.preventDefault();\n            }\n        };\n        /** Event listener for `touchmove` that is bound even if no dragging is happening. */\n        this._persistentTouchmoveListener = (event) => {\n            if (this._activeDragInstances.length > 0) {\n                // Note that we only want to prevent the default action after dragging has actually started.\n                // Usually this is the same time at which the item is added to the `_activeDragInstances`,\n                // but it could be pushed back if the user has set up a drag delay or threshold.\n                if (this._activeDragInstances.some(this._draggingPredicate)) {\n                    event.preventDefault();\n                }\n                this.pointerMove.next(event);\n            }\n        };\n        this._document = _document;\n    }\n    /** Adds a drop container to the registry. */\n    registerDropContainer(drop) {\n        if (!this._dropInstances.has(drop)) {\n            this._dropInstances.add(drop);\n        }\n    }\n    /** Adds a drag item instance to the registry. */\n    registerDragItem(drag) {\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular(() => {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                this._document.addEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n            });\n        }\n    }\n    /** Removes a drop container from the registry. */\n    removeDropContainer(drop) {\n        this._dropInstances.delete(drop);\n    }\n    /** Removes a drag item instance from the registry. */\n    removeDragItem(drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n        }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param drag Drag instance which is being dragged.\n     * @param event Event that initiated the dragging.\n     */\n    startDragging(drag, event) {\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances.indexOf(drag) > -1) {\n            return;\n        }\n        this._activeDragInstances.push(drag);\n        if (this._activeDragInstances.length === 1) {\n            const isTouchEvent = event.type.startsWith('touch');\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(isTouchEvent ? 'touchend' : 'mouseup', {\n                handler: (e) => this.pointerUp.next(e),\n                options: true,\n            })\n                .set('scroll', {\n                handler: (e) => this.scroll.next(e),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true,\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions,\n            });\n            // We don't have to bind a move event for touch drag sequences, because\n            // we already have a persistent global one bound from `registerDragItem`.\n            if (!isTouchEvent) {\n                this._globalListeners.set('mousemove', {\n                    handler: (e) => this.pointerMove.next(e),\n                    options: activeCapturingEventOptions,\n                });\n            }\n            this._ngZone.runOutsideAngular(() => {\n                this._globalListeners.forEach((config, name) => {\n                    this._document.addEventListener(name, config.handler, config.options);\n                });\n            });\n        }\n    }\n    /** Stops dragging a drag item instance. */\n    stopDragging(drag) {\n        const index = this._activeDragInstances.indexOf(drag);\n        if (index > -1) {\n            this._activeDragInstances.splice(index, 1);\n            if (this._activeDragInstances.length === 0) {\n                this._clearGlobalListeners();\n            }\n        }\n    }\n    /** Gets whether a drag item instance is currently being dragged. */\n    isDragging(drag) {\n        return this._activeDragInstances.indexOf(drag) > -1;\n    }\n    /**\n     * Gets a stream that will emit when any element on the page is scrolled while an item is being\n     * dragged.\n     * @param shadowRoot Optional shadow root that the current dragging sequence started from.\n     *   Top-level listeners won't pick up events coming from the shadow DOM so this parameter can\n     *   be used to include an additional top-level listener at the shadow root level.\n     */\n    scrolled(shadowRoot) {\n        const streams = [this.scroll];\n        if (shadowRoot && shadowRoot !== this._document) {\n            // Note that this is basically the same as `fromEvent` from rjxs, but we do it ourselves,\n            // because we want to guarantee that the event is bound outside of the `NgZone`. With\n            // `fromEvent` it'll only happen if the subscription is outside the `NgZone`.\n            streams.push(new Observable((observer) => {\n                return this._ngZone.runOutsideAngular(() => {\n                    const eventOptions = true;\n                    const callback = (event) => {\n                        if (this._activeDragInstances.length) {\n                            observer.next(event);\n                        }\n                    };\n                    shadowRoot.addEventListener('scroll', callback, eventOptions);\n                    return () => {\n                        shadowRoot.removeEventListener('scroll', callback, eventOptions);\n                    };\n                });\n            }));\n        }\n        return merge(...streams);\n    }\n    ngOnDestroy() {\n        this._dragInstances.forEach(instance => this.removeDragItem(instance));\n        this._dropInstances.forEach(instance => this.removeDropContainer(instance));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    }\n    /** Clears out the global event listeners from the `document`. */\n    _clearGlobalListeners() {\n        this._globalListeners.forEach((config, name) => {\n            this._document.removeEventListener(name, config.handler, config.options);\n        });\n        this._globalListeners.clear();\n    }\n}\nDragDropRegistry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDropRegistry, deps: [{ token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nDragDropRegistry.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDropRegistry, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDropRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5,\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @param element Element to which to attach the dragging functionality.\n     * @param config Object used to configure the dragging behavior.\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @param element Element to which to attach the drop list functionality.\n     */\n    createDropList(element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n}\nDragDrop.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDrop, deps: [{ token: DOCUMENT }, { token: i0.NgZone }, { token: i1.ViewportRuler }, { token: DragDropRegistry }], target: i0.ɵɵFactoryTarget.Injectable });\nDragDrop.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDrop, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDrop, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i0.NgZone }, { type: i1.ViewportRuler }, { type: DragDropRegistry }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * @docs-private\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST_GROUP = new InjectionToken('CdkDropListGroup');\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\nclass CdkDropListGroup {\n    constructor() {\n        /** Drop lists registered inside the group. */\n        this._items = new Set();\n        this._disabled = false;\n    }\n    /** Whether starting a dragging sequence from inside this group is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnDestroy() {\n        this._items.clear();\n    }\n}\nCdkDropListGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDropListGroup, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nCdkDropListGroup.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkDropListGroup, selector: \"[cdkDropListGroup]\", inputs: { disabled: [\"cdkDropListGroupDisabled\", \"disabled\"] }, providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }], exportAs: [\"cdkDropListGroup\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDropListGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDropListGroup]',\n                    exportAs: 'cdkDropListGroup',\n                    providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }],\n                }]\n        }], propDecorators: { disabled: [{\n                type: Input,\n                args: ['cdkDropListGroupDisabled']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Asserts that a particular node is an element.\n * @param node Node to be checked.\n * @param name Name to attach to the error message.\n */\nfunction assertElementNode(node, name) {\n    if (node.nodeType !== 1) {\n        throw Error(`${name} must be attached to an element node. ` + `Currently attached to \"${node.nodeName}\".`);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique ids for drop zones. */\nlet _uniqueIdCounter = 0;\n/**\n * Injection token that can be used to reference instances of `CdkDropList`. It serves as\n * alternative token to the actual `CdkDropList` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST = new InjectionToken('CdkDropList');\n/** Container that wraps a set of draggable items. */\nclass CdkDropList {\n    constructor(\n    /** Element that the drop list is attached to. */\n    element, dragDrop, _changeDetectorRef, _scrollDispatcher, _dir, _group, config) {\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._dir = _dir;\n        this._group = _group;\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = `cdk-drop-list-${_uniqueIdCounter++}`;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Functions that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new EventEmitter();\n        /**\n         * Keeps track of the items that are registered with this container. Historically we used to\n         * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n         * well which means that we can't handle cases like dragging the headers of a `mat-table`\n         * correctly. What we do instead is to have the items register themselves with the container\n         * and then we sort them based on their position in the DOM.\n         */\n        this._unsortedItems = new Set();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDropList');\n        }\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        this._dropListRef.enterPredicate = (drag, drop) => {\n            return this.enterPredicate(drag.data, drop.data);\n        };\n        this._dropListRef.sortPredicate = (index, drag, drop) => {\n            return this.sortPredicate(index, drag.data, drop.data);\n        };\n        this._setupInputSyncSubscription(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    /** Whether starting a dragging sequence from this container is disabled. */\n    get disabled() {\n        return this._disabled || (!!this._group && this._group.disabled);\n    }\n    set disabled(value) {\n        // Usually we sync the directive and ref state right before dragging starts, in order to have\n        // a single point of failure and to avoid having to use setters for everything. `disabled` is\n        // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n        // the user in a disabled state, so we also need to sync it as it's being set.\n        this._dropListRef.disabled = this._disabled = coerceBooleanProperty(value);\n    }\n    /** Registers an items with the drop list. */\n    addItem(item) {\n        this._unsortedItems.add(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Removes an item from the drop list. */\n    removeItem(item) {\n        this._unsortedItems.delete(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Gets the registered items in the list, sorted by their position in the DOM. */\n    getSortedItems() {\n        return Array.from(this._unsortedItems).sort((a, b) => {\n            const documentPosition = a._dragRef\n                .getVisibleElement()\n                .compareDocumentPosition(b._dragRef.getVisibleElement());\n            // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n            // tslint:disable-next-line:no-bitwise\n            return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n        });\n    }\n    ngOnDestroy() {\n        const index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._unsortedItems.clear();\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n    _setupInputSyncSubscription(ref) {\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe(value => ref.withDirection(value));\n        }\n        ref.beforeStarted.subscribe(() => {\n            const siblings = coerceArray(this.connectedTo).map(drop => {\n                if (typeof drop === 'string') {\n                    const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);\n                    if (!correspondingDropList && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                        console.warn(`CdkDropList could not find connected drop list with id \"${drop}\"`);\n                    }\n                    return correspondingDropList;\n                }\n                return drop;\n            });\n            if (this._group) {\n                this._group._items.forEach(drop => {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                });\n            }\n            // Note that we resolve the scrollable parents here so that we delay the resolution\n            // as long as possible, ensuring that the element is in its final place in the DOM.\n            if (!this._scrollableParentsResolved) {\n                const scrollableParents = this._scrollDispatcher\n                    .getAncestorScrollContainers(this.element)\n                    .map(scrollable => scrollable.getElementRef().nativeElement);\n                this._dropListRef.withScrollableParents(scrollableParents);\n                // Only do this once since it involves traversing the DOM and the parents\n                // shouldn't be able to change without the drop list being destroyed.\n                this._scrollableParentsResolved = true;\n            }\n            ref.disabled = this.disabled;\n            ref.lockAxis = this.lockAxis;\n            ref.sortingDisabled = coerceBooleanProperty(this.sortingDisabled);\n            ref.autoScrollDisabled = coerceBooleanProperty(this.autoScrollDisabled);\n            ref.autoScrollStep = coerceNumberProperty(this.autoScrollStep, 2);\n            ref\n                .connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef))\n                .withOrientation(this.orientation);\n        });\n    }\n    /** Handles events from the underlying DropListRef. */\n    _handleEvents(ref) {\n        ref.beforeStarted.subscribe(() => {\n            this._syncItemsWithRef();\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: this,\n                item: event.item.data,\n                currentIndex: event.currentIndex,\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: this,\n                item: event.item.data,\n            });\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.sorted.subscribe(event => {\n            this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: this,\n                item: event.item.data,\n            });\n        });\n        ref.dropped.subscribe(event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                item: event.item.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                distance: event.distance,\n                dropPoint: event.dropPoint,\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, draggingDisabled, sortingDisabled, listAutoScrollDisabled, listOrientation } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n        this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n        this.orientation = listOrientation || 'vertical';\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n    }\n    /** Syncs up the registered drag items with underlying drop list ref. */\n    _syncItemsWithRef() {\n        this._dropListRef.withItems(this.getSortedItems().map(item => item._dragRef));\n    }\n}\n/** Keeps track of the drop lists that are currently on the page. */\nCdkDropList._dropLists = [];\nCdkDropList.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDropList, deps: [{ token: i0.ElementRef }, { token: DragDrop }, { token: i0.ChangeDetectorRef }, { token: i1.ScrollDispatcher }, { token: i3.Directionality, optional: true }, { token: CDK_DROP_LIST_GROUP, optional: true, skipSelf: true }, { token: CDK_DRAG_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDropList.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkDropList, selector: \"[cdkDropList], cdk-drop-list\", inputs: { connectedTo: [\"cdkDropListConnectedTo\", \"connectedTo\"], data: [\"cdkDropListData\", \"data\"], orientation: [\"cdkDropListOrientation\", \"orientation\"], id: \"id\", lockAxis: [\"cdkDropListLockAxis\", \"lockAxis\"], disabled: [\"cdkDropListDisabled\", \"disabled\"], sortingDisabled: [\"cdkDropListSortingDisabled\", \"sortingDisabled\"], enterPredicate: [\"cdkDropListEnterPredicate\", \"enterPredicate\"], sortPredicate: [\"cdkDropListSortPredicate\", \"sortPredicate\"], autoScrollDisabled: [\"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\"], autoScrollStep: [\"cdkDropListAutoScrollStep\", \"autoScrollStep\"] }, outputs: { dropped: \"cdkDropListDropped\", entered: \"cdkDropListEntered\", exited: \"cdkDropListExited\", sorted: \"cdkDropListSorted\" }, host: { properties: { \"attr.id\": \"id\", \"class.cdk-drop-list-disabled\": \"disabled\", \"class.cdk-drop-list-dragging\": \"_dropListRef.isDragging()\", \"class.cdk-drop-list-receiving\": \"_dropListRef.isReceiving()\" }, classAttribute: \"cdk-drop-list\" }, providers: [\n        // Prevent child drop lists from picking up the same group as their parent.\n        { provide: CDK_DROP_LIST_GROUP, useValue: undefined },\n        { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n    ], exportAs: [\"cdkDropList\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDropList, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDropList], cdk-drop-list',\n                    exportAs: 'cdkDropList',\n                    providers: [\n                        // Prevent child drop lists from picking up the same group as their parent.\n                        { provide: CDK_DROP_LIST_GROUP, useValue: undefined },\n                        { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n                    ],\n                    host: {\n                        'class': 'cdk-drop-list',\n                        '[attr.id]': 'id',\n                        '[class.cdk-drop-list-disabled]': 'disabled',\n                        '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                        '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: DragDrop }, { type: i0.ChangeDetectorRef }, { type: i1.ScrollDispatcher }, { type: i3.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: CdkDropListGroup, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [CDK_DROP_LIST_GROUP]\n                    }, {\n                        type: SkipSelf\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [CDK_DRAG_CONFIG]\n                    }] }];\n    }, propDecorators: { connectedTo: [{\n                type: Input,\n                args: ['cdkDropListConnectedTo']\n            }], data: [{\n                type: Input,\n                args: ['cdkDropListData']\n            }], orientation: [{\n                type: Input,\n                args: ['cdkDropListOrientation']\n            }], id: [{\n                type: Input\n            }], lockAxis: [{\n                type: Input,\n                args: ['cdkDropListLockAxis']\n            }], disabled: [{\n                type: Input,\n                args: ['cdkDropListDisabled']\n            }], sortingDisabled: [{\n                type: Input,\n                args: ['cdkDropListSortingDisabled']\n            }], enterPredicate: [{\n                type: Input,\n                args: ['cdkDropListEnterPredicate']\n            }], sortPredicate: [{\n                type: Input,\n                args: ['cdkDropListSortPredicate']\n            }], autoScrollDisabled: [{\n                type: Input,\n                args: ['cdkDropListAutoScrollDisabled']\n            }], autoScrollStep: [{\n                type: Input,\n                args: ['cdkDropListAutoScrollStep']\n            }], dropped: [{\n                type: Output,\n                args: ['cdkDropListDropped']\n            }], entered: [{\n                type: Output,\n                args: ['cdkDropListEntered']\n            }], exited: [{\n                type: Output,\n                args: ['cdkDropListExited']\n            }], sorted: [{\n                type: Output,\n                args: ['cdkDropListSorted']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_HANDLE = new InjectionToken('CdkDragHandle');\n/** Handle that can be used to drag a CdkDrag instance. */\nclass CdkDragHandle {\n    constructor(element, parentDrag) {\n        this.element = element;\n        /** Emits when the state of the handle has changed. */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDragHandle');\n        }\n        this._parentDrag = parentDrag;\n    }\n    /** Whether starting to drag through this handle is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._stateChanges.next(this);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nCdkDragHandle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDragHandle, deps: [{ token: i0.ElementRef }, { token: CDK_DRAG_PARENT, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDragHandle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkDragHandle, selector: \"[cdkDragHandle]\", inputs: { disabled: [\"cdkDragHandleDisabled\", \"disabled\"] }, host: { classAttribute: \"cdk-drag-handle\" }, providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDragHandle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDragHandle]',\n                    host: {\n                        'class': 'cdk-drag-handle',\n                    },\n                    providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_DRAG_PARENT]\n                    }, {\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }] }];\n    }, propDecorators: { disabled: [{\n                type: Input,\n                args: ['cdkDragHandleDisabled']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PLACEHOLDER = new InjectionToken('CdkDragPlaceholder');\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\nclass CdkDragPlaceholder {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkDragPlaceholder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDragPlaceholder, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDragPlaceholder.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkDragPlaceholder, selector: \"ng-template[cdkDragPlaceholder]\", inputs: { data: \"data\" }, providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDragPlaceholder, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkDragPlaceholder]',\n                    providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { data: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as\n * alternative token to the actual `CdkDragPreview` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PREVIEW = new InjectionToken('CdkDragPreview');\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n */\nclass CdkDragPreview {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._matchSize = false;\n    }\n    /** Whether the preview should preserve the same size as the item that is being dragged. */\n    get matchSize() {\n        return this._matchSize;\n    }\n    set matchSize(value) {\n        this._matchSize = coerceBooleanProperty(value);\n    }\n}\nCdkDragPreview.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDragPreview, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDragPreview.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkDragPreview, selector: \"ng-template[cdkDragPreview]\", inputs: { data: \"data\", matchSize: \"matchSize\" }, providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDragPreview, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkDragPreview]',\n                    providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], matchSize: [{\n                type: Input\n            }] } });\n\nconst DRAG_HOST_CLASS = 'cdk-drag';\n/** Element that can be moved inside a CdkDropList container. */\nclass CdkDrag {\n    constructor(\n    /** Element that the draggable is attached to. */\n    element, \n    /** Droppable container that the draggable is a part of. */\n    dropContainer, \n    /**\n     * @deprecated `_document` parameter no longer being used and will be removed.\n     * @breaking-change 12.0.0\n     */\n    _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef, _selfHandle, _parentDrag) {\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._selfHandle = _selfHandle;\n        this._parentDrag = _parentDrag;\n        this._destroyed = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new EventEmitter();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new EventEmitter();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new EventEmitter();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new EventEmitter();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new EventEmitter();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((observer) => {\n            const subscription = this._dragRef.moved\n                .pipe(map(movedEvent => ({\n                source: this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance,\n            })))\n                .subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n            };\n        });\n        this._dragRef = dragDrop.createDrag(element, {\n            dragStartThreshold: config && config.dragStartThreshold != null ? config.dragStartThreshold : 5,\n            pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null\n                ? config.pointerDirectionChangeThreshold\n                : 5,\n            zIndex: config === null || config === void 0 ? void 0 : config.zIndex,\n        });\n        this._dragRef.data = this;\n        // We have to keep track of the drag instances in order to be able to match an element to\n        // a drag instance. We can't go through the global registry of `DragRef`, because the root\n        // element could be different.\n        CdkDrag._dragInstances.push(this);\n        if (config) {\n            this._assignDefaults(config);\n        }\n        // Note that usually the container is assigned when the drop list is picks up the item, but in\n        // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n        // where there are no items on the first change detection pass, but the items get picked up as\n        // soon as the user triggers another pass by dragging. This is a problem, because the item would\n        // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n        // is too late since the two modes save different kinds of information. We work around it by\n        // assigning the drop container both from here and the list.\n        if (dropContainer) {\n            this._dragRef._withDropContainer(dropContainer._dropListRef);\n            dropContainer.addItem(this);\n        }\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._dragRef.disabled = this._disabled;\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._dragRef.getPlaceholderElement();\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._dragRef.getRootElement();\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        return this._dragRef.getFreeDragPosition();\n    }\n    ngAfterViewInit() {\n        // Normally this isn't in the zone, but it can cause major performance regressions for apps\n        // using `zone-patch-rxjs` because it'll trigger a change detection when it unsubscribes.\n        this._ngZone.runOutsideAngular(() => {\n            // We need to wait for the zone to stabilize, in order for the reference\n            // element to be in the proper place in the DOM. This is mostly relevant\n            // for draggable elements inside portals since they get stamped out in\n            // their original DOM position and then they get transferred to the portal.\n            this._ngZone.onStable.pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n                this._updateRootElement();\n                this._setupHandlesListener();\n                if (this.freeDragPosition) {\n                    this._dragRef.setFreeDragPosition(this.freeDragPosition);\n                }\n            });\n        });\n    }\n    ngOnChanges(changes) {\n        const rootSelectorChange = changes['rootElementSelector'];\n        const positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in `ngAfterViewInit` where it needs to be deferred.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    }\n    ngOnDestroy() {\n        if (this.dropContainer) {\n            this.dropContainer.removeItem(this);\n        }\n        const index = CdkDrag._dragInstances.indexOf(this);\n        if (index > -1) {\n            CdkDrag._dragInstances.splice(index, 1);\n        }\n        // Unnecessary in most cases, but used to avoid extra change detections with `zone-paths-rxjs`.\n        this._ngZone.runOutsideAngular(() => {\n            this._destroyed.next();\n            this._destroyed.complete();\n            this._dragRef.dispose();\n        });\n    }\n    /** Syncs the root element with the `DragRef`. */\n    _updateRootElement() {\n        var _a;\n        const element = this.element.nativeElement;\n        let rootElement = element;\n        if (this.rootElementSelector) {\n            rootElement =\n                element.closest !== undefined\n                    ? element.closest(this.rootElementSelector)\n                    : // Comment tag doesn't have closest method, so use parent's one.\n                        (_a = element.parentElement) === null || _a === void 0 ? void 0 : _a.closest(this.rootElementSelector);\n        }\n        if (rootElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            assertElementNode(rootElement, 'cdkDrag');\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    }\n    /** Gets the boundary element, based on the `boundaryElement` value. */\n    _getBoundaryElement() {\n        const boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return this.element.nativeElement.closest(boundary);\n        }\n        return coerceElement(boundary);\n    }\n    /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n    _syncInputs(ref) {\n        ref.beforeStarted.subscribe(() => {\n            if (!ref.isDragging()) {\n                const dir = this._dir;\n                const dragStartDelay = this.dragStartDelay;\n                const placeholder = this._placeholderTemplate\n                    ? {\n                        template: this._placeholderTemplate.templateRef,\n                        context: this._placeholderTemplate.data,\n                        viewContainer: this._viewContainerRef,\n                    }\n                    : null;\n                const preview = this._previewTemplate\n                    ? {\n                        template: this._previewTemplate.templateRef,\n                        context: this._previewTemplate.data,\n                        matchSize: this._previewTemplate.matchSize,\n                        viewContainer: this._viewContainerRef,\n                    }\n                    : null;\n                ref.disabled = this.disabled;\n                ref.lockAxis = this.lockAxis;\n                ref.dragStartDelay =\n                    typeof dragStartDelay === 'object' && dragStartDelay\n                        ? dragStartDelay\n                        : coerceNumberProperty(dragStartDelay);\n                ref.constrainPosition = this.constrainPosition;\n                ref.previewClass = this.previewClass;\n                ref\n                    .withBoundaryElement(this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview)\n                    .withPreviewContainer(this.previewContainer || 'global');\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        });\n        // This only needs to be resolved once.\n        ref.beforeStarted.pipe(take(1)).subscribe(() => {\n            var _a;\n            // If we managed to resolve a parent through DI, use it.\n            if (this._parentDrag) {\n                ref.withParent(this._parentDrag._dragRef);\n                return;\n            }\n            // Otherwise fall back to resolving the parent by looking up the DOM. This can happen if\n            // the item was projected into another item by something like `ngTemplateOutlet`.\n            let parent = this.element.nativeElement.parentElement;\n            while (parent) {\n                if (parent.classList.contains(DRAG_HOST_CLASS)) {\n                    ref.withParent(((_a = CdkDrag._dragInstances.find(drag => {\n                        return drag.element.nativeElement === parent;\n                    })) === null || _a === void 0 ? void 0 : _a._dragRef) || null);\n                    break;\n                }\n                parent = parent.parentElement;\n            }\n        });\n    }\n    /** Handles the events from the underlying `DragRef`. */\n    _handleEvents(ref) {\n        ref.started.subscribe(() => {\n            this.started.emit({ source: this });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.released.subscribe(() => {\n            this.released.emit({ source: this });\n        });\n        ref.ended.subscribe(event => {\n            this.ended.emit({\n                source: this,\n                distance: event.distance,\n                dropPoint: event.dropPoint,\n            });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: event.container.data,\n                item: this,\n                currentIndex: event.currentIndex,\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: event.container.data,\n                item: this,\n            });\n        });\n        ref.dropped.subscribe(event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                item: this,\n                distance: event.distance,\n                dropPoint: event.dropPoint,\n            });\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, dragStartDelay, constrainPosition, previewClass, boundaryElement, draggingDisabled, rootElementSelector, previewContainer, } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.dragStartDelay = dragStartDelay || 0;\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n        if (constrainPosition) {\n            this.constrainPosition = constrainPosition;\n        }\n        if (previewClass) {\n            this.previewClass = previewClass;\n        }\n        if (boundaryElement) {\n            this.boundaryElement = boundaryElement;\n        }\n        if (rootElementSelector) {\n            this.rootElementSelector = rootElementSelector;\n        }\n        if (previewContainer) {\n            this.previewContainer = previewContainer;\n        }\n    }\n    /** Sets up the listener that syncs the handles with the drag ref. */\n    _setupHandlesListener() {\n        // Listen for any newly-added handles.\n        this._handles.changes\n            .pipe(startWith(this._handles), \n        // Sync the new handles with the DragRef.\n        tap((handles) => {\n            const childHandleElements = handles\n                .filter(handle => handle._parentDrag === this)\n                .map(handle => handle.element);\n            // Usually handles are only allowed to be a descendant of the drag element, but if\n            // the consumer defined a different drag root, we should allow the drag element\n            // itself to be a handle too.\n            if (this._selfHandle && this.rootElementSelector) {\n                childHandleElements.push(this.element);\n            }\n            this._dragRef.withHandles(childHandleElements);\n        }), \n        // Listen if the state of any of the handles changes.\n        switchMap((handles) => {\n            return merge(...handles.map(item => {\n                return item._stateChanges.pipe(startWith(item));\n            }));\n        }), takeUntil(this._destroyed))\n            .subscribe(handleInstance => {\n            // Enabled/disable the handle that changed in the DragRef.\n            const dragRef = this._dragRef;\n            const handle = handleInstance.element.nativeElement;\n            handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n        });\n    }\n}\nCdkDrag._dragInstances = [];\nCdkDrag.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDrag, deps: [{ token: i0.ElementRef }, { token: CDK_DROP_LIST, optional: true, skipSelf: true }, { token: DOCUMENT }, { token: i0.NgZone }, { token: i0.ViewContainerRef }, { token: CDK_DRAG_CONFIG, optional: true }, { token: i3.Directionality, optional: true }, { token: DragDrop }, { token: i0.ChangeDetectorRef }, { token: CDK_DRAG_HANDLE, optional: true, self: true }, { token: CDK_DRAG_PARENT, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDrag.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkDrag, selector: \"[cdkDrag]\", inputs: { data: [\"cdkDragData\", \"data\"], lockAxis: [\"cdkDragLockAxis\", \"lockAxis\"], rootElementSelector: [\"cdkDragRootElement\", \"rootElementSelector\"], boundaryElement: [\"cdkDragBoundary\", \"boundaryElement\"], dragStartDelay: [\"cdkDragStartDelay\", \"dragStartDelay\"], freeDragPosition: [\"cdkDragFreeDragPosition\", \"freeDragPosition\"], disabled: [\"cdkDragDisabled\", \"disabled\"], constrainPosition: [\"cdkDragConstrainPosition\", \"constrainPosition\"], previewClass: [\"cdkDragPreviewClass\", \"previewClass\"], previewContainer: [\"cdkDragPreviewContainer\", \"previewContainer\"] }, outputs: { started: \"cdkDragStarted\", released: \"cdkDragReleased\", ended: \"cdkDragEnded\", entered: \"cdkDragEntered\", exited: \"cdkDragExited\", dropped: \"cdkDragDropped\", moved: \"cdkDragMoved\" }, host: { properties: { \"class.cdk-drag-disabled\": \"disabled\", \"class.cdk-drag-dragging\": \"_dragRef.isDragging()\" }, classAttribute: \"cdk-drag\" }, providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }], queries: [{ propertyName: \"_previewTemplate\", first: true, predicate: CDK_DRAG_PREVIEW, descendants: true }, { propertyName: \"_placeholderTemplate\", first: true, predicate: CDK_DRAG_PLACEHOLDER, descendants: true }, { propertyName: \"_handles\", predicate: CDK_DRAG_HANDLE, descendants: true }], exportAs: [\"cdkDrag\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDrag, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDrag]',\n                    exportAs: 'cdkDrag',\n                    host: {\n                        'class': DRAG_HOST_CLASS,\n                        '[class.cdk-drag-disabled]': 'disabled',\n                        '[class.cdk-drag-dragging]': '_dragRef.isDragging()',\n                    },\n                    providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_DROP_LIST]\n                    }, {\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i0.NgZone }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [CDK_DRAG_CONFIG]\n                    }] }, { type: i3.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: DragDrop }, { type: i0.ChangeDetectorRef }, { type: CdkDragHandle, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }, {\n                        type: Inject,\n                        args: [CDK_DRAG_HANDLE]\n                    }] }, { type: CdkDrag, decorators: [{\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }, {\n                        type: Inject,\n                        args: [CDK_DRAG_PARENT]\n                    }] }];\n    }, propDecorators: { _handles: [{\n                type: ContentChildren,\n                args: [CDK_DRAG_HANDLE, { descendants: true }]\n            }], _previewTemplate: [{\n                type: ContentChild,\n                args: [CDK_DRAG_PREVIEW]\n            }], _placeholderTemplate: [{\n                type: ContentChild,\n                args: [CDK_DRAG_PLACEHOLDER]\n            }], data: [{\n                type: Input,\n                args: ['cdkDragData']\n            }], lockAxis: [{\n                type: Input,\n                args: ['cdkDragLockAxis']\n            }], rootElementSelector: [{\n                type: Input,\n                args: ['cdkDragRootElement']\n            }], boundaryElement: [{\n                type: Input,\n                args: ['cdkDragBoundary']\n            }], dragStartDelay: [{\n                type: Input,\n                args: ['cdkDragStartDelay']\n            }], freeDragPosition: [{\n                type: Input,\n                args: ['cdkDragFreeDragPosition']\n            }], disabled: [{\n                type: Input,\n                args: ['cdkDragDisabled']\n            }], constrainPosition: [{\n                type: Input,\n                args: ['cdkDragConstrainPosition']\n            }], previewClass: [{\n                type: Input,\n                args: ['cdkDragPreviewClass']\n            }], previewContainer: [{\n                type: Input,\n                args: ['cdkDragPreviewContainer']\n            }], started: [{\n                type: Output,\n                args: ['cdkDragStarted']\n            }], released: [{\n                type: Output,\n                args: ['cdkDragReleased']\n            }], ended: [{\n                type: Output,\n                args: ['cdkDragEnded']\n            }], entered: [{\n                type: Output,\n                args: ['cdkDragEntered']\n            }], exited: [{\n                type: Output,\n                args: ['cdkDragExited']\n            }], dropped: [{\n                type: Output,\n                args: ['cdkDragDropped']\n            }], moved: [{\n                type: Output,\n                args: ['cdkDragMoved']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DragDropModule {\n}\nDragDropModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDropModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDragDropModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDropModule, declarations: [CdkDropList,\n        CdkDropListGroup,\n        CdkDrag,\n        CdkDragHandle,\n        CdkDragPreview,\n        CdkDragPlaceholder], exports: [CdkScrollableModule,\n        CdkDropList,\n        CdkDropListGroup,\n        CdkDrag,\n        CdkDragHandle,\n        CdkDragPreview,\n        CdkDragPlaceholder] });\nDragDropModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDropModule, providers: [DragDrop], imports: [CdkScrollableModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDropModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        CdkDropList,\n                        CdkDropListGroup,\n                        CdkDrag,\n                        CdkDragHandle,\n                        CdkDragPreview,\n                        CdkDragPlaceholder,\n                    ],\n                    exports: [\n                        CdkScrollableModule,\n                        CdkDropList,\n                        CdkDropListGroup,\n                        CdkDrag,\n                        CdkDragHandle,\n                        CdkDragPreview,\n                        CdkDragPlaceholder,\n                    ],\n                    providers: [DragDrop],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_DRAG_CONFIG, CDK_DRAG_HANDLE, CDK_DRAG_PARENT, CDK_DRAG_PLACEHOLDER, CDK_DRAG_PREVIEW, CDK_DROP_LIST, CDK_DROP_LIST_GROUP, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem };\n"],"names":["asyncScheduler","timer","interval","period","scheduler","i0","Injectable","Inject","InjectionToken","Directive","Input","EventEmitter","Optional","SkipSelf","Output","Self","ContentChildren","ContentChild","NgModule","DOCUMENT","_getEventTarget","normalizePassiveListenerOptions","_getShadowRoot","coerceBooleanProperty","coerceElement","coerceArray","coerceNumberProperty","isFakeTouchstartFromScreenReader","isFakeMousedownFromScreenReader","Subject","Subscription","animationFrameScheduler","Observable","merge","takeUntil","startWith","map","take","tap","switchMap","i1","CdkScrollableModule","i3","extendStyles","dest","source","importantProperties","key","hasOwnProperty","value","setProperty","has","removeProperty","toggleNativeDragInteractions","element","enable","userSelect","style","toggleVisibility","position","top","opacity","left","combineTransforms","transform","initialTransform","parseCssTimeUnitsToMs","multiplier","toLowerCase","indexOf","parseFloat","getTransformTransitionDurationInMs","computedStyle","getComputedStyle","transitionedProperties","parseCssPropertyValue","property","find","prop","propertyIndex","rawDurations","rawDelays","name","getPropertyValue","split","part","trim","getMutableClientRect","clientRect","getBoundingClientRect","right","bottom","width","height","x","y","isInsideClientRect","adjustClientRect","isPointerNearClientRect","rect","threshold","pointerX","pointerY","xThreshold","yThreshold","ParentPositionTracker","constructor","_document","positions","Map","clear","cache","elements","set","scrollPosition","getViewportScrollPosition","forEach","scrollTop","scrollLeft","handleScroll","event","target","cachedPosition","get","newTop","newLeft","viewportScrollPosition","topDifference","leftDifference","node","contains","window","scrollY","scrollX","deepCloneNode","clone","cloneNode","descendantsWithId","querySelectorAll","nodeName","removeAttribute","i","length","transferCanvasData","transferInputData","transferData","selector","callback","descendantElements","cloneElements","cloneUniqueId","type","context","getContext","drawImage","_a","passiveEventListenerOptions","passive","activeEventListenerOptions","MOUSE_EVENT_IGNORE_TIME","dragImportantProperties","Set","DragRef","_config","_ngZone","_viewportRuler","_dragDropRegistry","_passiveTransform","_activeTransform","_hasStartedDragging","_moveEvents","_pointerMoveSubscription","EMPTY","_pointerUpSubscription","_scrollSubscription","_resizeSubscription","_boundaryElement","_nativeInteractionsEnabled","_handles","_disabledHandles","_direction","dragStartDelay","_disabled","beforeStarted","started","released","ended","entered","exited","dropped","moved","_pointerDown","next","targetHandle","_getTargetHandle","disabled","_initializeDragSequence","_rootElement","_pointerMove","pointerPosition","_getPointerPositionOnPage","distanceX","Math","abs","_pickupPositionOnPage","distanceY","isOverThreshold","dragStartThreshold","isDelayElapsed","Date","now","_dragStartTime","_getDragStartDelay","container","_dropContainer","_endDragSequence","isDragging","isReceiving","preventDefault","run","_startDragSequence","constrainedPointerPosition","_getConstrainedPointerPosition","_hasMoved","_lastKnownPointerPosition","_updatePointerDirectionDelta","_updateActiveDropContainer","activeTransform","_applyRootElementTransform","observers","distance","_getDragDistance","delta","_pointerDirectionDelta","_pointerUp","_nativeDragStart","withRootElement","withParent","parentDragRef","_parentPositions","registerDragItem","newValue","_toggleNativeDragInteractions","handle","getPlaceholderElement","_placeholder","getRootElement","getVisibleElement","withHandles","handles","disabledHandles","add","withPreviewTemplate","template","_previewTemplate","withPlaceholderTemplate","_placeholderTemplate","rootElement","_removeRootElementListeners","runOutsideAngular","addEventListener","_initialTransform","undefined","SVGElement","_ownerSVGElement","ownerSVGElement","withBoundaryElement","boundaryElement","unsubscribe","change","subscribe","_containInsideBoundaryOnResize","parent","_parentDragRef","dispose","_b","remove","_anchor","_destroyPreview","_destroyPlaceholder","removeDragItem","_removeSubscriptions","complete","reset","disableHandle","enableHandle","delete","withDirection","direction","_withDropContainer","getFreeDragPosition","setFreeDragPosition","withPreviewContainer","_previewContainer","_sortFromLastPointerPosition","_preview","_previewRef","destroy","_placeholderRef","stopDragging","webkitTapHighlightColor","_rootElementTapHighlight","_stopScrolling","_animatePreviewToPlaceholder","then","_cleanupDragArtifacts","_cleanupCachedDimensions","dropPoint","isTouchEvent","_lastTouchEventTime","dropContainer","parentNode","placeholder","_createPlaceholderElement","anchor","createComment","shadowRoot","insertBefore","_createPreviewElement","body","appendChild","replaceChild","_getPreviewInsertionPoint","start","_initialContainer","_initialIndex","getItemIndex","getScrollableParents","referenceElement","stopPropagation","isTouchSequence","isAuxiliaryMouseButton","button","isSyntheticEvent","isFakeEvent","draggable","rootStyles","pointerMove","pointerUp","scrolled","scrollEvent","_updateOnScroll","_boundaryRect","previewTemplate","_pickupPositionInElement","matchSize","_getPointerPositionInElement","_pointerPositionAtLastDirectionChange","startDragging","_previewRect","currentIndex","isPointerOverContainer","_isOverContainer","item","previousIndex","previousContainer","drop","rawX","rawY","newContainer","_getSiblingContainerFromPosition","exit","enter","sortingDisabled","_startScrollingIfNecessary","_sortItem","_applyPreviewTransform","previewConfig","previewClass","preview","rootRect","viewRef","viewContainer","createEmbeddedView","detectChanges","getRootNode","matchElementSize","getTransform","zIndex","classList","setAttribute","Array","isArray","className","Promise","resolve","placeholderRect","duration","handler","propertyName","removeEventListener","clearTimeout","timeout","setTimeout","placeholderConfig","placeholderTemplate","pointerEvents","elementRect","handleElement","referenceRect","point","targetTouches","_getViewportScrollPosition","pageX","pageY","touches","changedTouches","svgMatrix","getScreenCTM","svgPoint","createSVGPoint","matrixTransform","inverse","dropContainerLock","lockAxis","constrainPosition","pickupX","pickupY","boundaryRect","previewWidth","previewHeight","_getPreviewRect","minY","maxY","minX","maxX","clamp$1","pointerPositionOnPage","positionSinceLastChange","changeX","changeY","pointerDirectionChangeThreshold","shouldEnable","styles","currentPosition","pickupPosition","leftOverflow","rightOverflow","topOverflow","bottomOverflow","touch","mouse","scrollDifference","_cachedShadowRoot","initialParent","previewContainer","documentRef","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","round","min","max","rootNodes","nodeType","ELEMENT_NODE","wrapper","createElement","sourceRect","moveItemInArray","array","fromIndex","toIndex","from","clamp","to","transferArrayItem","currentArray","targetArray","targetIndex","splice","copyArrayItem","DROP_PROXIMITY_THRESHOLD","SCROLL_PROXIMITY_THRESHOLD","DropListRef","autoScrollDisabled","autoScrollStep","enterPredicate","sortPredicate","sorted","_isDragging","_itemPositions","_previousSwap","drag","overlaps","_draggables","_siblings","_orientation","_activeSiblings","_viewportScrollSubscription","_verticalScrollDirection","_horizontalScrollDirection","_stopScrollTimers","_startScrollInterval","pipe","_scrollNode","scrollStep","scrollBy","withScrollableParents","registerDropContainer","removeDropContainer","_draggingStarted","_notifyReceivingSiblings","index","newIndex","_getItemIndexFromPointerPosition","activeDraggables","_activeDraggables","newPositionReference","_shouldEnterAsFirstChild","parentElement","push","_cacheItemPositions","_cacheParentPositions","_reset","withItems","items","previousItems","draggedItems","filter","every","_cacheItems","connectedTo","slice","withOrientation","orientation","_scrollableElements","reverse","findIndex","currentItem","size","pointerDelta","_clientRect","siblings","isHorizontal","siblingAtNewPosition","newPosition","itemOffset","_getItemOffsetPx","siblingOffset","_getSiblingOffsetPx","oldOrder","sibling","isDraggedItem","offset","elementToOffset","scrollNode","verticalScrollDirection","horizontalScrollDirection","getElementScrollDirections","getViewportSize","getVerticalScrollDirection","getHorizontalScrollDirection","_initialScrollSnap","msScrollSnapType","scrollSnapType","_listenToScrollEvents","elementToMeasure","sort","a","b","current","_stopReceiving","immediateSibling","end","itemPositions","reversed","lastItemRect","firstItemRect","floor","_canReceive","elementFromPoint","nativeElement","_startReceiving","activeSiblings","computedVertical","computedHorizontal","scrollHeight","clientHeight","scrollWidth","clientWidth","activeCapturingEventOptions","capture","DragDropRegistry","_dropInstances","_dragInstances","_activeDragInstances","_globalListeners","_draggingPredicate","scroll","_preventDefaultWhileDragging","_persistentTouchmoveListener","some","startsWith","e","options","config","_clearGlobalListeners","streams","observer","eventOptions","ngOnDestroy","instance","ɵfac","NgZone","ɵprov","args","providedIn","decorators","DEFAULT_CONFIG","DragDrop","createDrag","createDropList","ViewportRuler","CDK_DRAG_PARENT","CDK_DROP_LIST_GROUP","CdkDropListGroup","_items","ɵdir","provide","useExisting","exportAs","providers","CDK_DRAG_CONFIG","assertElementNode","Error","_uniqueIdCounter","CDK_DROP_LIST","CdkDropList","dragDrop","_changeDetectorRef","_scrollDispatcher","_dir","_group","_destroyed","id","_unsortedItems","ngDevMode","_dropListRef","data","_assignDefaults","_setupInputSyncSubscription","_handleEvents","_dropLists","addItem","_syncItemsWithRef","removeItem","getSortedItems","documentPosition","_dragRef","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","ref","correspondingDropList","list","console","warn","_scrollableParentsResolved","scrollableParents","getAncestorScrollContainers","scrollable","getElementRef","markForCheck","emit","draggingDisabled","listAutoScrollDisabled","listOrientation","ElementRef","ChangeDetectorRef","ScrollDispatcher","Directionality","useValue","host","CDK_DRAG_HANDLE","CdkDragHandle","parentDrag","_stateChanges","_parentDrag","CDK_DRAG_PLACEHOLDER","CdkDragPlaceholder","templateRef","TemplateRef","CDK_DRAG_PREVIEW","CdkDragPreview","_matchSize","DRAG_HOST_CLASS","CdkDrag","_viewContainerRef","_selfHandle","subscription","movedEvent","_syncInputs","ngAfterViewInit","onStable","_updateRootElement","_setupHandlesListener","freeDragPosition","ngOnChanges","changes","rootSelectorChange","positionChange","firstChange","rootElementSelector","closest","_getBoundaryElement","boundary","dir","childHandleElements","handleInstance","dragRef","ViewContainerRef","descendants","DragDropModule","ɵmod","ɵinj","declarations","exports"],"sourceRoot":"webpack:///"}