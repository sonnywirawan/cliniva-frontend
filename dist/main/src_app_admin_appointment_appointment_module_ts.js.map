{"version":3,"file":"src_app_admin_appointment_appointment_module_ts.js","mappings":"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","sources":["./src/app/admin/appointment/appointment-routing.module.ts","./src/app/admin/appointment/appointment.module.ts","./src/app/admin/appointment/bookappointment/bookappointment.component.ts","./src/app/admin/appointment/bookappointment/bookappointment.component.html","./src/app/admin/appointment/editappointment/editappointment.component.ts","./src/app/admin/appointment/editappointment/editappointment.component.html","./src/app/admin/appointment/viewappointment/appointment.model.ts","./src/app/admin/appointment/viewappointment/appointment.service.ts","./src/app/admin/appointment/viewappointment/dialogs/delete/delete.component.ts","./src/app/admin/appointment/viewappointment/dialogs/delete/delete.component.html","./src/app/admin/appointment/viewappointment/dialogs/form-dialog/form-dialog.component.ts","./src/app/admin/appointment/viewappointment/dialogs/form-dialog/form-dialog.component.html","./src/app/admin/appointment/viewappointment/viewappointment.component.ts","./src/app/admin/appointment/viewappointment/viewappointment.component.html"],"sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { BookappointmentComponent } from \"./bookappointment/bookappointment.component\";\nimport { ViewappointmentComponent } from \"./viewappointment/viewappointment.component\";\nimport { EditappointmentComponent } from \"./editappointment/editappointment.component\";\nimport { Page404Component } from \"./../../authentication/page404/page404.component\";\nconst routes: Routes = [\n  {\n    path: \"bookAppointment\",\n    component: BookappointmentComponent,\n  },\n  {\n    path: \"viewAppointment\",\n    component: ViewappointmentComponent,\n  },\n  {\n    path: \"edit-ppointment\",\n    component: EditappointmentComponent,\n  },\n  { path: \"**\", component: Page404Component },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AppointmentRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatRadioModule } from \"@angular/material/radio\";\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MaterialFileInputModule } from \"ngx-material-file-input\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\n\nimport { AppointmentRoutingModule } from \"./appointment-routing.module\";\nimport { BookappointmentComponent } from \"./bookappointment/bookappointment.component\";\nimport { EditappointmentComponent } from \"./editappointment/editappointment.component\";\nimport { ViewappointmentComponent } from \"./viewappointment/viewappointment.component\";\nimport { DeleteDialogComponent } from \"./viewappointment/dialogs/delete/delete.component\";\nimport { FormDialogComponent } from \"./viewappointment/dialogs/form-dialog/form-dialog.component\";\nimport { AppointmentService } from \"./viewappointment/appointment.service\";\nimport { ComponentsModule } from \"src/app/shared/components/components.module\";\nimport { SharedModule } from \"./../../shared/shared.module\";\n\n@NgModule({\n  declarations: [\n    BookappointmentComponent,\n    EditappointmentComponent,\n    ViewappointmentComponent,\n    DeleteDialogComponent,\n    FormDialogComponent,\n  ],\n  imports: [\n    CommonModule,\n    AppointmentRoutingModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDialogModule,\n    MatSortModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MaterialFileInputModule,\n    MatDatepickerModule,\n    MatProgressSpinnerModule,\n    ComponentsModule,\n    SharedModule,\n  ],\n  providers: [AppointmentService],\n})\nexport class AppointmentModule {}\n","import { Component } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n@Component({\n  selector: \"app-bookappointment\",\n  templateUrl: \"./bookappointment.component.html\",\n  styleUrls: [\"./bookappointment.component.sass\"],\n})\nexport class BookappointmentComponent {\n  bookingForm: FormGroup;\n  hide3 = true;\n  agree3 = false;\n  constructor(private fb: FormBuilder) {\n    this.bookingForm = this.fb.group({\n      first: [\"\", [Validators.required, Validators.pattern(\"[a-zA-Z]+\")]],\n      last: [\"\"],\n      gender: [\"\", [Validators.required]],\n      mobile: [\"\", [Validators.required]],\n      address: [\"\"],\n      email: [\n        \"\",\n        [Validators.required, Validators.email, Validators.minLength(5)],\n      ],\n      dob: [\"\", [Validators.required]],\n      doctor: [\"\", [Validators.required]],\n      doa: [\"\", [Validators.required]],\n      toa: [\"\", [Validators.required]],\n      injury: [\"\"],\n      note: [\"\"],\n      uploadImg: [\"\"],\n    });\n  }\n  onSubmit() {\n    console.log(\"Form Value\", this.bookingForm.value);\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Book Appointment'\" [items]=\"['Appointment']\" [active_item]=\"'Book'\"></app-breadcrumb>\n    </div>\n    <div class=\"row clearfix\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"header\">\n            <h2>Book Appointment</h2>\n          </div>\n          <div class=\"body\">\n            <form class=\"m-4\" [formGroup]=\"bookingForm\" (ngSubmit)=\"onSubmit()\">\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>First name</mat-label>\n                    <input matInput formControlName=\"first\" required>\n                    <mat-error *ngIf=\"bookingForm.get('first').hasError('required')\">\n                      First name is required\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Last name</mat-label>\n                    <input matInput formControlName=\"last\">\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Gender</mat-label>\n                    <mat-select formControlName=\"gender\" required>\n                      <mat-option [value]=\"'male'\">\n                        Male\n                      </mat-option>\n                      <mat-option [value]=\"'female'\">\n                        Female\n                      </mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"bookingForm.get('gender').hasError('required')\">\n                      Gender is required\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Mobile</mat-label>\n                    <input matInput formControlName=\"mobile\" type=\"number\" required>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Address</mat-label>\n                    <textarea matInput formControlName=\"address\"></textarea>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Email</mat-label>\n                    <input matInput formControlName=\"email\" required>\n                    <mat-error *ngIf=\"bookingForm.get('email').hasError('email') && bookingForm.get('email').touched\">\n                      Please enter a valid email address\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Date Of Birth</mat-label>\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"dob\" required>\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker></mat-datepicker>\n                    <mat-error *ngIf=\"bookingForm.get('dob').hasError('required')\">\n                      Please select date\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n              </div>\n              <h2 class=\"card-inside-title\">Appointment Details</h2>\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Consulting Doctor</mat-label>\n                    <mat-select formControlName=\"doctor\" required>\n                      <mat-option [value]=\"'Dr.Rajesh'\">\n                        Dr.Rajesh\n                      </mat-option>\n                      <mat-option [value]=\"'Dr.Sarah Smith'\">\n                        Dr.Sarah Smith\n                      </mat-option>\n                      <mat-option [value]=\"'Dr.Jay Soni'\">\n                        Dr.Jay Soni\n                      </mat-option>\n                      <mat-option [value]=\"'Dr.Pooja Patel'\">\n                        Dr.Pooja Patel\n                      </mat-option>\n                      <mat-option [value]=\"'other'\">\n                        Other\n                      </mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"bookingForm.get('doctor').hasError('required')\">\n                      Select Any Doctor\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Date Of Appointment</mat-label>\n                    <input matInput [matDatepicker]=\"picker1\" formControlName=\"doa\" required>\n                    <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker1></mat-datepicker>\n                    <mat-error *ngIf=\"bookingForm.get('doa').hasError('required')\">\n                      Please select a date\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Time Of Appointment</mat-label>\n                    <input matInput formControlName=\"toa\" required>\n                    <mat-error *ngIf=\"bookingForm.get('toa').hasError('required')\">\n                      Please select a time\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Injury/Contion</mat-label>\n                    <textarea matInput formControlName=\"injury\"></textarea>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Note</mat-label>\n                    <textarea matInput formControlName=\"note\"></textarea>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Upload</mat-label>\n                    <ngx-mat-file-input formControlName=\"uploadImg\" placeholder=\"Upload Image\">\n                    </ngx-mat-file-input>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                  <button class=\"btn-space\" [disabled]=\"!bookingForm.valid \" mat-raised-button\n                    color=\"primary\">Submit</button>\n                  <button type=\"button\" mat-button>Cancel</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n@Component({\n  selector: \"app-editappointment\",\n  templateUrl: \"./editappointment.component.html\",\n  styleUrls: [\"./editappointment.component.sass\"],\n})\nexport class EditappointmentComponent {\n  bookingForm: FormGroup;\n  formdata = {\n    first: \"Pooja\",\n    last: \"Sarma\",\n    gender: \"female\",\n    mobile: \"123456789\",\n    address: \"101, Elanxa, New Yourk\",\n    email: \"test@example.com\",\n    dob: \"1987-02-17T14:22:18Z\",\n    doctor: \"Dr.Rajesh\",\n    doa: \"2018-05-25T14:22:18Z\",\n    toa: \"10:25\",\n    injury: \"Fever\",\n    note: \"No Comments\",\n  };\n  constructor(private fb: FormBuilder) {\n    this.bookingForm = this.createContactForm();\n  }\n  onSubmit() {\n    console.log(\"Form Value\", this.bookingForm.value);\n  }\n  createContactForm(): FormGroup {\n    return this.fb.group({\n      first: [\n        this.formdata.first,\n        [Validators.required, Validators.pattern(\"[a-zA-Z]+\")],\n      ],\n      last: [this.formdata.last],\n      gender: [this.formdata.gender, [Validators.required]],\n      mobile: [this.formdata.mobile, [Validators.required]],\n      address: [this.formdata.address],\n      email: [\n        this.formdata.email,\n        [Validators.required, Validators.email, Validators.minLength(5)],\n      ],\n      dob: [this.formdata.dob, [Validators.required]],\n      doctor: [this.formdata.doctor, [Validators.required]],\n      doa: [this.formdata.doa, [Validators.required]],\n      toa: [this.formdata.toa, [Validators.required]],\n      injury: [this.formdata.injury],\n      note: [this.formdata.note],\n    });\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Edit Appointment'\" [items]=\"['Appointment']\" [active_item]=\"'Edit'\"></app-breadcrumb>\n    </div>\n    <div class=\"row clearfix\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"header\">\n            <h2>Edit Appointment</h2>\n\n          </div>\n          <div class=\"body\">\n            <form class=\"m-4\" [formGroup]=\"bookingForm\" (ngSubmit)=\"onSubmit()\">\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>First name</mat-label>\n                    <input matInput formControlName=\"first\" required>\n                    <mat-error *ngIf=\"bookingForm.get('first').hasError('required')\">\n                      First name is required\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Last name</mat-label>\n                    <input matInput formControlName=\"last\">\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Gender</mat-label>\n                    <mat-select formControlName=\"gender\" required>\n                      <mat-option [value]=\"'male'\">\n                        Male\n                      </mat-option>\n                      <mat-option [value]=\"'female'\">\n                        Female\n                      </mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"bookingForm.get('gender').hasError('required')\">\n                      Gender is required\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Mobile</mat-label>\n                    <input matInput formControlName=\"mobile\" type=\"number\" required>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Address</mat-label>\n                    <textarea matInput formControlName=\"address\"></textarea>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Email</mat-label>\n                    <input matInput formControlName=\"email\" required>\n                    <mat-error *ngIf=\"bookingForm.get('email').hasError('email') && bookingForm.get('email').touched\">\n                      Please enter a valid email address\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Date Of Birth</mat-label>\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"dob\" required>\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker></mat-datepicker>\n                    <mat-error *ngIf=\"bookingForm.get('dob').hasError('required')\">\n                      Please select date\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n              </div>\n              <h2 class=\"card-inside-title\">Appointment Details</h2>\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Consulting Doctor</mat-label>\n                    <mat-select formControlName=\"doctor\" required>\n                      <mat-option [value]=\"'Dr.Rajesh'\">\n                        Dr.Rajesh\n                      </mat-option>\n                      <mat-option [value]=\"'Dr.Sarah Smith'\">\n                        Dr.Sarah Smith\n                      </mat-option>\n                      <mat-option [value]=\"'Dr.Jay Soni'\">\n                        Dr.Jay Soni\n                      </mat-option>\n                      <mat-option [value]=\"'Dr.Pooja Patel'\">\n                        Dr.Pooja Patel\n                      </mat-option>\n                      <mat-option [value]=\"'other'\">\n                        Other\n                      </mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"bookingForm.get('doctor').hasError('required')\">\n                      Select Any Doctor\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Date Of Appointment</mat-label>\n                    <input matInput [matDatepicker]=\"picker1\" formControlName=\"doa\" required>\n                    <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker1></mat-datepicker>\n                    <mat-error *ngIf=\"bookingForm.get('doa').hasError('required')\">\n                      Please select a date\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Time Of Appointment</mat-label>\n                    <input matInput formControlName=\"toa\" required>\n                    <mat-error *ngIf=\"bookingForm.get('toa').hasError('required')\">\n                      Please select a time\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Injury/Contion</mat-label>\n                    <textarea matInput formControlName=\"injury\"></textarea>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Note</mat-label>\n                    <textarea matInput formControlName=\"note\"></textarea>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                  <button class=\"btn-space\" [disabled]=\"!bookingForm.valid \" mat-raised-button\n                    color=\"primary\">Submit</button>\n                  <button type=\"button\" mat-button>Cancel</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { formatDate } from \"@angular/common\";\nexport class Appointment {\n  id: number;\n  img: string;\n  name: string;\n  email: string;\n  gender: string;\n  date: string;\n  time: string;\n  mobile: string;\n  doctor: string;\n  injury: string;\n  constructor(appointment) {\n    {\n      this.id = appointment.id || this.getRandomID();\n      this.img = appointment.avatar || \"assets/images/user/user1.jpg\";\n      this.name = appointment.name || \"\";\n      this.email = appointment.email || \"\";\n      this.gender = appointment.gender || \"male\";\n      this.date = formatDate(new Date(), \"yyyy-MM-dd\", \"en\") || \"\";\n      this.time = appointment.time || \"\";\n      this.mobile = appointment.mobile || \"\";\n      this.doctor = appointment.mobile || \"\";\n      this.injury = appointment.mobile || \"\";\n    }\n  }\n  public getRandomID(): string {\n    const S4 = () => {\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n    };\n    return S4() + S4();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { Appointment } from \"./appointment.model\";\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\n@Injectable()\nexport class AppointmentService extends UnsubscribeOnDestroyAdapter {\n  private readonly API_URL = \"assets/data/appointment.json\";\n  isTblLoading = true;\n  dataChange: BehaviorSubject<Appointment[]> = new BehaviorSubject<\n    Appointment[]\n  >([]);\n  // Temporarily stores data from dialogs\n  dialogData: any;\n  constructor(private httpClient: HttpClient) {\n    super();\n  }\n  get data(): Appointment[] {\n    return this.dataChange.value;\n  }\n  getDialogData() {\n    return this.dialogData;\n  }\n  /** CRUD METHODS */\n  getAllAppointments(): void {\n    this.subs.sink = this.httpClient.get<Appointment[]>(this.API_URL).subscribe(\n      (data) => {\n        this.isTblLoading = false;\n        this.dataChange.next(data);\n      },\n      (error: HttpErrorResponse) => {\n        this.isTblLoading = false;\n        console.log(error.name + \" \" + error.message);\n      }\n    );\n  }\n  addAppointment(appointment: Appointment): void {\n    this.dialogData = appointment;\n\n    /*  this.httpClient.post(this.API_URL, appointment).subscribe(data => {\n      this.dialogData = appointment;\n      },\n      (err: HttpErrorResponse) => {\n     // error code here\n    });*/\n  }\n  updateAppointment(appointment: Appointment): void {\n    this.dialogData = appointment;\n\n    /* this.httpClient.put(this.API_URL + appointment.id, appointment).subscribe(data => {\n      this.dialogData = appointment;\n    },\n    (err: HttpErrorResponse) => {\n      // error code here\n    }\n  );*/\n  }\n  deleteAppointment(id: number): void {\n    console.log(id);\n\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\n      console.log(id);\n      },\n      (err: HttpErrorResponse) => {\n         // error code here\n      }\n    );*/\n  }\n}\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { Component, Inject } from \"@angular/core\";\nimport { AppointmentService } from \"../../appointment.service\";\n@Component({\n  selector: \"app-delete\",\n  templateUrl: \"./delete.component.html\",\n  styleUrls: [\"./delete.component.sass\"],\n})\nexport class DeleteDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public appointmentService: AppointmentService\n  ) {}\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  confirmDelete(): void {\n    this.appointmentService.deleteAppointment(this.data.id);\n  }\n}\n","<div class=\"container\">\n  <h3 mat-dialog-title>Are you sure?</h3>\n  <div mat-dialog-content>\n    <ul class=\"clearfix\">\n      <li>\n        <p><span class=\"font-weight-bold\"> Name: </span>{{data.name}}</p>\n      </li>\n      <li>\n        <p><span class=\"font-weight-bold\"> Email: </span>{{ data.email }}</p>\n      </li>\n      <li>\n        <p>\n          <span class=\"font-weight-bold\">Mobile: </span>{{data.mobile}}\n        </p>\n      </li>\n    </ul>\n  </div>\n  <div mat-dialog-actions class=\"mb-1\">\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\n      Delete\n    </button>\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n  </div>\n</div>\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { Component, Inject } from \"@angular/core\";\nimport { AppointmentService } from \"../../appointment.service\";\nimport {\n  FormControl,\n  Validators,\n  FormGroup,\n  FormBuilder,\n} from \"@angular/forms\";\nimport { Appointment } from \"../../appointment.model\";\nimport { MAT_DATE_LOCALE } from \"@angular/material/core\";\nimport { formatDate } from \"@angular/common\";\n@Component({\n  selector: \"app-form-dialog\",\n  templateUrl: \"./form-dialog.component.html\",\n  styleUrls: [\"./form-dialog.component.sass\"],\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: \"en-GB\" }],\n})\nexport class FormDialogComponent {\n  action: string;\n  dialogTitle: string;\n  appointmentForm: FormGroup;\n  appointment: Appointment;\n  constructor(\n    public dialogRef: MatDialogRef<FormDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public appointmentService: AppointmentService,\n    private fb: FormBuilder\n  ) {\n    // Set the defaults\n    this.action = data.action;\n    if (this.action === \"edit\") {\n      console.log(data.appointment.date);\n      this.dialogTitle = data.appointment.name;\n      this.appointment = data.appointment;\n    } else {\n      this.dialogTitle = \"New Appointment\";\n      this.appointment = new Appointment({});\n    }\n    this.appointmentForm = this.createContactForm();\n  }\n  formControl = new FormControl(\"\", [\n    Validators.required,\n    // Validators.email,\n  ]);\n  getErrorMessage() {\n    return this.formControl.hasError(\"required\")\n      ? \"Required field\"\n      : this.formControl.hasError(\"email\")\n      ? \"Not a valid email\"\n      : \"\";\n  }\n  createContactForm(): FormGroup {\n    return this.fb.group({\n      id: [this.appointment.id],\n      img: [this.appointment.img],\n      name: [this.appointment.name, [Validators.required]],\n      email: [\n        this.appointment.email,\n        [Validators.required, Validators.email, Validators.minLength(5)],\n      ],\n      gender: [this.appointment.gender],\n      date: [\n        formatDate(this.appointment.date, \"yyyy-MM-dd\", \"en\"),\n        [Validators.required],\n      ],\n      time: [this.appointment.time, [Validators.required]],\n      mobile: [this.appointment.mobile, [Validators.required]],\n      doctor: [this.appointment.doctor, [Validators.required]],\n      injury: [this.appointment.injury],\n    });\n  }\n  submit() {\n    // emppty stuff\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  public confirmAdd(): void {\n    this.appointmentService.addAppointment(this.appointmentForm.getRawValue());\n  }\n}\n","<div class=\"addContainer\">\n  <div class=\"modalHeader\">\n    <div class=\"editRowModal\">\n      <div class=\"modalHeader clearfix\">\n        <img [src]='appointment.img' alt=\"avatar\">\n        <div class=\"modal-about\">\n          <div class=\"font-weight-bold p-t-5 msl-3 font-17\">\n            {{dialogTitle}}</div>\n        </div>\n      </div>\n    </div>\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n  <div mat-dialog-content>\n    <form class=\"register-form m-4\" [formGroup]=\"appointmentForm\" (ngSubmit)=\"submit\">\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>name</mat-label>\n            <input matInput formControlName=\"name\">\n            <mat-icon matSuffix>face</mat-icon>\n            <mat-error *ngIf=\"appointmentForm.get('name').hasError('required')\">\n              Name is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Email</mat-label>\n            <input matInput formControlName=\"email\" required>\n            <mat-icon matSuffix>email</mat-icon>\n            <mat-error\n              *ngIf=\"appointmentForm.get('email').hasError('required') || appointmentForm.get('email').touched\">\n              Please enter a valid email address\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n          <div class=\"m-b-20\">\n            <mat-label class=\"msr-3\">Gender:</mat-label>\n            <mat-radio-group aria-label=\"Select gender\" formControlName=\"gender\" required>\n              <mat-radio-button value=\"male\">Male</mat-radio-button>\n              <mat-radio-button value=\"female\">Female</mat-radio-button>\n              <mat-error *ngIf=\"appointmentForm.get('gender').hasError('required')\">\n                Select gender\n              </mat-error>\n            </mat-radio-group>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Choose a date</mat-label>\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"date\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n            <mat-error *ngIf=\"appointmentForm.get('date').hasError('required')\">\n              Please select date\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Time</mat-label>\n            <input matInput formControlName=\"time\">\n            <mat-icon matSuffix>access_time</mat-icon>\n            <mat-error *ngIf=\"appointmentForm.get('time').hasError('required')\">\n              Please select time\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Mobile</mat-label>\n            <input matInput formControlName=\"mobile\" type=\"number\">\n            <mat-icon matSuffix>phone</mat-icon>\n            <mat-error *ngIf=\"appointmentForm.get('mobile').hasError('required')\">\n              Mobile is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width \" appearance=\"outline\">\n            <mat-label>Doctor Name</mat-label>\n            <mat-select formControlName=\"doctor\" required>\n              <mat-option [value]=\"'Dr.Rajesh'\">\n                Dr.Rajesh\n              </mat-option>\n              <mat-option [value]=\"'Dr.Sarah Smith'\">\n                Dr.Sarah Smith\n              </mat-option>\n              <mat-option [value]=\"'Dr.Jay Soni'\">\n                Dr.Jay Soni\n              </mat-option>\n              <mat-option [value]=\"'Dr.Pooja Patel'\">\n                Dr.Pooja Patel\n              </mat-option>\n              <mat-option [value]=\"'other'\">\n                Other\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"appointmentForm.get('doctor').hasError('required')\">\n              Doctor Name is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Injury/Condition</mat-label>\n            <textarea matInput formControlName=\"injury\"></textarea>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n          <div class=\"example-button-row\">\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!appointmentForm.valid\"\n              [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\nimport { AppointmentService } from \"./appointment.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { Appointment } from \"./appointment.model\";\nimport { DataSource } from \"@angular/cdk/collections\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { BehaviorSubject, fromEvent, merge, Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { FormDialogComponent } from \"./dialogs/form-dialog/form-dialog.component\";\nimport { DeleteDialogComponent } from \"./dialogs/delete/delete.component\";\nimport { DateAdapter, MAT_DATE_LOCALE } from \"@angular/material/core\";\nimport { SelectionModel } from \"@angular/cdk/collections\";\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\n\n@Component({\n  selector: \"app-viewappointment\",\n  templateUrl: \"./viewappointment.component.html\",\n  styleUrls: [\"./viewappointment.component.sass\"],\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: \"en-GB\" }],\n})\nexport class ViewappointmentComponent\n  extends UnsubscribeOnDestroyAdapter\n  implements OnInit\n{\n  displayedColumns = [\n    \"select\",\n    \"img\",\n    \"name\",\n    \"email\",\n    \"gender\",\n    \"date\",\n    \"time\",\n    \"mobile\",\n    \"doctor\",\n    \"injury\",\n    \"actions\",\n  ];\n  exampleDatabase: AppointmentService | null;\n  dataSource: ExampleDataSource | null;\n  selection = new SelectionModel<Appointment>(true, []);\n  index: number;\n  id: number;\n  appointment: Appointment | null;\n  constructor(\n    public httpClient: HttpClient,\n    public dialog: MatDialog,\n    public appointmentService: AppointmentService,\n    private snackBar: MatSnackBar\n  ) {\n    super();\n  }\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild(\"filter\", { static: true }) filter: ElementRef;\n\n  ngOnInit() {\n    this.loadData();\n  }\n  refresh() {\n    this.loadData();\n  }\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.renderedData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selection.clear()\n      : this.dataSource.renderedData.forEach((row) =>\n          this.selection.select(row)\n        );\n  }\n  removeSelectedRows() {\n    const totalSelect = this.selection.selected.length;\n    this.selection.selected.forEach((item) => {\n      const index: number = this.dataSource.renderedData.findIndex(\n        (d) => d === item\n      );\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\n      this.exampleDatabase.dataChange.value.splice(index, 1);\n      this.refreshTable();\n      this.selection = new SelectionModel<Appointment>(true, []);\n    });\n    this.showNotification(\n      \"snackbar-danger\",\n      totalSelect + \" Record Delete Successfully...!!!\",\n      \"bottom\",\n      \"center\"\n    );\n  }\n  addNew() {\n    let tempDirection;\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\n      tempDirection = \"rtl\";\n    } else {\n      tempDirection = \"ltr\";\n    }\n\n    const dialogRef = this.dialog.open(FormDialogComponent, {\n      data: {\n        appointment: this.appointment,\n        action: \"add\",\n      },\n      direction: tempDirection,\n    });\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        // After dialog is closed we're doing frontend updates\n        // For add we're just pushing a new row inside DataService\n        this.exampleDatabase.dataChange.value.unshift(\n          this.appointmentService.getDialogData()\n        );\n        this.refreshTable();\n        this.showNotification(\n          \"snackbar-success\",\n          \"Add Record Successfully...!!!\",\n          \"bottom\",\n          \"center\"\n        );\n      }\n    });\n  }\n  editCall(row) {\n    this.id = row.id;\n    let tempDirection;\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\n      tempDirection = \"rtl\";\n    } else {\n      tempDirection = \"ltr\";\n    }\n    const dialogRef = this.dialog.open(FormDialogComponent, {\n      data: {\n        appointment: row,\n        action: \"edit\",\n      },\n      direction: tempDirection,\n    });\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        // When using an edit things are little different, firstly we find record inside DataService by id\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          (x) => x.id === this.id\n        );\n        // Then you update that record using data from dialogData (values you enetered)\n        this.exampleDatabase.dataChange.value[foundIndex] =\n          this.appointmentService.getDialogData();\n        // And lastly refresh table\n        this.refreshTable();\n        this.showNotification(\n          \"black\",\n          \"Edit Record Successfully...!!!\",\n          \"bottom\",\n          \"center\"\n        );\n      }\n    });\n  }\n  deleteItem(row) {\n    this.id = row.id;\n    let tempDirection;\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\n      tempDirection = \"rtl\";\n    } else {\n      tempDirection = \"ltr\";\n    }\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: row,\n      direction: tempDirection,\n    });\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          (x) => x.id === this.id\n        );\n        // for delete we use splice in order to remove single object from DataService\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\n        this.refreshTable();\n        this.showNotification(\n          \"snackbar-danger\",\n          \"Delete Record Successfully...!!!\",\n          \"bottom\",\n          \"center\"\n        );\n      }\n    });\n  }\n  private refreshTable() {\n    this.paginator._changePageSize(this.paginator.pageSize);\n  }\n  public loadData() {\n    this.exampleDatabase = new AppointmentService(this.httpClient);\n    this.dataSource = new ExampleDataSource(\n      this.exampleDatabase,\n      this.paginator,\n      this.sort\n    );\n    fromEvent(this.filter.nativeElement, \"keyup\").subscribe(() => {\n      if (!this.dataSource) {\n        return;\n      }\n      this.dataSource.filter = this.filter.nativeElement.value;\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this.snackBar.open(text, \"\", {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName,\n    });\n  }\n}\nexport class ExampleDataSource extends DataSource<Appointment> {\n  filterChange = new BehaviorSubject(\"\");\n  get filter(): string {\n    return this.filterChange.value;\n  }\n  set filter(filter: string) {\n    this.filterChange.next(filter);\n  }\n  filteredData: Appointment[] = [];\n  renderedData: Appointment[] = [];\n  constructor(\n    public exampleDatabase: AppointmentService,\n    public paginator: MatPaginator,\n    public _sort: MatSort\n  ) {\n    super();\n    // Reset to the first page when the user changes the filter.\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\n  }\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<Appointment[]> {\n    // Listen for any changes in the base data, sorting, filtering, or pagination\n    const displayDataChanges = [\n      this.exampleDatabase.dataChange,\n      this._sort.sortChange,\n      this.filterChange,\n      this.paginator.page,\n    ];\n    this.exampleDatabase.getAllAppointments();\n    return merge(...displayDataChanges).pipe(\n      map(() => {\n        // Filter data\n        this.filteredData = this.exampleDatabase.data\n          .slice()\n          .filter((appointment: Appointment) => {\n            const searchStr = (\n              appointment.name +\n              appointment.email +\n              appointment.gender +\n              appointment.date +\n              appointment.doctor +\n              appointment.injury +\n              appointment.mobile\n            ).toLowerCase();\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\n          });\n        // Sort filtered data\n        const sortedData = this.sortData(this.filteredData.slice());\n        // Grab the page's slice of the filtered sorted data.\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        this.renderedData = sortedData.splice(\n          startIndex,\n          this.paginator.pageSize\n        );\n        return this.renderedData;\n      })\n    );\n  }\n  disconnect() {}\n  /** Returns a sorted copy of the database data. */\n  sortData(data: Appointment[]): Appointment[] {\n    if (!this._sort.active || this._sort.direction === \"\") {\n      return data;\n    }\n    return data.sort((a, b) => {\n      let propertyA: number | string = \"\";\n      let propertyB: number | string = \"\";\n      switch (this._sort.active) {\n        case \"id\":\n          [propertyA, propertyB] = [a.id, b.id];\n          break;\n        case \"name\":\n          [propertyA, propertyB] = [a.name, b.name];\n          break;\n        case \"email\":\n          [propertyA, propertyB] = [a.email, b.email];\n          break;\n        // case 'date': [propertyA, propertyB] = [a.date, b.date]; break;\n        case \"time\":\n          [propertyA, propertyB] = [a.time, b.time];\n          break;\n        case \"mobile\":\n          [propertyA, propertyB] = [a.mobile, b.mobile];\n          break;\n      }\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n      return (\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === \"asc\" ? 1 : -1)\n      );\n    });\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'View Appointment'\" [items]=\"['Appointment']\" [active_item]=\"'View'\"></app-breadcrumb>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"body\">\n            <div class=\"responsive_table\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>\n                          <strong>Appointments</strong></h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\n                          aria-label=\"Search box\">\n                      </li>\n                      <li>\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\n                            <mat-icon class=\"col-white\">delete</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"icon-button-demo\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"icon-button-demo\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\n                <!-- Checkbox Column -->\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n                <!-- ID Column -->\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"img\">\n                  <mat-header-cell mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-5'\"> Image\n                  </mat-header-cell>\n                  <mat-cell mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-5\"> <img\n                      [src]=\"row.img\" />\n                  </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"name\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.name}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"email\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.email}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"gender\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Gender</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.gender}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"date\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.date | date: 'MM/dd/yyyy' }}\n                  </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"time\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Time</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.time}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"mobile\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Mobile</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.mobile}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"doctor\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Doctor</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.doctor}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"injury\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Injury/Condition\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.injury}}</mat-cell>\n                </ng-container>\n                <!-- actions -->\n                <ng-container matColumnDef=\"actions\">\n                  <mat-header-cell class=\"pr-0\" *matHeaderCellDef>Actions</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\n                    <button mat-icon-button (click)=\"$event.stopPropagation()\" (click)=\"editCall(row)\"\n                      class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                    </button>\n                    <button mat-icon-button (click)=\"$event.stopPropagation()\" (click)=\"deleteItem(row)\"\n                      class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\n                  [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n              </mat-table>\n              <!-- Loading spinner -->\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\n                No results\n              </div>\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\n              </mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n"],"names":[],"sourceRoot":"webpack:///"}