{"version":3,"file":"default-node_modules_angular_material_fesm2015_menu_mjs.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;IAoHsGa,4DAwLiyB;IAxLjyBA,4DAwLiyB;IAxLjyBA,uDAwLs5B;IAxLt5BA,0DAwLw7B;;;;;;;;gBAxLx7BA;;IAAAA,4DA4mB+R;IA5mB/RA,wDA4mB2X;MA5mB3XA,2DA4mB2X;MAAA,eA5mB3XA,2DA4mB2X;MAAA,OAAY,6BAAZ;IAAA;MA5mB3XA,2DA4mB2X;MAAA,eA5mB3XA,2DA4mB2X;MAAA,OAAoD,mBAAY,OAAZ,CAApD;IAAA;MA5mB3XA,2DA4mB2X;MAAA,eA5mB3XA,2DA4mB2X;MAAA,OAAwJ,gCAAxJ;IAAA;MA5mB3XA,2DA4mB2X;MAAA,eA5mB3XA,2DA4mB2X;MAAA,OAAiN,+BAAjN;IAAA;IA5mB3XA,4DA4mBkzB;IA5mBlzBA,0DA4mB01B;IA5mB11BA,0DA4mBy3B;;;;mBA5mBz3BA;IAAAA,wDA4mBuU;IA5mBvUA,yDA4mBopB;;;;AA/tB1vB,MAAMmD,iBAAiB,GAAG;EACtB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,aAAa,EAAEvB,4DAAO,CAAC,eAAD,EAAkB,CACpCC,0DAAK,CAAC,MAAD,EAASC,0DAAK,CAAC;IAChBsB,OAAO,EAAE,CADO;IAEhBC,SAAS,EAAE;EAFK,CAAD,CAAd,CAD+B,EAKpCtB,+DAAU,CAAC,eAAD,EAAkBC,4DAAO,CAAC,kCAAD,EAAqCF,0DAAK,CAAC;IAC1EsB,OAAO,EAAE,CADiE;IAE1EC,SAAS,EAAE;EAF+D,CAAD,CAA1C,CAAzB,CAL0B,EASpCtB,+DAAU,CAAC,WAAD,EAAcC,4DAAO,CAAC,mBAAD,EAAsBF,0DAAK,CAAC;IAAEsB,OAAO,EAAE;EAAX,CAAD,CAA3B,CAArB,CAT0B,CAAlB,CATA;;EAoBtB;AACJ;AACA;AACA;EACIE,WAAW,EAAE1B,4DAAO,CAAC,aAAD,EAAgB,CAChC;EACA;EACAC,0DAAK,CAAC,SAAD,EAAYC,0DAAK,CAAC;IAAEsB,OAAO,EAAE;EAAX,CAAD,CAAjB,CAH2B,EAIhCrB,+DAAU,CAAC,WAAD,EAAc,CACpBD,0DAAK,CAAC;IAAEsB,OAAO,EAAE;EAAX,CAAD,CADe,EAEpBpB,4DAAO,CAAC,8CAAD,CAFa,CAAd,CAJsB,CAAhB;AAxBE,CAA1B;AAkCA;AACA;AACA;AACA;AACA;;AACA,MAAMsB,WAAW,GAAGJ,iBAAiB,CAACI,WAAtC;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMH,aAAa,GAAGD,iBAAiB,CAACC,aAAxC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMI,gBAAgB,GAAG,IAAIvD,yDAAJ,CAAmB,gBAAnB,CAAzB;;AACA,MAAMwD,mBAAN,CAA0B;EACtBC,WAAW,CAACC,SAAD,EAAYC,yBAAZ,EAAuCC,OAAvC,EAAgDC,SAAhD,EAA2DC,iBAA3D,EAA8EC,SAA9E,EAAyFC,kBAAzF,EAA6G;IACpH,KAAKN,SAAL,GAAiBA,SAAjB;IACA,KAAKC,yBAAL,GAAiCA,yBAAjC;IACA,KAAKC,OAAL,GAAeA,OAAf;IACA,KAAKC,SAAL,GAAiBA,SAAjB;IACA,KAAKC,iBAAL,GAAyBA,iBAAzB;IACA,KAAKC,SAAL,GAAiBA,SAAjB;IACA,KAAKC,kBAAL,GAA0BA,kBAA1B;IACA;;IACA,KAAKC,SAAL,GAAiB,IAAIhD,yCAAJ,EAAjB;EACH;EACD;AACJ;AACA;AACA;;;EACIiD,MAAM,CAACC,OAAO,GAAG,EAAX,EAAe;IACjB,IAAIC,EAAJ;;IACA,IAAI,CAAC,KAAKC,OAAV,EAAmB;MACf,KAAKA,OAAL,GAAe,IAAIpC,+DAAJ,CAAmB,KAAKyB,SAAxB,EAAmC,KAAKI,iBAAxC,CAAf;IACH;;IACD,KAAKQ,MAAL;;IACA,IAAI,CAAC,KAAKC,OAAV,EAAmB;MACf,KAAKA,OAAL,GAAe,IAAIrC,gEAAJ,CAAoB,KAAK6B,SAAL,CAAeS,aAAf,CAA6B,KAA7B,CAApB,EAAyD,KAAKb,yBAA9D,EAAyF,KAAKC,OAA9F,EAAuG,KAAKC,SAA5G,CAAf;IACH;;IACD,MAAMY,OAAO,GAAG,KAAKf,SAAL,CAAegB,UAAf,CAA0BC,aAA1C,CATiB,CAUjB;IACA;IACA;;IACAF,OAAO,CAACG,UAAR,CAAmBC,YAAnB,CAAgC,KAAKN,OAAL,CAAaO,aAA7C,EAA4DL,OAA5D,EAbiB,CAcjB;IACA;IACA;IACA;IACA;IACA;;IACA,CAACL,EAAE,GAAG,KAAKJ,kBAAX,MAAmC,IAAnC,IAA2CI,EAAE,KAAK,KAAK,CAAvD,GAA2D,KAAK,CAAhE,GAAoEA,EAAE,CAACW,YAAH,EAApE;;IACA,KAAKV,OAAL,CAAaH,MAAb,CAAoB,KAAKK,OAAzB,EAAkCJ,OAAlC;;IACA,KAAKF,SAAL,CAAee,IAAf;EACH;EACD;AACJ;AACA;AACA;;;EACIV,MAAM,GAAG;IACL,IAAI,KAAKD,OAAL,CAAaY,UAAjB,EAA6B;MACzB,KAAKZ,OAAL,CAAaC,MAAb;IACH;EACJ;;EACDY,WAAW,GAAG;IACV,IAAI,KAAKX,OAAT,EAAkB;MACd,KAAKA,OAAL,CAAaY,OAAb;IACH;EACJ;;AArDqB;;AAuD1B3B,mBAAmB,CAAC4B,IAApB;EAAA,iBAAgH5B,mBAAhH,EAAsGzD,+DAAtG,CAAqJA,sDAArJ,GAAsGA,+DAAtG,CAAgLA,mEAAhL,GAAsGA,+DAAtG,CAAwNA,yDAAxN,GAAsGA,+DAAtG,CAAsPA,mDAAtP,GAAsGA,+DAAtG,CAA8QA,2DAA9Q,GAAsGA,+DAAtG,CAA8SqC,qDAA9S,GAAsGrC,+DAAtG,CAAmUA,4DAAnU;AAAA;;AACAyD,mBAAmB,CAACkC,IAApB,kBADsG3F,+DACtG;EAAA,MAAoGyD;AAApG;;AACA;EAAA,mDAFsGzD,+DAEtG,CAA2FyD,mBAA3F,EAA4H,CAAC;IACjHmC,IAAI,EAAE1F,oDAASA;EADkG,CAAD,CAA5H,EAE4B,YAAY;IAChC,OAAO,CAAC;MAAE0F,IAAI,EAAE5F,sDAAcW;IAAtB,CAAD,EAA2B;MAAEiF,IAAI,EAAE5F,mEAA2BsF;IAAnC,CAA3B,EAAkE;MAAEM,IAAI,EAAE5F,yDAAiBuF;IAAzB,CAAlE,EAA+F;MAAEK,IAAI,EAAE5F,mDAAWwF;IAAnB,CAA/F,EAAsH;MAAEI,IAAI,EAAE5F,2DAAmByF;IAA3B,CAAtH,EAAqJ;MAAEG,IAAI,EAAEC,SAAR;MAAmBC,UAAU,EAAE,CAAC;QAC5KF,IAAI,EAAEzF,iDADsK;QAE5K4F,IAAI,EAAE,CAAC1D,qDAAD;MAFsK,CAAD;IAA/B,CAArJ,EAGW;MAAEuD,IAAI,EAAE5F,4DAAoB0F;IAA5B,CAHX,CAAP;EAIH,CAPL;AAAA;AAQA;AACA;AACA;;;AACA,MAAMM,cAAN,SAA6BvC,mBAA7B,CAAiD;;AAEjDuC,cAAc,CAACX,IAAf;EAAA;EAAA;IAAA,sEAfsGrF,mEAetG,CAA2GgG,cAA3G,SAA2GA,cAA3G;EAAA;AAAA;;AACAA,cAAc,CAACL,IAAf,kBAhBsG3F,+DAgBtG;EAAA,MAA+FgG,cAA/F;EAAA;EAAA,WAhBsGhG,gEAgBtG,CAAmK,CAAC;IAAEiG,OAAO,EAAEzC,gBAAX;IAA6B0C,WAAW,EAAEF;EAA1C,CAAD,CAAnK,GAhBsGhG,wEAgBtG;AAAA;;AACA;EAAA,mDAjBsGA,+DAiBtG,CAA2FgG,cAA3F,EAAuH,CAAC;IAC5GJ,IAAI,EAAE1F,oDADsG;IAE5G6F,IAAI,EAAE,CAAC;MACCI,QAAQ,EAAE,6BADX;MAECC,SAAS,EAAE,CAAC;QAAEH,OAAO,EAAEzC,gBAAX;QAA6B0C,WAAW,EAAEF;MAA1C,CAAD;IAFZ,CAAD;EAFsG,CAAD,CAAvH;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,SAASK,wBAAT,GAAoC;EAChC,MAAMC,KAAK,CAAE;AACjB;AACA;AACA;AACA,mDAJe,CAAX;AAKH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASC,4BAAT,GAAwC;EACpC,MAAMD,KAAK,CAAE;AACjB,wEADe,CAAX;AAEH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASE,4BAAT,GAAwC;EACpC,MAAMF,KAAK,CAAE;AACjB,uEADe,CAAX;AAEH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASG,0BAAT,GAAsC;EAClC,MAAMH,KAAK,CAAE,gFAAD,GACP,sEADM,CAAX;AAEH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,MAAMI,cAAc,GAAG,IAAIzG,yDAAJ,CAAmB,gBAAnB,CAAvB,EAEA;;AACA;;AACA,MAAM0G,gBAAgB,GAAGnE,0EAAkB,CAACC,qEAAa,CAAC,MAAM,EAAP,CAAd,CAA3C;AAEA;AACA;AACA;;;AACA,MAAMmE,WAAN,SAA0BD,gBAA1B,CAA2C;EACvCjD,WAAW,CAACmD,WAAD,EAAc7C,SAAd,EAAyB8C,aAAzB,EAAwCC,WAAxC,EAAqD9C,kBAArD,EAAyE;IAChF,IAAII,EAAJ;;IACA;IACA,KAAKwC,WAAL,GAAmBA,WAAnB;IACA,KAAK7C,SAAL,GAAiBA,SAAjB;IACA,KAAK8C,aAAL,GAAqBA,aAArB;IACA,KAAKC,WAAL,GAAmBA,WAAnB;IACA,KAAK9C,kBAAL,GAA0BA,kBAA1B;IACA;;IACA,KAAK+C,IAAL,GAAY,UAAZ;IACA;;IACA,KAAKC,QAAL,GAAgB,IAAI/F,yCAAJ,EAAhB;IACA;;IACA,KAAKgG,QAAL,GAAgB,IAAIhG,yCAAJ,EAAhB;IACA;;IACA,KAAKiG,YAAL,GAAoB,KAApB;IACA;;IACA,KAAKC,gBAAL,GAAwB,KAAxB;IACA,CAAC/C,EAAE,GAAG0C,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,WAAW,CAACM,OAA5E,MAAyF,IAAzF,IAAiGhD,EAAE,KAAK,KAAK,CAA7G,GAAiH,KAAK,CAAtH,GAA0HA,EAAE,CAACiD,IAAH,CAAQP,WAAR,EAAqB,IAArB,CAA1H;EACH;EACD;;;EACAQ,KAAK,CAACC,MAAD,EAASC,OAAT,EAAkB;IACnB,IAAI,KAAKX,aAAL,IAAsBU,MAA1B,EAAkC;MAC9B,KAAKV,aAAL,CAAmBY,QAAnB,CAA4B,KAAKC,eAAL,EAA5B,EAAoDH,MAApD,EAA4DC,OAA5D;IACH,CAFD,MAGK;MACD,KAAKE,eAAL,GAAuBJ,KAAvB,CAA6BE,OAA7B;IACH;;IACD,KAAKP,QAAL,CAAcjC,IAAd,CAAmB,IAAnB;EACH;;EACD2C,eAAe,GAAG;IACd,IAAI,KAAKd,aAAT,EAAwB;MACpB;MACA;MACA;MACA,KAAKA,aAAL,CAAmBe,OAAnB,CAA2B,KAAKhB,WAAhC,EAA6C,KAA7C;IACH;EACJ;;EACD1B,WAAW,GAAG;IACV,IAAI,KAAK2B,aAAT,EAAwB;MACpB,KAAKA,aAAL,CAAmBgB,cAAnB,CAAkC,KAAKjB,WAAvC;IACH;;IACD,IAAI,KAAKE,WAAL,IAAoB,KAAKA,WAAL,CAAiBgB,UAAzC,EAAqD;MACjD,KAAKhB,WAAL,CAAiBgB,UAAjB,CAA4B,IAA5B;IACH;;IACD,KAAKd,QAAL,CAAce,QAAd;;IACA,KAAKd,QAAL,CAAcc,QAAd;EACH;EACD;;;EACAC,YAAY,GAAG;IACX,OAAO,KAAKC,QAAL,GAAgB,IAAhB,GAAuB,GAA9B;EACH;EACD;;;EACAP,eAAe,GAAG;IACd,OAAO,KAAKd,WAAL,CAAiBjC,aAAxB;EACH;EACD;;;EACAuD,cAAc,CAACC,KAAD,EAAQ;IAClB,IAAI,KAAKF,QAAT,EAAmB;MACfE,KAAK,CAACC,cAAN;MACAD,KAAK,CAACE,eAAN;IACH;EACJ;EACD;;;EACAC,iBAAiB,GAAG;IAChB,KAAKtB,QAAL,CAAchC,IAAd,CAAmB,IAAnB;EACH;EACD;;;EACAuD,QAAQ,GAAG;IACP,IAAInE,EAAJ;;IACA,MAAMoE,KAAK,GAAG,KAAK5B,WAAL,CAAiBjC,aAAjB,CAA+B8D,SAA/B,CAAyC,IAAzC,CAAd;;IACA,MAAMC,KAAK,GAAGF,KAAK,CAACG,gBAAN,CAAuB,2BAAvB,CAAd,CAHO,CAIP;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;MACnCF,KAAK,CAACE,CAAD,CAAL,CAASE,MAAT;IACH;;IACD,OAAO,CAAC,CAAC1E,EAAE,GAAGoE,KAAK,CAACO,WAAZ,MAA6B,IAA7B,IAAqC3E,EAAE,KAAK,KAAK,CAAjD,GAAqD,KAAK,CAA1D,GAA8DA,EAAE,CAAC4E,IAAH,EAA/D,KAA6E,EAApF;EACH;;EACDC,eAAe,CAACC,aAAD,EAAgB;IAC3B,IAAI9E,EAAJ,CAD2B,CAE3B;IACA;IACA;IACA;;;IACA,KAAK8C,YAAL,GAAoBgC,aAApB;IACA,CAAC9E,EAAE,GAAG,KAAKJ,kBAAX,MAAmC,IAAnC,IAA2CI,EAAE,KAAK,KAAK,CAAvD,GAA2D,KAAK,CAAhE,GAAoEA,EAAE,CAACW,YAAH,EAApE;EACH;;EACDoE,SAAS,GAAG;IACR,OAAO,KAAKpF,SAAL,IAAkB,KAAKA,SAAL,CAAeqF,aAAf,KAAiC,KAAK1B,eAAL,EAA1D;EACH;;AA1FsC;;AA4F3Cf,WAAW,CAACvB,IAAZ;EAAA,iBAAwGuB,WAAxG,EAvLsG5G,+DAuLtG,CAAqIA,qDAArI,GAvLsGA,+DAuLtG,CAA+JqC,qDAA/J,GAvLsGrC,+DAuLtG,CAAoLb,2DAApL,GAvLsGa,+DAuLtG,CAAgN0G,cAAhN,MAvLsG1G,+DAuLtG,CAA2PA,4DAA3P;AAAA;;AACA4G,WAAW,CAAC4C,IAAZ,kBAxLsGxJ,+DAwLtG;EAAA,MAA4F4G,WAA5F;EAAA;EAAA;EAAA;EAAA;IAAA;MAxLsG5G,wDAwLtG;QAAA,OAA4F,0BAA5F;MAAA;QAAA,OAA4F,uBAA5F;MAAA;IAAA;;IAAA;MAxLsGA,yDAwLtG;MAxLsGA,yDAwLtG;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA;EAAA,WAxLsGA,wEAwLtG;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAxLsGA,6DAwLtG;MAxLsGA,0DAwL0mB,GAAhtB;MAxLsGA,uDAwLqoB,aAA3uB;MAxLsGA,wDAwLiyB,oDAAv4B;IAAA;;IAAA;MAxLsGA,uDAwLorB,GAA1xB;MAxLsGA,wDAwLorB,mGAA1xB;MAxLsGA,uDAwL0yB,GAAh5B;MAxLsGA,wDAwL0yB,8BAAh5B;IAAA;EAAA;EAAA,aAA8jCuC,6DAA9jC,EAA+yCH,iDAA/yC;EAAA;EAAA;AAAA;;AACA;EAAA,mDAzLsGpC,+DAyLtG,CAA2F4G,WAA3F,EAAoH,CAAC;IACzGhB,IAAI,EAAExF,oDADmG;IAEzG2F,IAAI,EAAE,CAAC;MAAEI,QAAQ,EAAE,iBAAZ;MAA+BwD,QAAQ,EAAE,aAAzC;MAAwDC,MAAM,EAAE,CAAC,UAAD,EAAa,eAAb,CAAhE;MAA+FC,IAAI,EAAE;QAChG,eAAe,MADiF;QAEhG,yBAAyB,MAFuE;QAGhG,qCAAqC,cAH2D;QAIhG,yCAAyC,kBAJuD;QAKhG,mBAAmB,gBAL6E;QAMhG,wBAAwB,qBANwE;QAOhG,mBAAmB,kBAP6E;QAQhG,SAAS,qBARuF;QAShG,WAAW,wBATqF;QAUhG,gBAAgB;MAVgF,CAArG;MAWIC,eAAe,EAAEzJ,yEAXrB;MAWqD2J,aAAa,EAAE1J,iEAXpE;MAW4F4J,QAAQ,EAAE;IAXtG,CAAD;EAFmG,CAAD,CAApH,EAc4B,YAAY;IAChC,OAAO,CAAC;MAAEtE,IAAI,EAAE5F,qDAAasJ;IAArB,CAAD,EAA0B;MAAE1D,IAAI,EAAEC,SAAR;MAAmBC,UAAU,EAAE,CAAC;QACjDF,IAAI,EAAEzF,iDAD2C;QAEjD4F,IAAI,EAAE,CAAC1D,qDAAD;MAF2C,CAAD;IAA/B,CAA1B,EAGW;MAAEuD,IAAI,EAAEzG,2DAAeoK;IAAvB,CAHX,EAGsC;MAAE3D,IAAI,EAAEC,SAAR;MAAmBC,UAAU,EAAE,CAAC;QAC7DF,IAAI,EAAEzF,iDADuD;QAE7D4F,IAAI,EAAE,CAACW,cAAD;MAFuD,CAAD,EAG7D;QACCd,IAAI,EAAErF,mDAAQA;MADf,CAH6D;IAA/B,CAHtC,EAQW;MAAEqF,IAAI,EAAE5F,4DAAoB0F;IAA5B,CARX,CAAP;EASH,CAxBL,EAwBuB;IAAEsB,IAAI,EAAE,CAAC;MAChBpB,IAAI,EAAEpF,gDAAKA;IADK,CAAD;EAAR,CAxBvB;AAAA;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,MAAM2J,wBAAwB,GAAG,IAAIlK,yDAAJ,CAAmB,0BAAnB,EAA+C;EAC5EmK,UAAU,EAAE,MADgE;EAE5EC,OAAO,EAAEC;AAFmE,CAA/C,CAAjC;AAIA;;AACA,SAASA,gCAAT,GAA4C;EACxC,OAAO;IACHC,cAAc,EAAE,KADb;IAEHC,SAAS,EAAE,OAFR;IAGHC,SAAS,EAAE,OAHR;IAIHC,aAAa,EAAE;EAJZ,CAAP;AAMH;;AACD,IAAIC,YAAY,GAAG,CAAnB;AACA;;AACA,MAAMC,YAAN,CAAmB;EACflH,WAAW,CAACmD,WAAD,EAAcgE,OAAd,EAAuBC,eAAvB,EACX;EACA7G,kBAFW,EAES;IAChB,KAAK4C,WAAL,GAAmBA,WAAnB;IACA,KAAKgE,OAAL,GAAeA,OAAf;IACA,KAAKC,eAAL,GAAuBA,eAAvB;IACA,KAAK7G,kBAAL,GAA0BA,kBAA1B;IACA,KAAK8G,UAAL,GAAkB,KAAKD,eAAL,CAAqBN,SAAvC;IACA,KAAKQ,UAAL,GAAkB,KAAKF,eAAL,CAAqBL,SAAvC;IACA;;IACA,KAAKQ,sBAAL,GAA8B,IAAIxK,oDAAJ,EAA9B;IACA;;IACA,KAAKyK,gBAAL,GAAwB/J,oDAAxB;IACA;;IACA,KAAKiK,UAAL,GAAkB,EAAlB;IACA;;IACA,KAAKC,oBAAL,GAA4B,MAA5B;IACA;;IACA,KAAKC,cAAL,GAAsB,IAAIpK,yCAAJ,EAAtB;IACA;;IACA,KAAKqK,iBAAL,GAAyB,KAAKT,eAAL,CAAqBS,iBAArB,IAA0C,EAAnE;IACA;;IACA,KAAKb,aAAL,GAAqB,KAAKI,eAAL,CAAqBJ,aAA1C;IACA,KAAKc,eAAL,GAAuB,KAAKV,eAAL,CAAqBP,cAA5C;IACA,KAAKkB,YAAL,GAAoB,KAAKX,eAAL,CAAqBY,WAAzC;IACA;;IACA,KAAKC,MAAL,GAAc,IAAIjL,uDAAJ,EAAd;IACA;AACR;AACA;AACA;AACA;;IACQ,KAAKkL,KAAL,GAAa,KAAKD,MAAlB;IACA,KAAKE,OAAL,GAAgB,kBAAiBlB,YAAY,EAAG,EAAhD;EACH;EACD;;;EACa,IAATH,SAAS,GAAG;IACZ,OAAO,KAAKO,UAAZ;EACH;;EACY,IAATP,SAAS,CAACsB,KAAD,EAAQ;IACjB,IAAIA,KAAK,KAAK,QAAV,IACAA,KAAK,KAAK,OADV,KAEC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAFrC,CAAJ,EAEqD;MACjDxF,4BAA4B;IAC/B;;IACD,KAAKwE,UAAL,GAAkBe,KAAlB;IACA,KAAKE,kBAAL;EACH;EACD;;;EACa,IAATvB,SAAS,GAAG;IACZ,OAAO,KAAKO,UAAZ;EACH;;EACY,IAATP,SAAS,CAACqB,KAAD,EAAQ;IACjB,IAAIA,KAAK,KAAK,OAAV,IAAqBA,KAAK,KAAK,OAA/B,KAA2C,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAA/E,CAAJ,EAA+F;MAC3FvF,4BAA4B;IAC/B;;IACD,KAAKwE,UAAL,GAAkBc,KAAlB;IACA,KAAKE,kBAAL;EACH;EACD;;;EACkB,IAAdzB,cAAc,GAAG;IACjB,OAAO,KAAKiB,eAAZ;EACH;;EACiB,IAAdjB,cAAc,CAACuB,KAAD,EAAQ;IACtB,KAAKN,eAAL,GAAuBjM,4EAAqB,CAACuM,KAAD,CAA5C;EACH;EACD;;;EACe,IAAXJ,WAAW,GAAG;IACd,OAAO,KAAKD,YAAZ;EACH;;EACc,IAAXC,WAAW,CAACI,KAAD,EAAQ;IACnB,KAAKL,YAAL,GAAoBlM,4EAAqB,CAACuM,KAAD,CAAzC;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACkB,IAAVG,UAAU,CAACC,OAAD,EAAU;IACpB,MAAMC,kBAAkB,GAAG,KAAKC,mBAAhC;;IACA,IAAID,kBAAkB,IAAIA,kBAAkB,CAACrD,MAA7C,EAAqD;MACjDqD,kBAAkB,CAACE,KAAnB,CAAyB,GAAzB,EAA8BC,OAA9B,CAAuCC,SAAD,IAAe;QACjD,KAAKnB,UAAL,CAAgBmB,SAAhB,IAA6B,KAA7B;MACH,CAFD;IAGH;;IACD,KAAKH,mBAAL,GAA2BF,OAA3B;;IACA,IAAIA,OAAO,IAAIA,OAAO,CAACpD,MAAvB,EAA+B;MAC3BoD,OAAO,CAACG,KAAR,CAAc,GAAd,EAAmBC,OAAnB,CAA4BC,SAAD,IAAe;QACtC,KAAKnB,UAAL,CAAgBmB,SAAhB,IAA6B,IAA7B;MACH,CAFD;MAGA,KAAK1F,WAAL,CAAiBjC,aAAjB,CAA+B2H,SAA/B,GAA2C,EAA3C;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACiB,IAATC,SAAS,GAAG;IACZ,OAAO,KAAKP,UAAZ;EACH;;EACY,IAATO,SAAS,CAACN,OAAD,EAAU;IACnB,KAAKD,UAAL,GAAkBC,OAAlB;EACH;;EACDO,QAAQ,GAAG;IACP,KAAKT,kBAAL;EACH;;EACDU,kBAAkB,GAAG;IACjB,KAAKC,wBAAL;;IACA,KAAKC,WAAL,GAAmB,IAAIxN,8DAAJ,CAAoB,KAAK6L,sBAAzB,EACd4B,QADc,GAEdC,aAFc,GAGdC,cAHc,EAAnB;IAIA,KAAK7B,gBAAL,GAAwB,KAAK0B,WAAL,CAAiBI,MAAjB,CAAwBC,SAAxB,CAAkC,MAAM,KAAKtB,MAAL,CAAYuB,IAAZ,CAAiB,KAAjB,CAAxC,CAAxB,CANiB,CAOjB;IACA;IACA;;IACA,KAAKjC,sBAAL,CAA4BkC,OAA5B,CACKC,IADL,CACU7L,yDAAS,CAAC,KAAK0J,sBAAN,CADnB,EACkDzJ,0DAAS,CAAC6L,KAAK,IAAIjM,4CAAK,CAAC,GAAGiM,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAUA,IAAI,CAACrG,QAAzB,CAAJ,CAAf,CAD3D,EAEK+F,SAFL,CAEeO,WAAW,IAAI,KAAKZ,WAAL,CAAiBa,gBAAjB,CAAkCD,WAAlC,CAF9B;;IAGA,KAAKvC,sBAAL,CAA4BkC,OAA5B,CAAoCF,SAApC,CAA+CS,SAAD,IAAe;MACzD,IAAIrJ,EAAJ,CADyD,CAEzD;MACA;MACA;;;MACA,MAAMsJ,OAAO,GAAG,KAAKf,WAArB;;MACA,IAAI,KAAKvB,oBAAL,KAA8B,OAA9B,KAA0C,CAAChH,EAAE,GAAGsJ,OAAO,CAACC,UAAd,MAA8B,IAA9B,IAAsCvJ,EAAE,KAAK,KAAK,CAAlD,GAAsD,KAAK,CAA3D,GAA+DA,EAAE,CAAC+E,SAAH,EAAzG,CAAJ,EAA8H;QAC1H,MAAMiE,KAAK,GAAGK,SAAS,CAACG,OAAV,EAAd;QACA,MAAMC,KAAK,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACE,GAAL,CAASZ,KAAK,CAACvE,MAAN,GAAe,CAAxB,EAA2B6E,OAAO,CAACO,eAAR,IAA2B,CAAtD,CAAZ,CAAd;;QACA,IAAIb,KAAK,CAACS,KAAD,CAAL,IAAgB,CAACT,KAAK,CAACS,KAAD,CAAL,CAAa5F,QAAlC,EAA4C;UACxCyF,OAAO,CAACQ,aAAR,CAAsBL,KAAtB;QACH,CAFD,MAGK;UACDH,OAAO,CAACS,iBAAR;QACH;MACJ;IACJ,CAhBD;EAiBH;;EACDjJ,WAAW,GAAG;IACV,KAAK8F,sBAAL,CAA4BoD,OAA5B;;IACA,KAAKnD,gBAAL,CAAsBoD,WAAtB;;IACA,KAAK3C,MAAL,CAAY3D,QAAZ;EACH;EACD;;;EACAf,QAAQ,GAAG;IACP;IACA,MAAMsH,WAAW,GAAG,KAAKtD,sBAAL,CAA4BkC,OAAhD;IACA,OAAOoB,WAAW,CAACnB,IAAZ,CAAiB7L,yDAAS,CAAC,KAAK0J,sBAAN,CAA1B,EAAyDzJ,0DAAS,CAAC6L,KAAK,IAAIjM,4CAAK,CAAC,GAAGiM,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAUA,IAAI,CAACtG,QAAzB,CAAJ,CAAf,CAAlE,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACII,OAAO,CAACmH,KAAD,EAAQ,CAAG;EAClB;AACJ;AACA;AACA;AACA;AACA;;;EACIzG,UAAU,CAACyG,KAAD,EAAQ,CAAG;EACrB;;;EACAC,cAAc,CAACrG,KAAD,EAAQ;IAClB,MAAMsG,OAAO,GAAGtG,KAAK,CAACsG,OAAtB;IACA,MAAMf,OAAO,GAAG,KAAKf,WAArB;;IACA,QAAQ8B,OAAR;MACI,KAAK9O,0DAAL;QACI,IAAI,CAACC,sEAAc,CAACuI,KAAD,CAAnB,EAA4B;UACxBA,KAAK,CAACC,cAAN;UACA,KAAKsD,MAAL,CAAYuB,IAAZ,CAAiB,SAAjB;QACH;;QACD;;MACJ,KAAKvN,8DAAL;QACI,IAAI,KAAKgP,UAAL,IAAmB,KAAKC,SAAL,KAAmB,KAA1C,EAAiD;UAC7C,KAAKjD,MAAL,CAAYuB,IAAZ,CAAiB,SAAjB;QACH;;QACD;;MACJ,KAAKxN,+DAAL;QACI,IAAI,KAAKiP,UAAL,IAAmB,KAAKC,SAAL,KAAmB,KAA1C,EAAiD;UAC7C,KAAKjD,MAAL,CAAYuB,IAAZ,CAAiB,SAAjB;QACH;;QACD;;MACJ;QACI,IAAIwB,OAAO,KAAKlP,4DAAZ,IAAwBkP,OAAO,KAAKjP,8DAAxC,EAAoD;UAChDkO,OAAO,CAACkB,cAAR,CAAuB,UAAvB;QACH;;QACDlB,OAAO,CAACmB,SAAR,CAAkB1G,KAAlB;QACA;IAtBR,CAHkB,CA2BlB;IACA;;;IACAA,KAAK,CAACE,eAAN;EACH;EACD;AACJ;AACA;AACA;;;EACIyG,cAAc,CAACvH,MAAM,GAAG,SAAV,EAAqB;IAC/B;IACA,IAAI,KAAKwH,WAAT,EAAsB;MAClB,KAAKnE,OAAL,CAAaoE,QAAb,CAAsB7B,IAAtB,CAA2B3L,qDAAI,CAAC,CAAD,CAA/B,EAAoCwL,SAApC,CAA8C,MAAM,KAAKiC,eAAL,CAAqB1H,MAArB,CAApD;IACH,CAFD,MAGK;MACD,KAAK0H,eAAL,CAAqB1H,MAArB;IACH;EACJ;EACD;AACJ;AACA;AACA;;;EACI0H,eAAe,CAAC1H,MAAD,EAAS;IACpB,MAAMmG,OAAO,GAAG,KAAKf,WAArB;IACAe,OAAO,CAACkB,cAAR,CAAuBrH,MAAvB,EAA+B2H,kBAA/B,GAFoB,CAGpB;IACA;IACA;;IACA,IAAI,CAACxB,OAAO,CAACC,UAAT,IAAuB,KAAK3C,sBAAL,CAA4BnC,MAAvD,EAA+D;MAC3D,IAAIpE,OAAO,GAAG,KAAKuG,sBAAL,CAA4BmE,KAA5B,CAAkCzH,eAAlC,GAAoD0H,aAAlE,CAD2D,CAE3D;MACA;MACA;MACA;;;MACA,OAAO3K,OAAP,EAAgB;QACZ,IAAIA,OAAO,CAAC4K,YAAR,CAAqB,MAArB,MAAiC,MAArC,EAA6C;UACzC5K,OAAO,CAAC6C,KAAR;UACA;QACH,CAHD,MAIK;UACD7C,OAAO,GAAGA,OAAO,CAAC2K,aAAlB;QACH;MACJ;IACJ;EACJ;EACD;AACJ;AACA;AACA;;;EACIE,eAAe,GAAG;IACd,KAAK3C,WAAL,CAAiBuB,aAAjB,CAA+B,CAAC,CAAhC;EACH;EACD;AACJ;AACA;AACA;;;EACIqB,YAAY,CAACC,KAAD,EAAQ;IAChB;IACA;IACA,MAAMC,SAAS,GAAG3B,IAAI,CAACE,GAAL,CAAS,KAAK0B,cAAL,GAAsBF,KAA/B,EAAsC,EAAtC,CAAlB;IACA,MAAMG,YAAY,GAAI,GAAE,KAAKC,gBAAiB,GAAEH,SAAU,EAA1D;IACA,MAAMI,eAAe,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAK5E,UAAjB,EAA6B6E,IAA7B,CAAkC1D,SAAS,IAAI;MACnE,OAAOA,SAAS,CAAC2D,UAAV,CAAqB,KAAKL,gBAA1B,CAAP;IACH,CAFuB,CAAxB;;IAGA,IAAI,CAACC,eAAD,IAAoBA,eAAe,KAAK,KAAKK,kBAAjD,EAAqE;MACjE,IAAI,KAAKA,kBAAT,EAA6B;QACzB,KAAK/E,UAAL,CAAgB,KAAK+E,kBAArB,IAA2C,KAA3C;MACH;;MACD,KAAK/E,UAAL,CAAgBwE,YAAhB,IAAgC,IAAhC;MACA,KAAKO,kBAAL,GAA0BP,YAA1B;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACI5D,kBAAkB,CAACoE,IAAI,GAAG,KAAK5F,SAAb,EAAwB6F,IAAI,GAAG,KAAK5F,SAApC,EAA+C;IAC7D,IAAIpG,EAAJ;;IACA,MAAM6H,OAAO,GAAG,KAAKd,UAArB;IACAc,OAAO,CAAC,iBAAD,CAAP,GAA6BkE,IAAI,KAAK,QAAtC;IACAlE,OAAO,CAAC,gBAAD,CAAP,GAA4BkE,IAAI,KAAK,OAArC;IACAlE,OAAO,CAAC,gBAAD,CAAP,GAA4BmE,IAAI,KAAK,OAArC;IACAnE,OAAO,CAAC,gBAAD,CAAP,GAA4BmE,IAAI,KAAK,OAArC,CAN6D,CAO7D;;IACA,CAAChM,EAAE,GAAG,KAAKJ,kBAAX,MAAmC,IAAnC,IAA2CI,EAAE,KAAK,KAAK,CAAvD,GAA2D,KAAK,CAAhE,GAAoEA,EAAE,CAACW,YAAH,EAApE;EACH;EACD;;;EACAsL,eAAe,GAAG;IACd;IACA,KAAKjF,oBAAL,GAA4B,OAA5B;EACH;EACD;;;EACAkF,eAAe,GAAG;IACd;IACA,KAAKlF,oBAAL,GAA4B,MAA5B;EACH;EACD;;;EACAmF,gBAAgB,CAACpI,KAAD,EAAQ;IACpB,KAAKkD,cAAL,CAAoBrG,IAApB,CAAyBmD,KAAzB;;IACA,KAAKqI,YAAL,GAAoB,KAApB;EACH;;EACDC,iBAAiB,CAACtI,KAAD,EAAQ;IACrB,KAAKqI,YAAL,GAAoB,IAApB,CADqB,CAErB;IACA;IACA;IACA;IACA;IACA;;IACA,IAAIrI,KAAK,CAACuI,OAAN,KAAkB,OAAlB,IAA6B,KAAK/D,WAAL,CAAiBsB,eAAjB,KAAqC,CAAtE,EAAyE;MACrE9F,KAAK,CAAC1D,OAAN,CAAckM,SAAd,GAA0B,CAA1B;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIjE,wBAAwB,GAAG;IACvB,KAAKkE,SAAL,CAAe1D,OAAf,CACKC,IADL,CACU7L,yDAAS,CAAC,KAAKsP,SAAN,CADnB,EAEK5D,SAFL,CAEgBI,KAAD,IAAW;MACtB,KAAKpC,sBAAL,CAA4B6F,KAA5B,CAAkCzD,KAAK,CAAC1L,MAAN,CAAa4L,IAAI,IAAIA,IAAI,CAACxG,WAAL,KAAqB,IAA1C,CAAlC;;MACA,KAAKkE,sBAAL,CAA4B8F,eAA5B;IACH,CALD;EAMH;;AAnUc;;AAqUnBnG,YAAY,CAACvF,IAAb;EAAA,iBAAyGuF,YAAzG,EAjjBsG5K,+DAijBtG,CAAuIA,qDAAvI,GAjjBsGA,+DAijBtG,CAAiKA,iDAAjK,GAjjBsGA,+DAijBtG,CAAuLmK,wBAAvL,GAjjBsGnK,+DAijBtG,CAA4NA,4DAA5N;AAAA;;AACA4K,YAAY,CAACjF,IAAb,kBAljBsG3F,+DAkjBtG;EAAA,MAA6F4K,YAA7F;EAAA;IAAA;MAljBsG5K,4DAkjBtG,WAA2kBwD,gBAA3kB;MAljBsGxD,4DAkjBtG,WAA0pB4G,WAA1pB;MAljBsG5G,4DAkjBtG,WAAguB4G,WAAhuB;IAAA;;IAAA;MAAA;;MAljBsG5G,4DAkjBtG,MAljBsGA,yDAkjBtG;MAljBsGA,4DAkjBtG,MAljBsGA,yDAkjBtG;MAljBsGA,4DAkjBtG,MAljBsGA,yDAkjBtG;IAAA;EAAA;EAAA;IAAA;MAljBsGA,yDAkjBtG,CAAqzBW,sDAArzB;IAAA;;IAAA;MAAA;;MAljBsGX,4DAkjBtG,MAljBsGA,yDAkjBtG;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;AAAA;;AACA;EAAA,mDAnjBsGA,+DAmjBtG,CAA2F4K,YAA3F,EAAqH,CAAC;IAC1GhF,IAAI,EAAE1F,oDAASA;EAD2F,CAAD,CAArH,EAE4B,YAAY;IAChC,OAAO,CAAC;MAAE0F,IAAI,EAAE5F,qDAAasJ;IAArB,CAAD,EAA0B;MAAE1D,IAAI,EAAE5F,iDAASgR;IAAjB,CAA1B,EAA+C;MAAEpL,IAAI,EAAEC,SAAR;MAAmBC,UAAU,EAAE,CAAC;QACtEF,IAAI,EAAEzF,iDADgE;QAEtE4F,IAAI,EAAE,CAACoE,wBAAD;MAFgE,CAAD;IAA/B,CAA/C,EAGW;MAAEvE,IAAI,EAAE5F,4DAAoB0F;IAA5B,CAHX,CAAP;EAIH,CAPL,EAOuB;IAAEmL,SAAS,EAAE,CAAC;MACrBjL,IAAI,EAAEhF,0DADe;MAErBmF,IAAI,EAAE,CAACa,WAAD,EAAc;QAAEqK,WAAW,EAAE;MAAf,CAAd;IAFe,CAAD,CAAb;IAGPvG,aAAa,EAAE,CAAC;MAChB9E,IAAI,EAAEpF,gDAAKA;IADK,CAAD,CAHR;IAKP0Q,SAAS,EAAE,CAAC;MACZtL,IAAI,EAAEpF,gDADM;MAEZuF,IAAI,EAAE,CAAC,YAAD;IAFM,CAAD,CALJ;IAQPoL,cAAc,EAAE,CAAC;MACjBvL,IAAI,EAAEpF,gDADW;MAEjBuF,IAAI,EAAE,CAAC,iBAAD;IAFW,CAAD,CART;IAWPqL,eAAe,EAAE,CAAC;MAClBxL,IAAI,EAAEpF,gDADY;MAElBuF,IAAI,EAAE,CAAC,kBAAD;IAFY,CAAD,CAXV;IAcPyE,SAAS,EAAE,CAAC;MACZ5E,IAAI,EAAEpF,gDAAKA;IADC,CAAD,CAdJ;IAgBPiK,SAAS,EAAE,CAAC;MACZ7E,IAAI,EAAEpF,gDAAKA;IADC,CAAD,CAhBJ;IAkBP6Q,WAAW,EAAE,CAAC;MACdzL,IAAI,EAAE/E,oDADQ;MAEdkF,IAAI,EAAE,CAACpF,sDAAD;IAFQ,CAAD,CAlBN;IAqBP0M,KAAK,EAAE,CAAC;MACRzH,IAAI,EAAEhF,0DADE;MAERmF,IAAI,EAAE,CAACa,WAAD,EAAc;QAAEqK,WAAW,EAAE;MAAf,CAAd;IAFE,CAAD,CArBA;IAwBPjC,WAAW,EAAE,CAAC;MACdpJ,IAAI,EAAE9E,uDADQ;MAEdiF,IAAI,EAAE,CAACvC,gBAAD;IAFQ,CAAD,CAxBN;IA2BP+G,cAAc,EAAE,CAAC;MACjB3E,IAAI,EAAEpF,gDAAKA;IADM,CAAD,CA3BT;IA6BPkL,WAAW,EAAE,CAAC;MACd9F,IAAI,EAAEpF,gDAAKA;IADG,CAAD,CA7BN;IA+BPyL,UAAU,EAAE,CAAC;MACbrG,IAAI,EAAEpF,gDADO;MAEbuF,IAAI,EAAE,CAAC,OAAD;IAFO,CAAD,CA/BL;IAkCPyG,SAAS,EAAE,CAAC;MACZ5G,IAAI,EAAEpF,gDAAKA;IADC,CAAD,CAlCJ;IAoCPmL,MAAM,EAAE,CAAC;MACT/F,IAAI,EAAE7E,iDAAMA;IADH,CAAD,CApCD;IAsCP6K,KAAK,EAAE,CAAC;MACRhG,IAAI,EAAE7E,iDAAMA;IADJ,CAAD;EAtCA,CAPvB;AAAA;AAgDA;;;AACA,MAAMuQ,OAAN,SAAsB1G,YAAtB,CAAmC;EAC/BlH,WAAW,CAACiB,UAAD,EAAa4M,MAAb,EAAqBC,cAArB,EAAqCC,iBAArC,EAAwD;IAC/D,MAAM9M,UAAN,EAAkB4M,MAAlB,EAA0BC,cAA1B,EAA0CC,iBAA1C;IACA,KAAK5B,gBAAL,GAAwB,iBAAxB;IACA,KAAKF,cAAL,GAAsB,CAAtB;EACH;;AAL8B;;AAOnC2B,OAAO,CAACjM,IAAR;EAAA,iBAAoGiM,OAApG,EA3mBsGtR,+DA2mBtG,CAA6HA,qDAA7H,GA3mBsGA,+DA2mBtG,CAAuJA,iDAAvJ,GA3mBsGA,+DA2mBtG,CAA6KmK,wBAA7K,GA3mBsGnK,+DA2mBtG,CAAkNA,4DAAlN;AAAA;;AACAsR,OAAO,CAAC9H,IAAR,kBA5mBsGxJ,+DA4mBtG;EAAA,MAAwFsR,OAAxF;EAAA;EAAA;EAAA;IAAA;MA5mBsGtR,yDA4mBtG;IAAA;EAAA;EAAA;EAAA,WA5mBsGA,gEA4mBtG,CAAwP,CAAC;IAAEiG,OAAO,EAAES,cAAX;IAA2BR,WAAW,EAAEoL;EAAxC,CAAD,CAAxP,GA5mBsGtR,wEA4mBtG;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MA5mBsGA,6DA4mBtG;MA5mBsGA,wDA4mB8Q,wDAApX;IAAA;EAAA;EAAA,aAAg5FoC,oDAAh5F;EAAA;EAAA;EAAA;IAAA,WAAg+F,CAACe,iBAAiB,CAACC,aAAnB,EAAkCD,iBAAiB,CAACI,WAApD;EAAh+F;EAAA;AAAA;;AACA;EAAA,mDA7mBsGvD,+DA6mBtG,CAA2FsR,OAA3F,EAAgH,CAAC;IACrG1L,IAAI,EAAExF,oDAD+F;IAErG2F,IAAI,EAAE,CAAC;MAAEI,QAAQ,EAAE,UAAZ;MAAwB2D,eAAe,EAAEzJ,yEAAzC;MAAyE2J,aAAa,EAAE1J,iEAAxF;MAAgHqJ,QAAQ,EAAE,SAA1H;MAAqIE,IAAI,EAAE;QACtI,qBAAqB,MADiH;QAEtI,0BAA0B,MAF4G;QAGtI,2BAA2B;MAH2G,CAA3I;MAII8H,UAAU,EAAE,CAACxO,iBAAiB,CAACC,aAAnB,EAAkCD,iBAAiB,CAACI,WAApD,CAJhB;MAIkF6C,SAAS,EAAE,CAAC;QAAEH,OAAO,EAAES,cAAX;QAA2BR,WAAW,EAAEoL;MAAxC,CAAD,CAJ7F;MAIkJpH,QAAQ,EAAE,+oBAJ5J;MAI6yB0H,MAAM,EAAE,CAAC,22DAAD;IAJrzB,CAAD;EAF+F,CAAD,CAAhH,EAO4B,YAAY;IAChC,OAAO,CAAC;MAAEhM,IAAI,EAAE5F,qDAAasJ;IAArB,CAAD,EAA0B;MAAE1D,IAAI,EAAE5F,iDAASgR;IAAjB,CAA1B,EAA+C;MAAEpL,IAAI,EAAEC,SAAR;MAAmBC,UAAU,EAAE,CAAC;QACtEF,IAAI,EAAEzF,iDADgE;QAEtE4F,IAAI,EAAE,CAACoE,wBAAD;MAFgE,CAAD;IAA/B,CAA/C,EAGW;MAAEvE,IAAI,EAAE5F,4DAAoB0F;IAA5B,CAHX,CAAP;EAIH,CAZL;AAAA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,MAAMmM,wBAAwB,GAAG,IAAI5R,yDAAJ,CAAmB,0BAAnB,CAAjC;AACA;;AACA,SAAS6R,gCAAT,CAA0CC,OAA1C,EAAmD;EAC/C,OAAO,MAAMA,OAAO,CAACC,gBAAR,CAAyBC,UAAzB,EAAb;AACH;AACD;;;AACA,MAAMC,yCAAyC,GAAG;EAC9CjM,OAAO,EAAE4L,wBADqC;EAE9CM,IAAI,EAAE,CAACtP,0DAAD,CAFwC;EAG9CuP,UAAU,EAAEN;AAHkC,CAAlD;AAKA;;AACA,MAAMO,sBAAsB,GAAG,CAA/B;AACA;;AACA,MAAMC,2BAA2B,GAAGtP,uFAA+B,CAAC;EAAEuP,OAAO,EAAE;AAAX,CAAD,CAAnE,EACA;;AACA,MAAMC,mBAAN,CAA0B;EACtB9O,WAAW,CAAC+O,QAAD,EAAWC,QAAX,EAAqB3O,iBAArB,EAAwC4O,cAAxC,EAAwDhE,UAAxD,EACX;EACA;EACAiE,iBAHW,EAGQC,IAHR,EAGc/L,aAHd,EAG6B+D,OAH7B,EAGsC;IAC7C,KAAK4H,QAAL,GAAgBA,QAAhB;IACA,KAAKC,QAAL,GAAgBA,QAAhB;IACA,KAAK3O,iBAAL,GAAyBA,iBAAzB;IACA,KAAK6O,iBAAL,GAAyBA,iBAAzB;IACA,KAAKC,IAAL,GAAYA,IAAZ;IACA,KAAK/L,aAAL,GAAqBA,aAArB;IACA,KAAK+D,OAAL,GAAeA,OAAf;IACA,KAAKiI,WAAL,GAAmB,IAAnB;IACA,KAAKC,SAAL,GAAiB,KAAjB;IACA,KAAKC,2BAAL,GAAmC7R,oDAAnC;IACA,KAAK8R,kBAAL,GAA0B9R,oDAA1B;IACA,KAAK+R,sBAAL,GAA8B/R,oDAA9B;IACA;AACR;AACA;AACA;;IACQ,KAAKgS,iBAAL,GAA0B/K,KAAD,IAAW;MAChC,IAAI,CAAC/I,mFAAgC,CAAC+I,KAAD,CAArC,EAA8C;QAC1C,KAAKgL,SAAL,GAAiB,OAAjB;MACH;IACJ,CAJD,CAjB6C,CAsB7C;IACA;;;IACA,KAAKA,SAAL,GAAiBvN,SAAjB;IACA;AACR;AACA;AACA;AACA;;IACQ,KAAKwN,YAAL,GAAoB,IAApB;IACA;;IACA,KAAKC,UAAL,GAAkB,IAAI5S,uDAAJ,EAAlB;IACA;AACR;AACA;AACA;AACA;IACQ;;IACA,KAAK6S,UAAL,GAAkB,KAAKD,UAAvB;IACA;;IACA,KAAKE,UAAL,GAAkB,IAAI9S,uDAAJ,EAAlB;IACA;AACR;AACA;AACA;AACA;IACQ;;IACA,KAAK+S,WAAL,GAAmB,KAAKD,UAAxB;IACA,KAAKE,eAAL,GAAuBf,cAAvB;IACA,KAAKgB,mBAAL,GAA2BhF,UAAU,YAAY/D,YAAtB,GAAqC+D,UAArC,GAAkD9I,SAA7E;;IACA6M,QAAQ,CAAC9N,aAAT,CAAuBgP,gBAAvB,CAAwC,YAAxC,EAAsD,KAAKT,iBAA3D,EAA8Eb,2BAA9E;;IACA,IAAIM,iBAAJ,EAAuB;MACnBA,iBAAiB,CAACxL,gBAAlB,GAAqC,KAAKyM,eAAL,EAArC;IACH;EACJ;EACD;AACJ;AACA;AACA;;;EACoC,IAA5BC,4BAA4B,GAAG;IAC/B,OAAO,KAAKC,IAAZ;EACH;;EAC+B,IAA5BD,4BAA4B,CAACE,CAAD,EAAI;IAChC,KAAKD,IAAL,GAAYC,CAAZ;EACH;EACD;;;EACQ,IAAJD,IAAI,GAAG;IACP,OAAO,KAAKE,KAAZ;EACH;;EACO,IAAJF,IAAI,CAACA,IAAD,EAAO;IACX,IAAIA,IAAI,KAAK,KAAKE,KAAlB,EAAyB;MACrB;IACH;;IACD,KAAKA,KAAL,GAAaF,IAAb;;IACA,KAAKb,sBAAL,CAA4B5E,WAA5B;;IACA,IAAIyF,IAAJ,EAAU;MACN,IAAIA,IAAI,KAAK,KAAKJ,mBAAd,KAAsC,OAAO5H,SAAP,KAAqB,WAArB,IAAoCA,SAA1E,CAAJ,EAA0F;QACtFtF,0BAA0B;MAC7B;;MACD,KAAKyM,sBAAL,GAA8Ba,IAAI,CAACnI,KAAL,CAAWqB,SAAX,CAAsBiH,MAAD,IAAY;QAC3D,KAAKC,YAAL,CAAkBD,MAAlB,EAD2D,CAE3D;;;QACA,IAAI,CAACA,MAAM,KAAK,OAAX,IAAsBA,MAAM,KAAK,KAAlC,KAA4C,KAAKP,mBAArD,EAA0E;UACtE,KAAKA,mBAAL,CAAyBhI,MAAzB,CAAgCuB,IAAhC,CAAqCgH,MAArC;QACH;MACJ,CAN6B,CAA9B;IAOH;EACJ;;EACDxH,kBAAkB,GAAG;IACjB,KAAK0H,UAAL;;IACA,KAAKC,YAAL;EACH;;EACDlP,WAAW,GAAG;IACV,IAAI,KAAK2N,WAAT,EAAsB;MAClB,KAAKA,WAAL,CAAiB1N,OAAjB;;MACA,KAAK0N,WAAL,GAAmB,IAAnB;IACH;;IACD,KAAKJ,QAAL,CAAc9N,aAAd,CAA4B0P,mBAA5B,CAAgD,YAAhD,EAA8D,KAAKnB,iBAAnE,EAAsFb,2BAAtF;;IACA,KAAKY,sBAAL,CAA4B5E,WAA5B;;IACA,KAAK0E,2BAAL,CAAiC1E,WAAjC;;IACA,KAAK2E,kBAAL,CAAwB3E,WAAxB;EACH;EACD;;;EACY,IAARiG,QAAQ,GAAG;IACX,OAAO,KAAKxB,SAAZ;EACH;EACD;;;EACO,IAAHyB,GAAG,GAAG;IACN,OAAO,KAAK3B,IAAL,IAAa,KAAKA,IAAL,CAAU/G,KAAV,KAAoB,KAAjC,GAAyC,KAAzC,GAAiD,KAAxD;EACH;EACD;;;EACA+H,eAAe,GAAG;IACd,OAAO,CAAC,EAAE,KAAKjB,iBAAL,IAA0B,KAAKe,mBAAjC,CAAR;EACH;EACD;;;EACAc,UAAU,GAAG;IACT,OAAO,KAAK1B,SAAL,GAAiB,KAAK2B,SAAL,EAAjB,GAAoC,KAAKC,QAAL,EAA3C;EACH;EACD;;;EACAA,QAAQ,GAAG;IACP,IAAI,KAAK5B,SAAT,EAAoB;MAChB;IACH;;IACD,KAAKqB,UAAL;;IACA,MAAMQ,UAAU,GAAG,KAAKC,cAAL,EAAnB;;IACA,MAAMC,aAAa,GAAGF,UAAU,CAACG,SAAX,EAAtB;IACA,MAAMC,gBAAgB,GAAGF,aAAa,CAACE,gBAAvC;;IACA,KAAKC,YAAL,CAAkBD,gBAAlB;;IACAF,aAAa,CAACpJ,WAAd,GACI,KAAKqI,IAAL,CAAUrI,WAAV,IAAyB,IAAzB,GAAgC,CAAC,KAAKmI,eAAL,EAAjC,GAA0D,KAAKE,IAAL,CAAUrI,WADxE;IAEAkJ,UAAU,CAACzQ,MAAX,CAAkB,KAAK+Q,UAAL,EAAlB;;IACA,IAAI,KAAKnB,IAAL,CAAU/E,WAAd,EAA2B;MACvB,KAAK+E,IAAL,CAAU/E,WAAV,CAAsB7K,MAAtB,CAA6B,KAAKgR,QAAlC;IACH;;IACD,KAAKnC,2BAAL,GAAmC,KAAKoC,mBAAL,GAA2BnI,SAA3B,CAAqC,MAAM,KAAKyH,SAAL,EAA3C,CAAnC;;IACA,KAAKW,SAAL;;IACA,IAAI,KAAKtB,IAAL,YAAqBnJ,YAAzB,EAAuC;MACnC,KAAKmJ,IAAL,CAAUzD,eAAV;;MACA,KAAKyD,IAAL,CAAU9I,sBAAV,CAAiCkC,OAAjC,CAAyCC,IAAzC,CAA8C1L,0DAAS,CAAC,KAAKqS,IAAL,CAAUnI,KAAX,CAAvD,EAA0EqB,SAA1E,CAAoF,MAAM;QACtF;QACA;QACA+H,gBAAgB,CAACM,kBAAjB,CAAoC,KAApC,EAA2CC,mBAA3C;QACAP,gBAAgB,CAACM,kBAAjB,CAAoC,IAApC;MACH,CALD;IAMH;EACJ;EACD;;;EACAZ,SAAS,GAAG;IACR,KAAKX,IAAL,CAAUnI,KAAV,CAAgBsB,IAAhB;EACH;EACD;AACJ;AACA;AACA;;;EACI3F,KAAK,CAACC,MAAD,EAASC,OAAT,EAAkB;IACnB,IAAI,KAAKX,aAAL,IAAsBU,MAA1B,EAAkC;MAC9B,KAAKV,aAAL,CAAmBY,QAAnB,CAA4B,KAAKgL,QAAjC,EAA2ClL,MAA3C,EAAmDC,OAAnD;IACH,CAFD,MAGK;MACD,KAAKiL,QAAL,CAAc9N,aAAd,CAA4B2C,KAA5B,CAAkCE,OAAlC;IACH;EACJ;EACD;AACJ;AACA;;;EACI+N,cAAc,GAAG;IACb,IAAInR,EAAJ;;IACA,CAACA,EAAE,GAAG,KAAKyO,WAAX,MAA4B,IAA5B,IAAoCzO,EAAE,KAAK,KAAK,CAAhD,GAAoD,KAAK,CAAzD,GAA6DA,EAAE,CAACmR,cAAH,EAA7D;EACH;EACD;;;EACArB,YAAY,CAACD,MAAD,EAAS;IACjB,IAAI,CAAC,KAAKpB,WAAN,IAAqB,CAAC,KAAKyB,QAA/B,EAAyC;MACrC;IACH;;IACD,MAAMR,IAAI,GAAG,KAAKA,IAAlB;;IACA,KAAKf,2BAAL,CAAiC1E,WAAjC;;IACA,KAAKwE,WAAL,CAAiBvO,MAAjB,GANiB,CAOjB;IACA;IACA;IACA;;;IACA,IAAI,KAAK8O,YAAL,KAAsBa,MAAM,KAAK,SAAX,IAAwB,CAAC,KAAKd,SAA9B,IAA2C,CAAC,KAAKS,eAAL,EAAlE,CAAJ,EAA+F;MAC3F,KAAKtM,KAAL,CAAW,KAAK6L,SAAhB;IACH;;IACD,KAAKA,SAAL,GAAiBvN,SAAjB;;IACA,IAAIkO,IAAI,YAAYnJ,YAApB,EAAkC;MAC9BmJ,IAAI,CAACxD,eAAL;;MACA,IAAIwD,IAAI,CAAC/E,WAAT,EAAsB;QAClB;QACA+E,IAAI,CAACzI,cAAL,CACK8B,IADL,CACUzL,uDAAM,CAACyG,KAAK,IAAIA,KAAK,CAACuI,OAAN,KAAkB,MAA5B,CADhB,EACqDlP,qDAAI,CAAC,CAAD,CADzD,EAEA;QACAC,0DAAS,CAACqS,IAAI,CAAC/E,WAAL,CAAiB9K,SAAlB,CAHT,EAIK+I,SAJL,CAIe;UACXhI,IAAI,EAAE,MAAM8O,IAAI,CAAC/E,WAAL,CAAiBzK,MAAjB,EADD;UAEX;UACAyD,QAAQ,EAAE,MAAM,KAAKyN,cAAL,CAAoB,KAApB;QAHL,CAJf;MASH,CAXD,MAYK;QACD,KAAKA,cAAL,CAAoB,KAApB;MACH;IACJ,CAjBD,MAkBK;MACD,KAAKA,cAAL,CAAoB,KAApB;;MACA,IAAI1B,IAAI,CAAC/E,WAAT,EAAsB;QAClB+E,IAAI,CAAC/E,WAAL,CAAiBzK,MAAjB;MACH;IACJ;EACJ;EACD;AACJ;AACA;AACA;;;EACI8Q,SAAS,GAAG;IACR,KAAKtB,IAAL,CAAUpF,UAAV,GAAuB,KAAKkF,eAAL,KAAyB,KAAKF,mBAA9B,GAAoD9N,SAA3E;IACA,KAAKkO,IAAL,CAAUnF,SAAV,GAAsB,KAAK4F,GAA3B;;IACA,KAAKkB,iBAAL;;IACA,KAAK3B,IAAL,CAAUhF,cAAV,CAAyB,KAAKqE,SAAL,IAAkB,SAA3C;;IACA,KAAKqC,cAAL,CAAoB,IAApB;EACH;EACD;;;EACAC,iBAAiB,GAAG;IAChB,IAAI,KAAK3B,IAAL,CAAUvE,YAAd,EAA4B;MACxB,IAAIC,KAAK,GAAG,CAAZ;MACA,IAAId,UAAU,GAAG,KAAKoF,IAAL,CAAUpF,UAA3B;;MACA,OAAOA,UAAP,EAAmB;QACfc,KAAK;QACLd,UAAU,GAAGA,UAAU,CAACA,UAAxB;MACH;;MACD,KAAKoF,IAAL,CAAUvE,YAAV,CAAuBC,KAAvB;IACH;EACJ,CA7OqB,CA8OtB;;;EACAgG,cAAc,CAACE,MAAD,EAAS;IACnB,KAAK5C,SAAL,GAAiB4C,MAAjB;IACA,KAAK5C,SAAL,GAAiB,KAAKO,UAAL,CAAgBpG,IAAhB,EAAjB,GAA0C,KAAKsG,UAAL,CAAgBtG,IAAhB,EAA1C;;IACA,IAAI,KAAK2G,eAAL,EAAJ,EAA4B;MACxB,KAAKjB,iBAAL,CAAuB1J,eAAvB,CAAuCyM,MAAvC;IACH;EACJ;EACD;AACJ;AACA;AACA;;;EACIvB,UAAU,GAAG;IACT,IAAI,CAAC,KAAKL,IAAN,KAAe,OAAOhI,SAAP,KAAqB,WAArB,IAAoCA,SAAnD,CAAJ,EAAmE;MAC/D1F,wBAAwB;IAC3B;EACJ;EACD;AACJ;AACA;AACA;;;EACIwO,cAAc,GAAG;IACb,IAAI,CAAC,KAAK/B,WAAV,EAAuB;MACnB,MAAM8C,MAAM,GAAG,KAAKC,iBAAL,EAAf;;MACA,KAAKC,qBAAL,CAA2BF,MAAM,CAACZ,gBAAlC;;MACA,KAAKlC,WAAL,GAAmB,KAAKL,QAAL,CAAcsD,MAAd,CAAqBH,MAArB,CAAnB,CAHmB,CAInB;MACA;MACA;;MACA,KAAK9C,WAAL,CAAiBkD,aAAjB,GAAiC/I,SAAjC;IACH;;IACD,OAAO,KAAK6F,WAAZ;EACH;EACD;AACJ;AACA;AACA;;;EACI+C,iBAAiB,GAAG;IAChB,OAAO,IAAI/S,gEAAJ,CAAkB;MACrBkS,gBAAgB,EAAE,KAAKvC,QAAL,CACbwD,QADa,GAEbC,mBAFa,CAEO,KAAKxD,QAFZ,EAGb4C,kBAHa,GAIba,iBAJa,GAKbC,qBALa,CAKS,sCALT,CADG;MAOrB1L,aAAa,EAAE,KAAKqJ,IAAL,CAAUrJ,aAAV,IAA2B,kCAPrB;MAQrBuB,UAAU,EAAE,KAAK8H,IAAL,CAAUxI,iBARD;MASrBoH,cAAc,EAAE,KAAKe,eAAL,EATK;MAUrB9E,SAAS,EAAE,KAAKiE;IAVK,CAAlB,CAAP;EAYH;EACD;AACJ;AACA;AACA;AACA;;;EACIiD,qBAAqB,CAACG,QAAD,EAAW;IAC5B,IAAI,KAAKlC,IAAL,CAAU/H,kBAAd,EAAkC;MAC9BiK,QAAQ,CAACI,eAAT,CAAyBpJ,SAAzB,CAAmCqJ,MAAM,IAAI;QACzC,MAAMlG,IAAI,GAAGkG,MAAM,CAACC,cAAP,CAAsBC,QAAtB,KAAmC,OAAnC,GAA6C,OAA7C,GAAuD,QAApE;QACA,MAAMnG,IAAI,GAAGiG,MAAM,CAACC,cAAP,CAAsBE,QAAtB,KAAmC,KAAnC,GAA2C,OAA3C,GAAqD,OAAlE,CAFyC,CAGzC;QACA;QACA;;QACA,IAAI,KAAK5L,OAAT,EAAkB;UACd,KAAKA,OAAL,CAAa6L,GAAb,CAAiB,MAAM,KAAK3C,IAAL,CAAU/H,kBAAV,CAA6BoE,IAA7B,EAAmCC,IAAnC,CAAvB;QACH,CAFD,MAGK;UACD,KAAK0D,IAAL,CAAU/H,kBAAV,CAA6BoE,IAA7B,EAAmCC,IAAnC;QACH;MACJ,CAZD;IAaH;EACJ;EACD;AACJ;AACA;AACA;AACA;;;EACI4E,YAAY,CAACD,gBAAD,EAAmB;IAC3B,IAAI,CAAC2B,OAAD,EAAUC,eAAV,IAA6B,KAAK7C,IAAL,CAAUvJ,SAAV,KAAwB,QAAxB,GAAmC,CAAC,KAAD,EAAQ,OAAR,CAAnC,GAAsD,CAAC,OAAD,EAAU,KAAV,CAAvF;IACA,IAAI,CAACiM,QAAD,EAAWI,gBAAX,IAA+B,KAAK9C,IAAL,CAAUtJ,SAAV,KAAwB,OAAxB,GAAkC,CAAC,QAAD,EAAW,KAAX,CAAlC,GAAsD,CAAC,KAAD,EAAQ,QAAR,CAAzF;IACA,IAAI,CAACqM,OAAD,EAAUC,eAAV,IAA6B,CAACN,QAAD,EAAWI,gBAAX,CAAjC;IACA,IAAI,CAACL,QAAD,EAAWQ,gBAAX,IAA+B,CAACL,OAAD,EAAUC,eAAV,CAAnC;IACA,IAAIK,OAAO,GAAG,CAAd;;IACA,IAAI,KAAKpD,eAAL,EAAJ,EAA4B;MACxB;MACA;MACAmD,gBAAgB,GAAGL,OAAO,GAAG,KAAK5C,IAAL,CAAUvJ,SAAV,KAAwB,QAAxB,GAAmC,OAAnC,GAA6C,KAA1E;MACAoM,eAAe,GAAGJ,QAAQ,GAAGG,OAAO,KAAK,KAAZ,GAAoB,OAApB,GAA8B,KAA3D;MACAM,OAAO,GAAGR,QAAQ,KAAK,QAAb,GAAwBpE,sBAAxB,GAAiD,CAACA,sBAA5D;IACH,CAND,MAOK,IAAI,CAAC,KAAK0B,IAAL,CAAUxJ,cAAf,EAA+B;MAChCuM,OAAO,GAAGL,QAAQ,KAAK,KAAb,GAAqB,QAArB,GAAgC,KAA1C;MACAM,eAAe,GAAGF,gBAAgB,KAAK,KAArB,GAA6B,QAA7B,GAAwC,KAA1D;IACH;;IACD7B,gBAAgB,CAACkC,aAAjB,CAA+B,CAC3B;MAAEP,OAAF;MAAWG,OAAX;MAAoBN,QAApB;MAA8BC,QAA9B;MAAwCQ;IAAxC,CAD2B,EAE3B;MAAEN,OAAO,EAAEC,eAAX;MAA4BE,OAA5B;MAAqCN,QAAQ,EAAEQ,gBAA/C;MAAiEP,QAAjE;MAA2EQ;IAA3E,CAF2B,EAG3B;MACIN,OADJ;MAEIG,OAAO,EAAEC,eAFb;MAGIP,QAHJ;MAIIC,QAAQ,EAAEI,gBAJd;MAKII,OAAO,EAAE,CAACA;IALd,CAH2B,EAU3B;MACIN,OAAO,EAAEC,eADb;MAEIE,OAAO,EAAEC,eAFb;MAGIP,QAAQ,EAAEQ,gBAHd;MAIIP,QAAQ,EAAEI,gBAJd;MAKII,OAAO,EAAE,CAACA;IALd,CAV2B,CAA/B;EAkBH;EACD;;;EACA7B,mBAAmB,GAAG;IAClB,MAAM+B,QAAQ,GAAG,KAAKrE,WAAL,CAAiBsE,aAAjB,EAAjB;;IACA,MAAMC,WAAW,GAAG,KAAKvE,WAAL,CAAiBuE,WAAjB,EAApB;;IACA,MAAMC,WAAW,GAAG,KAAK3D,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBhI,MAApD,GAA6DtK,yCAAE,EAAnF;IACA,MAAMkW,KAAK,GAAG,KAAK5D,mBAAL,GACR,KAAKA,mBAAL,CAAyB1M,QAAzB,GAAoCmG,IAApC,CAAyCzL,uDAAM,CAAC6V,MAAM,IAAIA,MAAM,KAAK,KAAK5E,iBAA3B,CAA/C,EAA8FjR,uDAAM,CAAC,MAAM,KAAKoR,SAAZ,CAApG,CADQ,GAER1R,yCAAE,EAFR;IAGA,OAAOD,4CAAK,CAAC+V,QAAD,EAAWG,WAAX,EAAwBC,KAAxB,EAA+BF,WAA/B,CAAZ;EACH;EACD;;;EACAI,gBAAgB,CAACrP,KAAD,EAAQ;IACpB,IAAI,CAAC9I,kFAA+B,CAAC8I,KAAD,CAApC,EAA6C;MACzC;MACA;MACA,KAAKgL,SAAL,GAAiBhL,KAAK,CAACsP,MAAN,KAAiB,CAAjB,GAAqB,OAArB,GAA+B7R,SAAhD,CAHyC,CAIzC;MACA;MACA;;MACA,IAAI,KAAKgO,eAAL,EAAJ,EAA4B;QACxBzL,KAAK,CAACC,cAAN;MACH;IACJ;EACJ;EACD;;;EACAoG,cAAc,CAACrG,KAAD,EAAQ;IAClB,MAAMsG,OAAO,GAAGtG,KAAK,CAACsG,OAAtB,CADkB,CAElB;;IACA,IAAIA,OAAO,KAAK5O,yDAAZ,IAAqB4O,OAAO,KAAK3O,yDAArC,EAA4C;MACxC,KAAKqT,SAAL,GAAiB,UAAjB;IACH;;IACD,IAAI,KAAKS,eAAL,OACEnF,OAAO,KAAKhP,+DAAZ,IAA2B,KAAK8U,GAAL,KAAa,KAAzC,IACI9F,OAAO,KAAK/O,8DAAZ,IAA0B,KAAK6U,GAAL,KAAa,KAF5C,CAAJ,EAEyD;MACrD,KAAKpB,SAAL,GAAiB,UAAjB;MACA,KAAKuB,QAAL;IACH;EACJ;EACD;;;EACAgD,YAAY,CAACvP,KAAD,EAAQ;IAChB,IAAI,KAAKyL,eAAL,EAAJ,EAA4B;MACxB;MACAzL,KAAK,CAACE,eAAN;MACA,KAAKqM,QAAL;IACH,CAJD,MAKK;MACD,KAAKF,UAAL;IACH;EACJ;EACD;;;EACAJ,YAAY,GAAG;IACX;IACA,IAAI,CAAC,KAAKR,eAAL,EAAD,IAA2B,CAAC,KAAKF,mBAArC,EAA0D;MACtD;IACH;;IACD,KAAKV,kBAAL,GAA0B,KAAKU,mBAAL,CACrB1M,QADqB,GAEtB;IACA;IACA;IAJsB,CAKrBmG,IALqB,CAKhBzL,uDAAM,CAAC6V,MAAM,IAAIA,MAAM,KAAK,KAAK5E,iBAAhB,IAAqC,CAAC4E,MAAM,CAACtP,QAAxD,CALU,EAKyDtG,sDAAK,CAAC,CAAD,EAAIN,gDAAJ,CAL9D,EAMrB2L,SANqB,CAMX,MAAM;MACjB,KAAKmG,SAAL,GAAiB,OAAjB,CADiB,CAEjB;MACA;MACA;;MACA,IAAI,KAAKW,IAAL,YAAqBnJ,YAArB,IAAqC,KAAKmJ,IAAL,CAAUtD,YAAnD,EAAiE;QAC7D;QACA;QACA,KAAKsD,IAAL,CAAUzI,cAAV,CACK8B,IADL,CACU3L,qDAAI,CAAC,CAAD,CADd,EACmBG,sDAAK,CAAC,CAAD,EAAIN,gDAAJ,CADxB,EAC4CI,0DAAS,CAAC,KAAKiS,mBAAL,CAAyB1M,QAAzB,EAAD,CADrD,EAEKgG,SAFL,CAEe,MAAM,KAAK0H,QAAL,EAFrB;MAGH,CAND,MAOK;QACD,KAAKA,QAAL;MACH;IACJ,CArByB,CAA1B;EAsBH;EACD;;;EACAO,UAAU,GAAG;IACT;IACA;IACA;IACA,IAAI,CAAC,KAAK5Q,OAAN,IAAiB,KAAKA,OAAL,CAAa+M,WAAb,KAA6B,KAAK0C,IAAL,CAAU1C,WAA5D,EAAyE;MACrE,KAAK/M,OAAL,GAAe,IAAIpC,+DAAJ,CAAmB,KAAK6R,IAAL,CAAU1C,WAA7B,EAA0C,KAAKtN,iBAA/C,CAAf;IACH;;IACD,OAAO,KAAKO,OAAZ;EACH;;AAvbqB;;AAyb1BkO,mBAAmB,CAACnN,IAApB;EAAA,iBAAgHmN,mBAAhH,EA5kCsGxS,+DA4kCtG,CAAqJ4C,0DAArJ,GA5kCsG5C,+DA4kCtG,CAA8KA,qDAA9K,GA5kCsGA,+DA4kCtG,CAAwMA,2DAAxM,GA5kCsGA,+DA4kCtG,CAAwO6R,wBAAxO,GA5kCsG7R,+DA4kCtG,CAA6Q0G,cAA7Q,MA5kCsG1G,+DA4kCtG,CAAwT4G,WAAxT,OA5kCsG5G,+DA4kCtG,CAA4WiD,8DAA5W,MA5kCsGjD,+DA4kCtG,CAA4Zb,2DAA5Z,GA5kCsGa,+DA4kCtG,CAAwbA,iDAAxb;AAAA;;AACAwS,mBAAmB,CAAC7M,IAApB,kBA7kCsG3F,+DA6kCtG;EAAA,MAAoGwS,mBAApG;EAAA,6BAA4gB,MAA5gB;EAAA;EAAA;IAAA;MA7kCsGxS,wDA6kCtG;QAAA,OAAoG,wBAApG;MAAA;QAAA,OAAoG,4BAApG;MAAA;QAAA,OAAoG,0BAApG;MAAA;IAAA;;IAAA;MA7kCsGA,yDA6kCtG;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;EAAA;AAAA;;AACA;EAAA,mDA9kCsGA,+DA8kCtG,CAA2FwS,mBAA3F,EAA4H,CAAC;IACjH5M,IAAI,EAAE1F,oDAD2G;IAEjH6F,IAAI,EAAE,CAAC;MACC8D,IAAI,EAAE;QACF,iBAAiB,MADf;QAEF,wBAAwB,kBAFtB;QAGF,wBAAwB,gCAHtB;QAIF,WAAW,sBAJT;QAKF,eAAe,0BALb;QAMF,aAAa;MANX;IADP,CAAD;EAF2G,CAAD,CAA5H,EAY4B,YAAY;IAChC,OAAO,CAAC;MAAEjE,IAAI,EAAEhD,0DAAYC;IAApB,CAAD,EAAyB;MAAE+C,IAAI,EAAE5F,qDAAasJ;IAArB,CAAzB,EAAkD;MAAE1D,IAAI,EAAE5F,2DAAmByF;IAA3B,CAAlD,EAAiF;MAAEG,IAAI,EAAEC,SAAR;MAAmBC,UAAU,EAAE,CAAC;QACxGF,IAAI,EAAEzF,iDADkG;QAExG4F,IAAI,EAAE,CAAC8L,wBAAD;MAFkG,CAAD;IAA/B,CAAjF,EAGW;MAAEjM,IAAI,EAAEC,SAAR;MAAmBC,UAAU,EAAE,CAAC;QAClCF,IAAI,EAAEzF,iDAD4B;QAElC4F,IAAI,EAAE,CAACW,cAAD;MAF4B,CAAD,EAGlC;QACCd,IAAI,EAAErF,mDAAQA;MADf,CAHkC;IAA/B,CAHX,EAQW;MAAEqF,IAAI,EAAEgB,WAAR;MAAqBd,UAAU,EAAE,CAAC;QACpCF,IAAI,EAAErF,mDAAQA;MADsB,CAAD,EAEpC;QACCqF,IAAI,EAAE5E,+CAAIA;MADX,CAFoC;IAAjC,CARX,EAYW;MAAE4E,IAAI,EAAE3C,8DAAR;MAA6B6C,UAAU,EAAE,CAAC;QAC5CF,IAAI,EAAErF,mDAAQA;MAD8B,CAAD;IAAzC,CAZX,EAcW;MAAEqF,IAAI,EAAEzG,2DAAeoK;IAAvB,CAdX,EAcsC;MAAE3D,IAAI,EAAE5F,iDAASgR;IAAjB,CAdtC,CAAP;EAeH,CA5BL,EA4BuB;IAAE8C,4BAA4B,EAAE,CAAC;MACxClO,IAAI,EAAEpF,gDADkC;MAExCuF,IAAI,EAAE,CAAC,sBAAD;IAFkC,CAAD,CAAhC;IAGPgO,IAAI,EAAE,CAAC;MACPnO,IAAI,EAAEpF,gDADC;MAEPuF,IAAI,EAAE,CAAC,mBAAD;IAFC,CAAD,CAHC;IAMPoP,QAAQ,EAAE,CAAC;MACXvP,IAAI,EAAEpF,gDADK;MAEXuF,IAAI,EAAE,CAAC,oBAAD;IAFK,CAAD,CANH;IASPsN,YAAY,EAAE,CAAC;MACfzN,IAAI,EAAEpF,gDADS;MAEfuF,IAAI,EAAE,CAAC,4BAAD;IAFS,CAAD,CATP;IAYPuN,UAAU,EAAE,CAAC;MACb1N,IAAI,EAAE7E,iDAAMA;IADC,CAAD,CAZL;IAcPwS,UAAU,EAAE,CAAC;MACb3N,IAAI,EAAE7E,iDAAMA;IADC,CAAD,CAdL;IAgBPyS,UAAU,EAAE,CAAC;MACb5N,IAAI,EAAE7E,iDAAMA;IADC,CAAD,CAhBL;IAkBP0S,WAAW,EAAE,CAAC;MACd7N,IAAI,EAAE7E,iDAAMA;IADE,CAAD;EAlBN,CA5BvB;AAAA;AAiDA;;;AACA,MAAM8W,cAAN,SAA6BrF,mBAA7B,CAAiD;;AAEjDqF,cAAc,CAACxS,IAAf;EAAA;EAAA;IAAA,sEAloCsGrF,mEAkoCtG,CAA2G6X,cAA3G,SAA2GA,cAA3G;EAAA;AAAA;;AACAA,cAAc,CAAClS,IAAf,kBAnoCsG3F,+DAmoCtG;EAAA,MAA+F6X,cAA/F;EAAA;EAAA;EAAA;EAAA,WAnoCsG7X,wEAmoCtG;AAAA;;AACA;EAAA,mDApoCsGA,+DAooCtG,CAA2F6X,cAA3F,EAAuH,CAAC;IAC5GjS,IAAI,EAAE1F,oDADsG;IAE5G6F,IAAI,EAAE,CAAC;MACCI,QAAQ,EAAG,6CADZ;MAEC0D,IAAI,EAAE;QACF,SAAS;MADP,CAFP;MAKCF,QAAQ,EAAE;IALX,CAAD;EAFsG,CAAD,CAAvH;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMmO,aAAN,CAAoB;;AAEpBA,aAAa,CAACzS,IAAd;EAAA,iBAA0GyS,aAA1G;AAAA;;AACAA,aAAa,CAACC,IAAd,kBAzpCsG/X,8DAypCtG;EAAA,MAA2G8X;AAA3G;AAMAA,aAAa,CAACE,IAAd,kBA/pCsGhY,8DA+pCtG;EAAA,WAAqI,CAACkS,yCAAD,CAArI;EAAA,UAA4L,CAAC5P,yDAAD,EAAeI,mEAAf,EAAgCC,mEAAhC,EAAiDI,gEAAjD,CAA5L,EAA6PG,wEAA7P,EACQR,mEADR;AAAA;;AAEA;EAAA,mDAjqCsG1C,+DAiqCtG,CAA2F8X,aAA3F,EAAsH,CAAC;IAC3GlS,IAAI,EAAE3E,mDADqG;IAE3G8E,IAAI,EAAE,CAAC;MACCkS,OAAO,EAAE,CAAC3V,yDAAD,EAAeI,mEAAf,EAAgCC,mEAAhC,EAAiDI,gEAAjD,CADV;MAECmV,OAAO,EAAE,CACLhV,wEADK,EAELR,mEAFK,EAGL4O,OAHK,EAIL1K,WAJK,EAKLiR,cALK,EAML7R,cANK,CAFV;MAUCmS,YAAY,EAAE,CAAC7G,OAAD,EAAU1K,WAAV,EAAuBiR,cAAvB,EAAuC7R,cAAvC,CAVf;MAWCI,SAAS,EAAE,CAAC8L,yCAAD;IAXZ,CAAD;EAFqG,CAAD,CAAtH;AAAA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","sources":["./node_modules/@angular/material/fesm2015/menu.mjs"],"sourcesContent":["import * as i1 from '@angular/cdk/a11y';\nimport { FocusKeyManager, isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UP_ARROW, DOWN_ARROW, RIGHT_ARROW, LEFT_ARROW, ESCAPE, hasModifierKey, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Input, QueryList, EventEmitter, TemplateRef, ContentChildren, ViewChild, ContentChild, Output, Self, NgModule } from '@angular/core';\nimport { Subject, Subscription, merge, of, asapScheduler } from 'rxjs';\nimport { startWith, switchMap, take, takeUntil, filter, delay } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i2 from '@angular/material/core';\nimport { mixinDisableRipple, mixinDisabled, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport * as i3$1 from '@angular/cdk/bidi';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nconst matMenuAnimations = {\n    /**\n     * This animation controls the menu panel's entry and exit from the page.\n     *\n     * When the menu panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the menu panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformMenu: trigger('transformMenu', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)',\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1)',\n        }))),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 }))),\n    ]),\n    /**\n     * This animation fades in the background color and content of the menu panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // TODO(crisbeto): this is inside the `transformMenu`\n        // now. Remove next time we do breaking changes.\n        state('showing', style({ opacity: 1 })),\n        transition('void => *', [\n            style({ opacity: 0 }),\n            animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ]),\n};\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatMenuContent`. It serves\n * as alternative token to the actual `MatMenuContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_MENU_CONTENT = new InjectionToken('MatMenuContent');\nclass _MatMenuContentBase {\n    constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n        this._template = _template;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._document = _document;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Emits when the menu content has been attached. */\n        this._attached = new Subject();\n    }\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context = {}) {\n        var _a;\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n        }\n        const element = this._template.elementRef.nativeElement;\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode.insertBefore(this._outlet.outletElement, element);\n        // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n        // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n        // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n        // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n        // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n        // @breaking-change 9.0.0 Make change detector ref required\n        (_a = this._changeDetectorRef) === null || _a === void 0 ? void 0 : _a.markForCheck();\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\n_MatMenuContentBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatMenuContentBase, deps: [{ token: i0.TemplateRef }, { token: i0.ComponentFactoryResolver }, { token: i0.ApplicationRef }, { token: i0.Injector }, { token: i0.ViewContainerRef }, { token: DOCUMENT }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n_MatMenuContentBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatMenuContentBase, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatMenuContentBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.TemplateRef }, { type: i0.ComponentFactoryResolver }, { type: i0.ApplicationRef }, { type: i0.Injector }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i0.ChangeDetectorRef }];\n    } });\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nclass MatMenuContent extends _MatMenuContentBase {\n}\nMatMenuContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenuContent, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatMenuContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatMenuContent, selector: \"ng-template[matMenuContent]\", providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenuContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matMenuContent]',\n                    providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * @docs-private\n */\nfunction throwMatMenuMissingError() {\n    throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when a menu is assigned\n * to a trigger that is placed inside the same menu.\n * @docs-private\n */\nfunction throwMatMenuRecursiveError() {\n    throw Error(`matMenuTriggerFor: menu cannot contain its own trigger. Assign a menu that is ` +\n        `not a parent of the trigger or move the trigger outside of the menu.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * @docs-private\n */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n// Boilerplate for applying mixins to MatMenuItem.\n/** @docs-private */\nconst _MatMenuItemBase = mixinDisableRipple(mixinDisabled(class {\n}));\n/**\n * Single item inside of a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nclass MatMenuItem extends _MatMenuItemBase {\n    constructor(_elementRef, _document, _focusMonitor, _parentMenu, _changeDetectorRef) {\n        var _a;\n        super();\n        this._elementRef = _elementRef;\n        this._document = _document;\n        this._focusMonitor = _focusMonitor;\n        this._parentMenu = _parentMenu;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** ARIA role for the menu item. */\n        this.role = 'menuitem';\n        /** Stream that emits when the menu item is hovered. */\n        this._hovered = new Subject();\n        /** Stream that emits when the menu item is focused. */\n        this._focused = new Subject();\n        /** Whether the menu item is highlighted. */\n        this._highlighted = false;\n        /** Whether the menu item acts as a trigger for a sub-menu. */\n        this._triggersSubmenu = false;\n        (_a = _parentMenu === null || _parentMenu === void 0 ? void 0 : _parentMenu.addItem) === null || _a === void 0 ? void 0 : _a.call(_parentMenu, this);\n    }\n    /** Focuses the menu item. */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n        this._focused.next(this);\n    }\n    ngAfterViewInit() {\n        if (this._focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            this._focusMonitor.monitor(this._elementRef, false);\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n        this._focused.complete();\n    }\n    /** Used to set the `tabindex`. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Returns the host DOM element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    /** Emits to the hover stream. */\n    _handleMouseEnter() {\n        this._hovered.next(this);\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        var _a;\n        const clone = this._elementRef.nativeElement.cloneNode(true);\n        const icons = clone.querySelectorAll('mat-icon, .material-icons');\n        // Strip away icons so they don't show up in the text.\n        for (let i = 0; i < icons.length; i++) {\n            icons[i].remove();\n        }\n        return ((_a = clone.textContent) === null || _a === void 0 ? void 0 : _a.trim()) || '';\n    }\n    _setHighlighted(isHighlighted) {\n        var _a;\n        // We need to mark this for check for the case where the content is coming from a\n        // `matMenuContent` whose change detection tree is at the declaration position,\n        // not the insertion position. See #23175.\n        // @breaking-change 12.0.0 Remove null check for `_changeDetectorRef`.\n        this._highlighted = isHighlighted;\n        (_a = this._changeDetectorRef) === null || _a === void 0 ? void 0 : _a.markForCheck();\n    }\n    _hasFocus() {\n        return this._document && this._document.activeElement === this._getHostElement();\n    }\n}\nMatMenuItem.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenuItem, deps: [{ token: i0.ElementRef }, { token: DOCUMENT }, { token: i1.FocusMonitor }, { token: MAT_MENU_PANEL, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatMenuItem.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatMenuItem, selector: \"[mat-menu-item]\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", role: \"role\" }, host: { listeners: { \"click\": \"_checkDisabled($event)\", \"mouseenter\": \"_handleMouseEnter()\" }, properties: { \"attr.role\": \"role\", \"class.mat-menu-item\": \"true\", \"class.mat-menu-item-highlighted\": \"_highlighted\", \"class.mat-menu-item-submenu-trigger\": \"_triggersSubmenu\", \"attr.tabindex\": \"_getTabIndex()\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.disabled\": \"disabled || null\" }, classAttribute: \"mat-focus-indicator\" }, exportAs: [\"matMenuItem\"], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\\n<svg\\n  *ngIf=\\\"_triggersSubmenu\\\"\\n  class=\\\"mat-menu-submenu-icon\\\"\\n  viewBox=\\\"0 0 5 10\\\"\\n  focusable=\\\"false\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n\", directives: [{ type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenuItem, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-menu-item]', exportAs: 'matMenuItem', inputs: ['disabled', 'disableRipple'], host: {\n                        '[attr.role]': 'role',\n                        '[class.mat-menu-item]': 'true',\n                        '[class.mat-menu-item-highlighted]': '_highlighted',\n                        '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                        '[attr.tabindex]': '_getTabIndex()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.disabled]': 'disabled || null',\n                        'class': 'mat-focus-indicator',\n                        '(click)': '_checkDisabled($event)',\n                        '(mouseenter)': '_handleMouseEnter()',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\\n<svg\\n  *ngIf=\\\"_triggersSubmenu\\\"\\n  class=\\\"mat-menu-submenu-icon\\\"\\n  viewBox=\\\"0 0 5 10\\\"\\n  focusable=\\\"false\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i1.FocusMonitor }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_MENU_PANEL]\n                    }, {\n                        type: Optional\n                    }] }, { type: i0.ChangeDetectorRef }];\n    }, propDecorators: { role: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-menu`. */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\nlet menuPanelUid = 0;\n/** Base class with all of the `MatMenu` functionality. */\nclass _MatMenuBase {\n    constructor(_elementRef, _ngZone, _defaultOptions, \n    // @breaking-change 15.0.0 `_changeDetectorRef` to become a required parameter.\n    _changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._xPosition = this._defaultOptions.xPosition;\n        this._yPosition = this._defaultOptions.yPosition;\n        /** Only the direct descendant menu items. */\n        this._directDescendantItems = new QueryList();\n        /** Subscription to tab events on the menu panel */\n        this._tabSubscription = Subscription.EMPTY;\n        /** Config object to be passed into the menu's ngClass */\n        this._classList = {};\n        /** Current state of the panel animation. */\n        this._panelAnimationState = 'void';\n        /** Emits whenever an animation on the menu completes. */\n        this._animationDone = new Subject();\n        /** Class or list of classes to be added to the overlay panel. */\n        this.overlayPanelClass = this._defaultOptions.overlayPanelClass || '';\n        /** Class to be added to the backdrop element. */\n        this.backdropClass = this._defaultOptions.backdropClass;\n        this._overlapTrigger = this._defaultOptions.overlapTrigger;\n        this._hasBackdrop = this._defaultOptions.hasBackdrop;\n        /** Event emitted when the menu is closed. */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted when the menu is closed.\n         * @deprecated Switch to `closed` instead\n         * @breaking-change 8.0.0\n         */\n        this.close = this.closed;\n        this.panelId = `mat-menu-panel-${menuPanelUid++}`;\n    }\n    /** Position of the menu in the X axis. */\n    get xPosition() {\n        return this._xPosition;\n    }\n    set xPosition(value) {\n        if (value !== 'before' &&\n            value !== 'after' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n    /** Position of the menu in the Y axis. */\n    get yPosition() {\n        return this._yPosition;\n    }\n    set yPosition(value) {\n        if (value !== 'above' && value !== 'below' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n    /** Whether the menu should overlap its trigger. */\n    get overlapTrigger() {\n        return this._overlapTrigger;\n    }\n    set overlapTrigger(value) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n    /** Whether the menu has a backdrop. */\n    get hasBackdrop() {\n        return this._hasBackdrop;\n    }\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param classes list of class names\n     */\n    set panelClass(classes) {\n        const previousPanelClass = this._previousPanelClass;\n        if (previousPanelClass && previousPanelClass.length) {\n            previousPanelClass.split(' ').forEach((className) => {\n                this._classList[className] = false;\n            });\n        }\n        this._previousPanelClass = classes;\n        if (classes && classes.length) {\n            classes.split(' ').forEach((className) => {\n                this._classList[className] = true;\n            });\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * @breaking-change 8.0.0\n     */\n    get classList() {\n        return this.panelClass;\n    }\n    set classList(classes) {\n        this.panelClass = classes;\n    }\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n    ngAfterContentInit() {\n        this._updateDirectDescendants();\n        this._keyManager = new FocusKeyManager(this._directDescendantItems)\n            .withWrap()\n            .withTypeAhead()\n            .withHomeAndEnd();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n        // If a user manually (programmatically) focuses a menu item, we need to reflect that focus\n        // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n        // is internal and we know that it gets completed on destroy.\n        this._directDescendantItems.changes\n            .pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._focused))))\n            .subscribe(focusedItem => this._keyManager.updateActiveItem(focusedItem));\n        this._directDescendantItems.changes.subscribe((itemsList) => {\n            var _a;\n            // Move focus to another item, if the active item is removed from the list.\n            // We need to debounce the callback, because multiple items might be removed\n            // in quick succession.\n            const manager = this._keyManager;\n            if (this._panelAnimationState === 'enter' && ((_a = manager.activeItem) === null || _a === void 0 ? void 0 : _a._hasFocus())) {\n                const items = itemsList.toArray();\n                const index = Math.max(0, Math.min(items.length - 1, manager.activeItemIndex || 0));\n                if (items[index] && !items[index].disabled) {\n                    manager.setActiveItem(index);\n                }\n                else {\n                    manager.setNextItemActive();\n                }\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._directDescendantItems.destroy();\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n    /** Stream that emits whenever the hovered menu item changes. */\n    _hovered() {\n        // Coerce the `changes` property because Angular types it as `Observable<any>`\n        const itemChanges = this._directDescendantItems.changes;\n        return itemChanges.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._hovered))));\n    }\n    /*\n     * Registers a menu item with the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    addItem(_item) { }\n    /**\n     * Removes an item from the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    removeItem(_item) { }\n    /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        switch (keyCode) {\n            case ESCAPE:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this.closed.emit('keydown');\n                }\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    manager.setFocusOrigin('keyboard');\n                }\n                manager.onKeydown(event);\n                return;\n        }\n        // Don't allow the event to propagate if we've already handled it, or it may\n        // end up reaching other overlays that were opened earlier (see #22694).\n        event.stopPropagation();\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin = 'program') {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => this._focusFirstItem(origin));\n        }\n        else {\n            this._focusFirstItem(origin);\n        }\n    }\n    /**\n     * Actual implementation that focuses the first item. Needs to be separated\n     * out so we don't repeat the same logic in the public `focusFirstItem` method.\n     */\n    _focusFirstItem(origin) {\n        const manager = this._keyManager;\n        manager.setFocusOrigin(origin).setFirstItemActive();\n        // If there's no active item at this point, it means that all the items are disabled.\n        // Move focus to the menu panel so keyboard events like Escape still work. Also this will\n        // give _some_ feedback to screen readers.\n        if (!manager.activeItem && this._directDescendantItems.length) {\n            let element = this._directDescendantItems.first._getHostElement().parentElement;\n            // Because the `mat-menu` is at the DOM insertion point, not inside the overlay, we don't\n            // have a nice way of getting a hold of the menu panel. We can't use a `ViewChild` either\n            // because the panel is inside an `ng-template`. We work around it by starting from one of\n            // the items and walking up the DOM.\n            while (element) {\n                if (element.getAttribute('role') === 'menu') {\n                    element.focus();\n                    break;\n                }\n                else {\n                    element = element.parentElement;\n                }\n            }\n        }\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Sets the menu panel elevation.\n     * @param depth Number of parent menus that come before the menu.\n     */\n    setElevation(depth) {\n        // The elevation starts at the base and increases by one for each level.\n        // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n        const elevation = Math.min(this._baseElevation + depth, 24);\n        const newElevation = `${this._elevationPrefix}${elevation}`;\n        const customElevation = Object.keys(this._classList).find(className => {\n            return className.startsWith(this._elevationPrefix);\n        });\n        if (!customElevation || customElevation === this._previousElevation) {\n            if (this._previousElevation) {\n                this._classList[this._previousElevation] = false;\n            }\n            this._classList[newElevation] = true;\n            this._previousElevation = newElevation;\n        }\n    }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the menu along the x axis.\n     * @param posY Position of the menu along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n        var _a;\n        const classes = this._classList;\n        classes['mat-menu-before'] = posX === 'before';\n        classes['mat-menu-after'] = posX === 'after';\n        classes['mat-menu-above'] = posY === 'above';\n        classes['mat-menu-below'] = posY === 'below';\n        // @breaking-change 15.0.0 Remove null check for `_changeDetectorRef`.\n        (_a = this._changeDetectorRef) === null || _a === void 0 ? void 0 : _a.markForCheck();\n    }\n    /** Starts the enter animation. */\n    _startAnimation() {\n        // @breaking-change 8.0.0 Combine with _resetAnimation.\n        this._panelAnimationState = 'enter';\n    }\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        // @breaking-change 8.0.0 Combine with _startAnimation.\n        this._panelAnimationState = 'void';\n    }\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n    }\n    _onAnimationStart(event) {\n        this._isAnimating = true;\n        // Scroll the content element to the top as soon as the animation starts. This is necessary,\n        // because we move focus to the first item while it's still being animated, which can throw\n        // the browser off when it determines the scroll position. Alternatively we can move focus\n        // when the animation is done, however moving focus asynchronously will interrupt screen\n        // readers which are in the process of reading out the menu already. We take the `element`\n        // from the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     */\n    _updateDirectDescendants() {\n        this._allItems.changes\n            .pipe(startWith(this._allItems))\n            .subscribe((items) => {\n            this._directDescendantItems.reset(items.filter(item => item._parentMenu === this));\n            this._directDescendantItems.notifyOnChanges();\n        });\n    }\n}\n_MatMenuBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatMenuBase, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: MAT_MENU_DEFAULT_OPTIONS }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n_MatMenuBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatMenuBase, inputs: { backdropClass: \"backdropClass\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], xPosition: \"xPosition\", yPosition: \"yPosition\", overlapTrigger: \"overlapTrigger\", hasBackdrop: \"hasBackdrop\", panelClass: [\"class\", \"panelClass\"], classList: \"classList\" }, outputs: { closed: \"closed\", close: \"close\" }, queries: [{ propertyName: \"lazyContent\", first: true, predicate: MAT_MENU_CONTENT, descendants: true }, { propertyName: \"_allItems\", predicate: MatMenuItem, descendants: true }, { propertyName: \"items\", predicate: MatMenuItem }], viewQueries: [{ propertyName: \"templateRef\", first: true, predicate: TemplateRef, descendants: true }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatMenuBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_MENU_DEFAULT_OPTIONS]\n                    }] }, { type: i0.ChangeDetectorRef }];\n    }, propDecorators: { _allItems: [{\n                type: ContentChildren,\n                args: [MatMenuItem, { descendants: true }]\n            }], backdropClass: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], xPosition: [{\n                type: Input\n            }], yPosition: [{\n                type: Input\n            }], templateRef: [{\n                type: ViewChild,\n                args: [TemplateRef]\n            }], items: [{\n                type: ContentChildren,\n                args: [MatMenuItem, { descendants: false }]\n            }], lazyContent: [{\n                type: ContentChild,\n                args: [MAT_MENU_CONTENT]\n            }], overlapTrigger: [{\n                type: Input\n            }], hasBackdrop: [{\n                type: Input\n            }], panelClass: [{\n                type: Input,\n                args: ['class']\n            }], classList: [{\n                type: Input\n            }], closed: [{\n                type: Output\n            }], close: [{\n                type: Output\n            }] } });\n/** @docs-public MatMenu */\nclass MatMenu extends _MatMenuBase {\n    constructor(elementRef, ngZone, defaultOptions, changeDetectorRef) {\n        super(elementRef, ngZone, defaultOptions, changeDetectorRef);\n        this._elevationPrefix = 'mat-elevation-z';\n        this._baseElevation = 4;\n    }\n}\nMatMenu.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenu, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: MAT_MENU_DEFAULT_OPTIONS }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatMenu.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatMenu, selector: \"mat-menu\", host: { properties: { \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"attr.aria-describedby\": \"null\" } }, providers: [{ provide: MAT_MENU_PANEL, useExisting: MatMenu }], exportAs: [\"matMenu\"], usesInheritance: true, ngImport: i0, template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]::before{display:block;position:absolute;content:\\\"\\\";top:0;left:0;bottom:0;right:0}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-menu-submenu-icon{fill:CanvasText}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], directives: [{ type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], animations: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenu, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-menu', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, exportAs: 'matMenu', host: {\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[attr.aria-describedby]': 'null',\n                    }, animations: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems], providers: [{ provide: MAT_MENU_PANEL, useExisting: MatMenu }], template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]::before{display:block;position:absolute;content:\\\"\\\";top:0;left:0;bottom:0;right:0}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-menu-submenu-icon{fill:CanvasText}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_MENU_DEFAULT_OPTIONS]\n                    }] }, { type: i0.ChangeDetectorRef }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that determines the scroll handling while the menu is open. */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/** @docs-private */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/** Default top padding of the menu panel. */\nconst MENU_PANEL_TOP_PADDING = 8;\n/** Options for binding a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\nclass _MatMenuTriggerBase {\n    constructor(_overlay, _element, _viewContainerRef, scrollStrategy, parentMenu, \n    // `MatMenuTrigger` is commonly used in combination with a `MatMenuItem`.\n    // tslint:disable-next-line: lightweight-tokens\n    _menuItemInstance, _dir, _focusMonitor, _ngZone) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        this._focusMonitor = _focusMonitor;\n        this._ngZone = _ngZone;\n        this._overlayRef = null;\n        this._menuOpen = false;\n        this._closingActionsSubscription = Subscription.EMPTY;\n        this._hoverSubscription = Subscription.EMPTY;\n        this._menuCloseSubscription = Subscription.EMPTY;\n        /**\n         * Handles touch start events on the trigger.\n         * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n         */\n        this._handleTouchStart = (event) => {\n            if (!isFakeTouchstartFromScreenReader(event)) {\n                this._openedBy = 'touch';\n            }\n        };\n        // Tracking input type is necessary so it's possible to only auto-focus\n        // the first item of the list when the menu is opened via the keyboard\n        this._openedBy = undefined;\n        /**\n         * Whether focus should be restored when the menu is closed.\n         * Note that disabling this option can have accessibility implications\n         * and it's up to you to manage focus, if you decide to turn it off.\n         */\n        this.restoreFocus = true;\n        /** Event emitted when the associated menu is opened. */\n        this.menuOpened = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is opened.\n         * @deprecated Switch to `menuOpened` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuOpen = this.menuOpened;\n        /** Event emitted when the associated menu is closed. */\n        this.menuClosed = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is closed.\n         * @deprecated Switch to `menuClosed` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuClose = this.menuClosed;\n        this._scrollStrategy = scrollStrategy;\n        this._parentMaterialMenu = parentMenu instanceof _MatMenuBase ? parentMenu : undefined;\n        _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        if (_menuItemInstance) {\n            _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n        }\n    }\n    /**\n     * @deprecated\n     * @breaking-change 8.0.0\n     */\n    get _deprecatedMatMenuTriggerFor() {\n        return this.menu;\n    }\n    set _deprecatedMatMenuTriggerFor(v) {\n        this.menu = v;\n    }\n    /** References the menu instance that the trigger is associated with. */\n    get menu() {\n        return this._menu;\n    }\n    set menu(menu) {\n        if (menu === this._menu) {\n            return;\n        }\n        this._menu = menu;\n        this._menuCloseSubscription.unsubscribe();\n        if (menu) {\n            if (menu === this._parentMaterialMenu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwMatMenuRecursiveError();\n            }\n            this._menuCloseSubscription = menu.close.subscribe((reason) => {\n                this._destroyMenu(reason);\n                // If a click closed the menu, we should close the entire chain of nested menus.\n                if ((reason === 'click' || reason === 'tab') && this._parentMaterialMenu) {\n                    this._parentMaterialMenu.closed.emit(reason);\n                }\n            });\n        }\n    }\n    ngAfterContentInit() {\n        this._checkMenu();\n        this._handleHover();\n    }\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        this._menuCloseSubscription.unsubscribe();\n        this._closingActionsSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n    /** Whether the menu is open. */\n    get menuOpen() {\n        return this._menuOpen;\n    }\n    /** The text direction of the containing app. */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the menu triggers a sub-menu or a top-level one. */\n    triggersSubmenu() {\n        return !!(this._menuItemInstance && this._parentMaterialMenu);\n    }\n    /** Toggles the menu between the open and closed states. */\n    toggleMenu() {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /** Opens the menu. */\n    openMenu() {\n        if (this._menuOpen) {\n            return;\n        }\n        this._checkMenu();\n        const overlayRef = this._createOverlay();\n        const overlayConfig = overlayRef.getConfig();\n        const positionStrategy = overlayConfig.positionStrategy;\n        this._setPosition(positionStrategy);\n        overlayConfig.hasBackdrop =\n            this.menu.hasBackdrop == null ? !this.triggersSubmenu() : this.menu.hasBackdrop;\n        overlayRef.attach(this._getPortal());\n        if (this.menu.lazyContent) {\n            this.menu.lazyContent.attach(this.menuData);\n        }\n        this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n        this._initMenu();\n        if (this.menu instanceof _MatMenuBase) {\n            this.menu._startAnimation();\n            this.menu._directDescendantItems.changes.pipe(takeUntil(this.menu.close)).subscribe(() => {\n                // Re-adjust the position without locking when the amount of items\n                // changes so that the overlay is allowed to pick a new optimal position.\n                positionStrategy.withLockedPosition(false).reapplyLastPosition();\n                positionStrategy.withLockedPosition(true);\n            });\n        }\n    }\n    /** Closes the menu. */\n    closeMenu() {\n        this.menu.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param origin Source of the menu trigger's focus.\n     */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Updates the position of the menu to ensure that it fits all options within the viewport.\n     */\n    updatePosition() {\n        var _a;\n        (_a = this._overlayRef) === null || _a === void 0 ? void 0 : _a.updatePosition();\n    }\n    /** Closes the menu and does the necessary cleanup. */\n    _destroyMenu(reason) {\n        if (!this._overlayRef || !this.menuOpen) {\n            return;\n        }\n        const menu = this.menu;\n        this._closingActionsSubscription.unsubscribe();\n        this._overlayRef.detach();\n        // Always restore focus if the user is navigating using the keyboard or the menu was opened\n        // programmatically. We don't restore for non-root triggers, because it can prevent focus\n        // from making it back to the root trigger when closing a long chain of menus by clicking\n        // on the backdrop.\n        if (this.restoreFocus && (reason === 'keydown' || !this._openedBy || !this.triggersSubmenu())) {\n            this.focus(this._openedBy);\n        }\n        this._openedBy = undefined;\n        if (menu instanceof _MatMenuBase) {\n            menu._resetAnimation();\n            if (menu.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                menu._animationDone\n                    .pipe(filter(event => event.toState === 'void'), take(1), \n                // Interrupt if the content got re-attached.\n                takeUntil(menu.lazyContent._attached))\n                    .subscribe({\n                    next: () => menu.lazyContent.detach(),\n                    // No matter whether the content got re-attached, reset the menu.\n                    complete: () => this._setIsMenuOpen(false),\n                });\n            }\n            else {\n                this._setIsMenuOpen(false);\n            }\n        }\n        else {\n            this._setIsMenuOpen(false);\n            if (menu.lazyContent) {\n                menu.lazyContent.detach();\n            }\n        }\n    }\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     */\n    _initMenu() {\n        this.menu.parentMenu = this.triggersSubmenu() ? this._parentMaterialMenu : undefined;\n        this.menu.direction = this.dir;\n        this._setMenuElevation();\n        this.menu.focusFirstItem(this._openedBy || 'program');\n        this._setIsMenuOpen(true);\n    }\n    /** Updates the menu elevation based on the amount of parent menus that it has. */\n    _setMenuElevation() {\n        if (this.menu.setElevation) {\n            let depth = 0;\n            let parentMenu = this.menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            this.menu.setElevation(depth);\n        }\n    }\n    // set state rather than toggle to support triggers sharing a menu\n    _setIsMenuOpen(isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n            this._menuItemInstance._setHighlighted(isOpen);\n        }\n    }\n    /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     */\n    _checkMenu() {\n        if (!this.menu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuMissingError();\n        }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     */\n    _createOverlay() {\n        if (!this._overlayRef) {\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy);\n            this._overlayRef = this._overlay.create(config);\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `MatMenuPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n        return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._overlay\n                .position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withGrowAfterOpen()\n                .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n            backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            panelClass: this.menu.overlayPanelClass,\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir,\n        });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    _subscribeToPositions(position) {\n        if (this.menu.setPositionClasses) {\n            position.positionChanges.subscribe(change => {\n                const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n                // @breaking-change 15.0.0 Remove null check for `ngZone`.\n                // `positionChanges` fires outside of the `ngZone` and `setPositionClasses` might be\n                // updating something in the view so we need to bring it back in.\n                if (this._ngZone) {\n                    this._ngZone.run(() => this.menu.setPositionClasses(posX, posY));\n                }\n                else {\n                    this.menu.setPositionClasses(posX, posY);\n                }\n            });\n        }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    _setPosition(positionStrategy) {\n        let [originX, originFallbackX] = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n        let [overlayY, overlayFallbackY] = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        let offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n        }\n        else if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX, originY, overlayX, overlayY, offsetY },\n            { originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY },\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY,\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY,\n            },\n        ]);\n    }\n    /** Returns a stream that emits whenever an action that should close the menu occurs. */\n    _menuClosingActions() {\n        const backdrop = this._overlayRef.backdropClick();\n        const detachments = this._overlayRef.detachments();\n        const parentClose = this._parentMaterialMenu ? this._parentMaterialMenu.closed : of();\n        const hover = this._parentMaterialMenu\n            ? this._parentMaterialMenu._hovered().pipe(filter(active => active !== this._menuItemInstance), filter(() => this._menuOpen))\n            : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n    /** Handles mouse presses on the trigger. */\n    _handleMousedown(event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            // Since right or middle button clicks won't trigger the `click` event,\n            // we shouldn't consider the menu as opened by mouse in those cases.\n            this._openedBy = event.button === 0 ? 'mouse' : undefined;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    }\n    /** Handles key presses on the trigger. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        // Pressing enter on the trigger will trigger the click handler later.\n        if (keyCode === ENTER || keyCode === SPACE) {\n            this._openedBy = 'keyboard';\n        }\n        if (this.triggersSubmenu() &&\n            ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n                (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this._openedBy = 'keyboard';\n            this.openMenu();\n        }\n    }\n    /** Handles click events on the trigger. */\n    _handleClick(event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    }\n    /** Handles the cases where the user hovers over the trigger. */\n    _handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersSubmenu() || !this._parentMaterialMenu) {\n            return;\n        }\n        this._hoverSubscription = this._parentMaterialMenu\n            ._hovered()\n            // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n            // with different data and triggers), we have to delay it by a tick to ensure that\n            // it won't be closed immediately after it is opened.\n            .pipe(filter(active => active === this._menuItemInstance && !active.disabled), delay(0, asapScheduler))\n            .subscribe(() => {\n            this._openedBy = 'mouse';\n            // If the same menu is used between multiple triggers, it might still be animating\n            // while the new trigger tries to re-open it. Wait for the animation to finish\n            // before doing so. Also interrupt if the user moves to another item.\n            if (this.menu instanceof _MatMenuBase && this.menu._isAnimating) {\n                // We need the `delay(0)` here in order to avoid\n                // 'changed after checked' errors in some cases. See #12194.\n                this.menu._animationDone\n                    .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMaterialMenu._hovered()))\n                    .subscribe(() => this.openMenu());\n            }\n            else {\n                this.openMenu();\n            }\n        });\n    }\n    /** Gets the portal that should be attached to the overlay. */\n    _getPortal() {\n        // Note that we can avoid this check by keeping the portal on the menu panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `MatMenuPanel`, making it harder to consume.\n        if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n        }\n        return this._portal;\n    }\n}\n_MatMenuTriggerBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatMenuTriggerBase, deps: [{ token: i1$1.Overlay }, { token: i0.ElementRef }, { token: i0.ViewContainerRef }, { token: MAT_MENU_SCROLL_STRATEGY }, { token: MAT_MENU_PANEL, optional: true }, { token: MatMenuItem, optional: true, self: true }, { token: i3$1.Directionality, optional: true }, { token: i1.FocusMonitor }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\n_MatMenuTriggerBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatMenuTriggerBase, inputs: { _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"], menu: [\"matMenuTriggerFor\", \"menu\"], menuData: [\"matMenuTriggerData\", \"menuData\"], restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"] }, outputs: { menuOpened: \"menuOpened\", onMenuOpen: \"onMenuOpen\", menuClosed: \"menuClosed\", onMenuClose: \"onMenuClose\" }, host: { attributes: { \"aria-haspopup\": \"true\" }, listeners: { \"click\": \"_handleClick($event)\", \"mousedown\": \"_handleMousedown($event)\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.aria-expanded\": \"menuOpen || null\", \"attr.aria-controls\": \"menuOpen ? menu.panelId : null\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatMenuTriggerBase, decorators: [{\n            type: Directive,\n            args: [{\n                    host: {\n                        'aria-haspopup': 'true',\n                        '[attr.aria-expanded]': 'menuOpen || null',\n                        '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n                        '(click)': '_handleClick($event)',\n                        '(mousedown)': '_handleMousedown($event)',\n                        '(keydown)': '_handleKeydown($event)',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i1$1.Overlay }, { type: i0.ElementRef }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_MENU_SCROLL_STRATEGY]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_MENU_PANEL]\n                    }, {\n                        type: Optional\n                    }] }, { type: MatMenuItem, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }] }, { type: i3$1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i1.FocusMonitor }, { type: i0.NgZone }];\n    }, propDecorators: { _deprecatedMatMenuTriggerFor: [{\n                type: Input,\n                args: ['mat-menu-trigger-for']\n            }], menu: [{\n                type: Input,\n                args: ['matMenuTriggerFor']\n            }], menuData: [{\n                type: Input,\n                args: ['matMenuTriggerData']\n            }], restoreFocus: [{\n                type: Input,\n                args: ['matMenuTriggerRestoreFocus']\n            }], menuOpened: [{\n                type: Output\n            }], onMenuOpen: [{\n                type: Output\n            }], menuClosed: [{\n                type: Output\n            }], onMenuClose: [{\n                type: Output\n            }] } });\n/** Directive applied to an element that should trigger a `mat-menu`. */\nclass MatMenuTrigger extends _MatMenuTriggerBase {\n}\nMatMenuTrigger.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenuTrigger, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatMenuTrigger.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatMenuTrigger, selector: \"[mat-menu-trigger-for], [matMenuTriggerFor]\", host: { classAttribute: \"mat-menu-trigger\" }, exportAs: [\"matMenuTrigger\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenuTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                    host: {\n                        'class': 'mat-menu-trigger',\n                    },\n                    exportAs: 'matMenuTrigger',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatMenuModule {\n}\nMatMenuModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenuModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatMenuModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenuModule, declarations: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent], imports: [CommonModule, MatCommonModule, MatRippleModule, OverlayModule], exports: [CdkScrollableModule,\n        MatCommonModule,\n        MatMenu,\n        MatMenuItem,\n        MatMenuTrigger,\n        MatMenuContent] });\nMatMenuModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenuModule, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[CommonModule, MatCommonModule, MatRippleModule, OverlayModule], CdkScrollableModule,\n        MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenuModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule, MatRippleModule, OverlayModule],\n                    exports: [\n                        CdkScrollableModule,\n                        MatCommonModule,\n                        MatMenu,\n                        MatMenuItem,\n                        MatMenuTrigger,\n                        MatMenuContent,\n                    ],\n                    declarations: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent],\n                    providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MENU_CONTENT, MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, _MatMenuBase, _MatMenuContentBase, _MatMenuTriggerBase, fadeInItems, matMenuAnimations, transformMenu };\n"],"names":["i1","FocusKeyManager","isFakeTouchstartFromScreenReader","isFakeMousedownFromScreenReader","coerceBooleanProperty","UP_ARROW","DOWN_ARROW","RIGHT_ARROW","LEFT_ARROW","ESCAPE","hasModifierKey","ENTER","SPACE","i0","InjectionToken","Directive","Inject","Component","ChangeDetectionStrategy","ViewEncapsulation","Optional","Input","QueryList","EventEmitter","TemplateRef","ContentChildren","ViewChild","ContentChild","Output","Self","NgModule","Subject","Subscription","merge","of","asapScheduler","startWith","switchMap","take","takeUntil","filter","delay","trigger","state","style","transition","animate","TemplatePortal","DomPortalOutlet","i3","DOCUMENT","CommonModule","i2","mixinDisableRipple","mixinDisabled","MatCommonModule","MatRippleModule","i1$1","Overlay","OverlayConfig","OverlayModule","normalizePassiveListenerOptions","i3$1","CdkScrollableModule","matMenuAnimations","transformMenu","opacity","transform","fadeInItems","MAT_MENU_CONTENT","_MatMenuContentBase","constructor","_template","_componentFactoryResolver","_appRef","_injector","_viewContainerRef","_document","_changeDetectorRef","_attached","attach","context","_a","_portal","detach","_outlet","createElement","element","elementRef","nativeElement","parentNode","insertBefore","outletElement","markForCheck","next","isAttached","ngOnDestroy","dispose","ɵfac","ComponentFactoryResolver","ApplicationRef","Injector","ViewContainerRef","ChangeDetectorRef","ɵdir","type","undefined","decorators","args","MatMenuContent","provide","useExisting","selector","providers","throwMatMenuMissingError","Error","throwMatMenuInvalidPositionX","throwMatMenuInvalidPositionY","throwMatMenuRecursiveError","MAT_MENU_PANEL","_MatMenuItemBase","MatMenuItem","_elementRef","_focusMonitor","_parentMenu","role","_hovered","_focused","_highlighted","_triggersSubmenu","addItem","call","focus","origin","options","focusVia","_getHostElement","ngAfterViewInit","monitor","stopMonitoring","removeItem","complete","_getTabIndex","disabled","_checkDisabled","event","preventDefault","stopPropagation","_handleMouseEnter","getLabel","clone","cloneNode","icons","querySelectorAll","i","length","remove","textContent","trim","_setHighlighted","isHighlighted","_hasFocus","activeElement","ElementRef","FocusMonitor","ɵcmp","MatRipple","NgIf","exportAs","inputs","host","changeDetection","OnPush","encapsulation","None","template","MAT_MENU_DEFAULT_OPTIONS","providedIn","factory","MAT_MENU_DEFAULT_OPTIONS_FACTORY","overlapTrigger","xPosition","yPosition","backdropClass","menuPanelUid","_MatMenuBase","_ngZone","_defaultOptions","_xPosition","_yPosition","_directDescendantItems","_tabSubscription","EMPTY","_classList","_panelAnimationState","_animationDone","overlayPanelClass","_overlapTrigger","_hasBackdrop","hasBackdrop","closed","close","panelId","value","ngDevMode","setPositionClasses","panelClass","classes","previousPanelClass","_previousPanelClass","split","forEach","className","classList","ngOnInit","ngAfterContentInit","_updateDirectDescendants","_keyManager","withWrap","withTypeAhead","withHomeAndEnd","tabOut","subscribe","emit","changes","pipe","items","map","item","focusedItem","updateActiveItem","itemsList","manager","activeItem","toArray","index","Math","max","min","activeItemIndex","setActiveItem","setNextItemActive","destroy","unsubscribe","itemChanges","_item","_handleKeydown","keyCode","parentMenu","direction","setFocusOrigin","onKeydown","focusFirstItem","lazyContent","onStable","_focusFirstItem","setFirstItemActive","first","parentElement","getAttribute","resetActiveItem","setElevation","depth","elevation","_baseElevation","newElevation","_elevationPrefix","customElevation","Object","keys","find","startsWith","_previousElevation","posX","posY","_startAnimation","_resetAnimation","_onAnimationDone","_isAnimating","_onAnimationStart","toState","scrollTop","_allItems","reset","notifyOnChanges","NgZone","descendants","ariaLabel","ariaLabelledby","ariaDescribedby","templateRef","MatMenu","ngZone","defaultOptions","changeDetectorRef","NgClass","animations","styles","MAT_MENU_SCROLL_STRATEGY","MAT_MENU_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","MENU_PANEL_TOP_PADDING","passiveEventListenerOptions","passive","_MatMenuTriggerBase","_overlay","_element","scrollStrategy","_menuItemInstance","_dir","_overlayRef","_menuOpen","_closingActionsSubscription","_hoverSubscription","_menuCloseSubscription","_handleTouchStart","_openedBy","restoreFocus","menuOpened","onMenuOpen","menuClosed","onMenuClose","_scrollStrategy","_parentMaterialMenu","addEventListener","triggersSubmenu","_deprecatedMatMenuTriggerFor","menu","v","_menu","reason","_destroyMenu","_checkMenu","_handleHover","removeEventListener","menuOpen","dir","toggleMenu","closeMenu","openMenu","overlayRef","_createOverlay","overlayConfig","getConfig","positionStrategy","_setPosition","_getPortal","menuData","_menuClosingActions","_initMenu","withLockedPosition","reapplyLastPosition","updatePosition","_setIsMenuOpen","_setMenuElevation","isOpen","config","_getOverlayConfig","_subscribeToPositions","create","keydownEvents","position","flexibleConnectedTo","withGrowAfterOpen","withTransformOriginOn","positionChanges","change","connectionPair","overlayX","overlayY","run","originX","originFallbackX","overlayFallbackY","originY","originFallbackY","overlayFallbackX","offsetY","withPositions","backdrop","backdropClick","detachments","parentClose","hover","active","_handleMousedown","button","_handleClick","Directionality","MatMenuTrigger","MatMenuModule","ɵmod","ɵinj","imports","exports","declarations"],"sourceRoot":"webpack:///"}