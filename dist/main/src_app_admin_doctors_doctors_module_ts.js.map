{"version":3,"file":"src_app_admin_doctors_doctors_module_ts.js","mappings":"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","sources":["./src/app/admin/doctors/add-doctor/add-doctor.component.ts","./src/app/admin/doctors/add-doctor/add-doctor.component.html","./src/app/admin/doctors/alldoctors/alldoctors.component.ts","./src/app/admin/doctors/alldoctors/alldoctors.component.html","./src/app/admin/doctors/alldoctors/dialogs/delete/delete.component.ts","./src/app/admin/doctors/alldoctors/dialogs/delete/delete.component.html","./src/app/admin/doctors/alldoctors/dialogs/form-dialog/form-dialog.component.ts","./src/app/admin/doctors/alldoctors/dialogs/form-dialog/form-dialog.component.html","./src/app/admin/doctors/alldoctors/doctors.model.ts","./src/app/admin/doctors/alldoctors/doctors.service.ts","./src/app/admin/doctors/doctor-profile/doctor-profile.component.ts","./src/app/admin/doctors/doctor-profile/doctor-profile.component.html","./src/app/admin/doctors/doctors-routing.module.ts","./src/app/admin/doctors/doctors.module.ts","./src/app/admin/doctors/edit-doctor/edit-doctor.component.ts","./src/app/admin/doctors/edit-doctor/edit-doctor.component.html","./node_modules/@angular/material/fesm2015/toolbar.mjs"],"sourcesContent":["import { Component } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n@Component({\n  selector: \"app-add-doctor\",\n  templateUrl: \"./add-doctor.component.html\",\n  styleUrls: [\"./add-doctor.component.sass\"],\n})\nexport class AddDoctorComponent {\n  docForm: FormGroup;\n  hide3 = true;\n  agree3 = false;\n  constructor(private fb: FormBuilder) {\n    this.docForm = this.fb.group({\n      first: [\"\", [Validators.required, Validators.pattern(\"[a-zA-Z]+\")]],\n      last: [\"\"],\n      gender: [\"\", [Validators.required]],\n      mobile: [\"\", [Validators.required]],\n      password: [\"\", [Validators.required]],\n      conformPassword: [\"\", [Validators.required]],\n      designation: [\"\"],\n      department: [\"\"],\n      address: [\"\"],\n      email: [\n        \"\",\n        [Validators.required, Validators.email, Validators.minLength(5)],\n      ],\n      dob: [\"\", [Validators.required]],\n      education: [\"\"],\n      uploadImg: [\"\"],\n    });\n  }\n  onSubmit() {\n    console.log(\"Form Value\", this.docForm.value);\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Add Doctor'\" [items]=\"['Doctors']\" [active_item]=\"'Add Doctor'\"></app-breadcrumb>\n    </div>\n    <div class=\"row clearfix\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"header\">\n            <h2>Add Doctor</h2>\n\n          </div>\n          <div class=\"body\">\n            <form class=\"m-4\" [formGroup]=\"docForm\" (ngSubmit)=\"onSubmit()\">\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>First name</mat-label>\n                    <input matInput formControlName=\"first\" required>\n                    <mat-error *ngIf=\"docForm.get('first').hasError('required')\">\n                      First name is required\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Last name</mat-label>\n                    <input matInput formControlName=\"last\">\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Gender</mat-label>\n                    <mat-select formControlName=\"gender\" required>\n                      <mat-option [value]=\"'Male'\">\n                        Male\n                      </mat-option>\n                      <mat-option [value]=\"'Female'\">\n                        Female\n                      </mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"docForm.get('gender').hasError('required')\">\n                      Gender is required\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Mobile</mat-label>\n                    <input matInput formControlName=\"mobile\" type=\"number\" required>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Password</mat-label>\n                    <input matInput formControlName=\"password\" type=\"password\" required>\n                    <mat-error *ngIf=\"docForm.get('password').hasError('required')\">\n                      password is required\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Re-Enter Password</mat-label>\n                    <input matInput formControlName=\"conformPassword\" type=\"password\" required>\n                    <mat-error *ngIf=\"docForm.get('conformPassword').hasError('required')\">\n                      Re-Enter password is required\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Designation</mat-label>\n                    <input matInput formControlName=\"designation\">\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Select Department</mat-label>\n                    <mat-select formControlName=\"department\" required>\n                      <mat-option [value]=\"'1'\">\n                        Neurology\n                      </mat-option>\n                      <mat-option [value]=\"'2'\">\n                        Orthopedics\n                      </mat-option>\n                      <mat-option [value]=\"'3'\">\n                        Gynaecology\n                      </mat-option>\n                      <mat-option [value]=\"'4'\">\n                        Microbiology\n                      </mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"docForm.get('department').hasError('required')\">\n                      Select Any Department\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Address</mat-label>\n                    <textarea matInput formControlName=\"address\"></textarea>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Email</mat-label>\n                    <input matInput formControlName=\"email\" required>\n                    <mat-error *ngIf=\"docForm.get('email').hasError('email') && docForm.get('email').touched\">\n                      Please enter a valid email address\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Date Of Birth</mat-label>\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"dob\" required>\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker></mat-datepicker>\n                    <mat-error *ngIf=\"docForm.get('dob').hasError('required')\">\n                      Please select date\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Education</mat-label>\n                    <textarea matInput formControlName=\"education\"></textarea>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Upload Image</mat-label>\n                    <ngx-mat-file-input formControlName=\"uploadImg\">\n                    </ngx-mat-file-input>\n                    <mat-icon matSuffix>face</mat-icon>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                  <button class=\"btn-space\" [disabled]=\"!docForm.valid \" mat-raised-button\n                    color=\"primary\">Submit</button>\n                  <button type=\"button\" mat-button>Cancel</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\nimport { DoctorsService } from \"./doctors.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { Doctors } from \"./doctors.model\";\nimport { DataSource } from \"@angular/cdk/collections\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { BehaviorSubject, fromEvent, merge, Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { FormDialogComponent } from \"./dialogs/form-dialog/form-dialog.component\";\nimport { DeleteDialogComponent } from \"./dialogs/delete/delete.component\";\nimport { SelectionModel } from \"@angular/cdk/collections\";\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\n@Component({\n  selector: \"app-alldoctors\",\n  templateUrl: \"./alldoctors.component.html\",\n  styleUrls: [\"./alldoctors.component.sass\"],\n})\nexport class AlldoctorsComponent\n  extends UnsubscribeOnDestroyAdapter\n  implements OnInit\n{\n  displayedColumns = [\n    \"select\",\n    \"img\",\n    \"firstName\",\n    \"department\",\n    \"specialization\",\n    \"degree\",\n    \"mobile\",\n    \"email\",\n    \"joiningDate\",\n    \"actions\",\n  ];\n  exampleDatabase: DoctorsService | null;\n  dataSource: ExampleDataSource | null;\n  selection = new SelectionModel<Doctors>(true, []);\n  index: number;\n  id: number;\n  doctors: Doctors | null;\n  constructor(\n    public httpClient: HttpClient,\n    public dialog: MatDialog,\n    public doctorsService: DoctorsService,\n    private snackBar: MatSnackBar\n  ) {\n    super();\n  }\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild(\"filter\", { static: true }) filter: ElementRef;\n  ngOnInit() {\n    this.loadData();\n  }\n  refresh() {\n    this.loadData();\n  }\n  addNew() {\n    let tempDirection;\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\n      tempDirection = \"rtl\";\n    } else {\n      tempDirection = \"ltr\";\n    }\n    const dialogRef = this.dialog.open(FormDialogComponent, {\n      data: {\n        doctors: this.doctors,\n        action: \"add\",\n      },\n      direction: tempDirection,\n    });\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        // After dialog is closed we're doing frontend updates\n        // For add we're just pushing a new row inside DataServicex\n        this.exampleDatabase.dataChange.value.unshift(\n          this.doctorsService.getDialogData()\n        );\n        this.refreshTable();\n        this.showNotification(\n          \"snackbar-success\",\n          \"Add Record Successfully...!!!\",\n          \"bottom\",\n          \"center\"\n        );\n      }\n    });\n  }\n  editCall(row) {\n    this.id = row.id;\n    let tempDirection;\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\n      tempDirection = \"rtl\";\n    } else {\n      tempDirection = \"ltr\";\n    }\n    const dialogRef = this.dialog.open(FormDialogComponent, {\n      data: {\n        doctors: row,\n        action: \"edit\",\n      },\n      direction: tempDirection,\n    });\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        // When using an edit things are little different, firstly we find record inside DataService by id\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          (x: any) => x.id === this.id\n        );\n        // Then you update that record using data from dialogData (values you enetered)\n        this.exampleDatabase.dataChange.value[foundIndex] =\n          this.doctorsService.getDialogData();\n        // And lastly refresh table\n        this.refreshTable();\n        this.showNotification(\n          \"black\",\n          \"Edit Record Successfully...!!!\",\n          \"bottom\",\n          \"center\"\n        );\n      }\n    });\n  }\n  deleteItem(row) {\n    this.id = row.id;\n    let tempDirection;\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\n      tempDirection = \"rtl\";\n    } else {\n      tempDirection = \"ltr\";\n    }\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: row,\n      direction: tempDirection,\n    });\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          (x: any) => x.id === this.id\n        );\n        // for delete we use splice in order to remove single object from DataService\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\n        this.refreshTable();\n        this.showNotification(\n          \"snackbar-danger\",\n          \"Delete Record Successfully...!!!\",\n          \"bottom\",\n          \"center\"\n        );\n      }\n    });\n  }\n  private refreshTable() {\n    this.paginator._changePageSize(this.paginator.pageSize);\n  }\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.renderedData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selection.clear()\n      : this.dataSource.renderedData.forEach((row) =>\n          this.selection.select(row)\n        );\n  }\n  removeSelectedRows() {\n    const totalSelect = this.selection.selected.length;\n    this.selection.selected.forEach((item) => {\n      const index: number = this.dataSource.renderedData.findIndex(\n        (d) => d === item\n      );\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\n      this.exampleDatabase.dataChange.value.splice(index, 1);\n\n      this.refreshTable();\n      this.selection = new SelectionModel<Doctors>(true, []);\n    });\n    this.showNotification(\n      \"snackbar-danger\",\n      totalSelect + \" Record Delete Successfully...!!!\",\n      \"bottom\",\n      \"center\"\n    );\n  }\n  public loadData() {\n    this.exampleDatabase = new DoctorsService(this.httpClient);\n    this.dataSource = new ExampleDataSource(\n      this.exampleDatabase,\n      this.paginator,\n      this.sort\n    );\n    this.subs.sink = fromEvent(this.filter.nativeElement, \"keyup\").subscribe(\n      () => {\n        if (!this.dataSource) {\n          return;\n        }\n        this.dataSource.filter = this.filter.nativeElement.value;\n      }\n    );\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this.snackBar.open(text, \"\", {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName,\n    });\n  }\n}\nexport class ExampleDataSource extends DataSource<Doctors> {\n  filterChange = new BehaviorSubject(\"\");\n  get filter(): string {\n    return this.filterChange.value;\n  }\n  set filter(filter: string) {\n    this.filterChange.next(filter);\n  }\n  filteredData: Doctors[] = [];\n  renderedData: Doctors[] = [];\n  constructor(\n    public exampleDatabase: DoctorsService,\n    public paginator: MatPaginator,\n    public _sort: MatSort\n  ) {\n    super();\n    // Reset to the first page when the user changes the filter.\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\n  }\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<Doctors[]> {\n    // Listen for any changes in the base data, sorting, filtering, or pagination\n    const displayDataChanges = [\n      this.exampleDatabase.dataChange,\n      this._sort.sortChange,\n      this.filterChange,\n      this.paginator.page,\n    ];\n    this.exampleDatabase.getAllDoctors().subscribe((data) => {\n      this.exampleDatabase.dataChange.next(data.doctors)\n    });\n    return merge(...displayDataChanges).pipe(\n      map(() => {\n        // Filter data\n        this.filteredData = this.exampleDatabase.data\n          .slice()\n          .filter((doctors: Doctors) => {\n            const searchStr = (\n              doctors.firstName +\n              doctors.department +\n              doctors.specialization +\n              doctors.degree +\n              doctors.email +\n              doctors.mobile + \n              doctors.joiningDate\n            ).toLowerCase();\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\n          });\n        // Sort filtered data\n        const sortedData = this.sortData(this.filteredData.slice());\n        // Grab the page's slice of the filtered sorted data.\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        this.renderedData = sortedData.splice(\n          startIndex,\n          this.paginator.pageSize\n        );\n        return this.renderedData;\n      })\n    );\n  }\n  disconnect() {}\n  /** Returns a sorted copy of the database data. */\n  sortData(data: Doctors[]): Doctors[] {\n    if (!this._sort.active || this._sort.direction === \"\") {\n      return data;\n    }\n    return data.sort((a, b) => {\n      let propertyA: number | string = \"\";\n      let propertyB: number | string = \"\";\n      switch (this._sort.active) {\n        case \"id\":\n          [propertyA, propertyB] = [a.id, b.id];\n          break;\n        case \"firstName\":\n          [propertyA, propertyB] = [a.firstName, b.firstName];\n          break;\n        case \"department\":\n          [propertyA, propertyB] = [a.department, b.department];\n          break;\n        case \"specialization\":\n          [propertyA, propertyB] = [a.specialization, b.specialization];\n          break;\n        case \"degree\":\n          [propertyA, propertyB] = [a.degree, b.degree];\n          break;\n        case \"mobile\":\n          [propertyA, propertyB] = [a.mobile, b.mobile];\n          break;\n        case \"email\":\n          [propertyA, propertyB] = [a.email, b.email];\n          break;\n        case \"joiningDate\":\n          [propertyA, propertyB] = [a.joiningDate, b.joiningDate];\n          break;\n      }\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n      return (\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === \"asc\" ? 1 : -1)\n      );\n    });\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All Doctor'\" [items]=\"['Doctors']\" [active_item]=\"'All Doctor'\"></app-breadcrumb>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>\n                          <strong>Doctors</strong></h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\n                          aria-label=\"Search box\">\n                      </li>\n                      <li>\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\n                            <mat-icon class=\"col-white\">delete</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"icon-button-demo\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"icon-button-demo\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\n                <!-- Checkbox Column -->\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n                <!-- ID Column -->\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"img\">\n                  <mat-header-cell mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-5'\"> Image\n                  </mat-header-cell>\n                  <mat-cell mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-5\"> <img\n                      [src]=\"row.img\" />\n                  </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"firstName\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>First Name</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.firstName}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"department\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Department</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.department}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"specialization\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Specialization</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.specialization}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"degree\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Degree</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.degree}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"mobile\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Mobile</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.mobile}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"email\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.email}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"joiningDate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Joining Date</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.joiningDate}}</mat-cell>\n                </ng-container>\n                <!-- actions -->\n                <ng-container matColumnDef=\"actions\">\n                  <mat-header-cell class=\"pr-0\" *matHeaderCellDef>Actions</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\n                    <button mat-icon-button (click)=\"$event.stopPropagation()\" (click)=\"editCall(row)\"\n                      class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                    </button>\n                    <button mat-icon-button (click)=\"$event.stopPropagation()\" (click)=\"deleteItem(row)\"\n                      class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\n                  [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n              </mat-table>\n              <!-- Loading spinner -->\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\n                No results\n              </div>\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\n              </mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { Component, Inject } from \"@angular/core\";\nimport { DoctorsService } from \"../../doctors.service\";\n@Component({\n  selector: \"app-delete\",\n  templateUrl: \"./delete.component.html\",\n  styleUrls: [\"./delete.component.sass\"],\n})\nexport class DeleteDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public doctorsService: DoctorsService\n  ) {}\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  confirmDelete(): void {\n    this.doctorsService.deleteDoctors(this.data.id);\n  }\n}\n","<div class=\"container\">\n  <h3 mat-dialog-title>Are you sure?</h3>\n  <div mat-dialog-content>\n    <ul class=\"clearfix\">\n      <li>\n        <p><span class=\"font-weight-bold\"> Name: </span>{{data.name}}</p>\n      </li>\n      <li>\n        <p><span class=\"font-weight-bold\"> Department: </span>{{ data.department }}</p>\n      </li>\n      <li>\n        <p>\n          <span class=\"font-weight-bold\">Mobile: </span>{{data.mobile}}\n        </p>\n      </li>\n    </ul>\n  </div>\n  <div mat-dialog-actions class=\"mb-1\">\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\n      Delete\n    </button>\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n  </div>\n</div>\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { Component, Inject } from \"@angular/core\";\nimport { DoctorsService } from \"../../doctors.service\";\nimport {\n  FormControl,\n  Validators,\n  FormGroup,\n  FormBuilder,\n} from \"@angular/forms\";\nimport { Doctors } from \"../../doctors.model\";\nimport { formatDate } from \"@angular/common\";\n@Component({\n  selector: \"app-form-dialog\",\n  templateUrl: \"./form-dialog.component.html\",\n  styleUrls: [\"./form-dialog.component.sass\"],\n})\nexport class FormDialogComponent {\n  action: string;\n  dialogTitle: string;\n  doctorsForm: FormGroup;\n  doctors: Doctors;\n  constructor(\n    public dialogRef: MatDialogRef<FormDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public doctorsService: DoctorsService,\n    private fb: FormBuilder\n  ) {\n    // Set the defaults\n    this.action = data.action;\n    if (this.action === \"edit\") {\n      this.dialogTitle = data.doctors.name;\n      this.doctors = data.doctors;\n    } else {\n      this.dialogTitle = \"New Doctors\";\n      this.doctors = new Doctors({});\n    }\n    this.doctorsForm = this.createContactForm();\n  }\n  formControl = new FormControl(\"\", [\n    Validators.required,\n    // Validators.email,\n  ]);\n  getErrorMessage() {\n    return this.formControl.hasError(\"required\")\n      ? \"Required field\"\n      : this.formControl.hasError(\"email\")\n      ? \"Not a valid email\"\n      : \"\";\n  }\n  createContactForm(): FormGroup {\n    return this.fb.group({\n      id: [this.doctors.id],\n      img: [this.doctors.img],\n      firstName: [this.doctors.firstName],\n      email: [this.doctors.email],\n      specialization: [this.doctors.specialization],\n      mobile: [this.doctors.mobile],\n      department: [this.doctors.department],\n      degree: [this.doctors.degree],\n      joiningDate: [this.doctors.joiningDate],\n      // joiningDate: [\n      //   formatDate(this.doctors.joiningDate, \"dd-MM-yyyy\", \"en\"),\n      //   [Validators.required],\n      // ]\n    });\n  }\n  submit() {\n    // emppty stuff\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  public confirmAdd(): void {\n    this.doctorsService.addDoctors(this.doctorsForm.getRawValue());\n  }\n}\n","<div class=\"addContainer\">\n  <div class=\"modalHeader\">\n    <div class=\"editRowModal\">\n      <div class=\"modalHeader clearfix\">\n        <img [src]='doctors.img' alt=\"avatar\">\n        <div class=\"modal-about\">\n          <div class=\"font-weight-bold p-t-5 msl-3 font-17\">\n            {{dialogTitle}}</div>\n        </div>\n      </div>\n    </div>\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n  <div mat-dialog-content>\n    <form class=\"register-form m-4\" [formGroup]=\"doctorsForm\" (ngSubmit)=\"submit\">\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Name</mat-label>\n            <input matInput formControlName=\"name\" required>\n            <mat-icon matSuffix>face</mat-icon>\n            <mat-error *ngIf=\"doctorsForm.get('name').hasError('required')\">\n              Name is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>department</mat-label>\n            <input matInput formControlName=\"department\" required>\n            <mat-icon matSuffix>business_center</mat-icon>\n            <mat-error *ngIf=\"doctorsForm.get('department').hasError('required')\">\n              Department is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Specialization</mat-label>\n            <input matInput formControlName=\"specialization\" required>\n            <mat-icon matSuffix>flag</mat-icon>\n            <mat-error *ngIf=\"doctorsForm.get('specialization').hasError('required')\">\n              Specialization is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Degree</mat-label>\n            <input matInput formControlName=\"degree\" required>\n            <mat-icon matSuffix>school</mat-icon>\n            <mat-error *ngIf=\"doctorsForm.get('degree').hasError('required')\">\n              Department is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Mobile</mat-label>\n            <input matInput formControlName=\"mobile\" type=\"number\">\n            <mat-icon matSuffix>phone</mat-icon>\n            <mat-error *ngIf=\"doctorsForm.get('mobile').hasError('required')\">\n              Mobile is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Email</mat-label>\n            <input matInput formControlName=\"email\" required>\n            <mat-icon matSuffix>email</mat-icon>\n            <mat-error *ngIf=\"doctorsForm.get('email').hasError('required') || doctorsForm.get('email').touched\">\n              Please enter a valid email address\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Joining date</mat-label>\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"date\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n            <mat-error *ngIf=\"doctorsForm.get('date').hasError('required')\">\n              Please select date\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n          <div class=\"example-button-row\">\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!doctorsForm.valid\"\n              [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { formatDate } from \"@angular/common\";\nexport class Doctors {\n  id: string;\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  role: string;\n  gender: string;\n  mobile: string;\n  designation: string;\n  department: string;\n  dateOfBirth: string;\n  age: number;\n  address: string;\n  education: string;\n  img: string;\n  specialization: string;\n  degree: string;\n  joiningDate: string;\n  constructor(doctors) {\n    {\n      // this.id = doctors.id || this.getRandomID();\n      this.id = doctors.id;\n      this.email = doctors.email;\n      this.password = doctors.password;\n      this.firstName = doctors.firstName;\n      this.lastName = doctors.lastName;\n      this.role = doctors.role;\n      this.gender = doctors.gender;\n      this.mobile = doctors.mobile;\n      this.designation = doctors.designation;\n      this.dateOfBirth = doctors.dateOfBirth;\n      this.age = doctors.age;\n      this.address = doctors.address;\n      this.education = doctors.education;\n      this.specialization = doctors.specialization;\n      this.degree = doctors.degree;\n      this.joiningDate = doctors.joiningDate;\n      this.img = doctors.img || \"assets/images/user/user1.jpg\";\n    }\n  }\n  public getRandomID(): string {\n    const S4 = () => {\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n    };\n    return S4() + S4();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { Doctors } from \"./doctors.model\";\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\nimport { environment } from \"src/environments/environment\";\n@Injectable()\nexport class DoctorsService extends UnsubscribeOnDestroyAdapter {\n  private readonly API_URL = \"assets/data/doctors.json\";\n  isTblLoading = false;\n  dataChange: BehaviorSubject<Doctors[]> = new BehaviorSubject<Doctors[]>([]);\n  // Temporarily stores data from dialogs\n  dialogData: any;\n  constructor(private httpClient: HttpClient) {\n    super();\n  }\n  get data(): Doctors[] {\n    return this.dataChange.value;\n  }\n  getDialogData() {\n    return this.dialogData;\n  }\n  /** CRUD METHODS */\n  getAllDoctors(): Observable<any> {\n    return this.httpClient.post<Doctors[]>(`${environment.clinivaAuthUrl}/doctors`, {\n      role: \"\"\n    })\n    // .subscribe(\n    //   (data) => {\n    //     this.isTblLoading = false;\n    //     this.dataChange.next(data);\n    //   },\n    //   (error: HttpErrorResponse) => {\n    //     this.isTblLoading = false;\n    //     console.log(error.name + \" \" + error.message);\n    //   }\n    // );\n  }\n  addDoctors(doctors: Doctors): void {\n    this.dialogData = doctors;\n\n    /*  this.httpClient.post(this.API_URL, doctors).subscribe(data => {\n      this.dialogData = doctors;\n      },\n      (err: HttpErrorResponse) => {\n     // error code here\n    });*/\n  }\n  updateDoctors(doctors: Doctors): void {\n    this.dialogData = doctors;\n\n    /* this.httpClient.put(this.API_URL + doctors.id, doctors).subscribe(data => {\n      this.dialogData = doctors;\n    },\n    (err: HttpErrorResponse) => {\n      // error code here\n    }\n  );*/\n  }\n  deleteDoctors(id: number): void {\n    console.log(id);\n\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\n      console.log(id);\n      },\n      (err: HttpErrorResponse) => {\n         // error code here\n      }\n    );*/\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n@Component({\n  selector: \"app-doctor-profile\",\n  templateUrl: \"./doctor-profile.component.html\",\n  styleUrls: [\"./doctor-profile.component.sass\"],\n})\nexport class DoctorProfileComponent implements OnInit {\n  constructor() {}\n  ngOnInit(): void {}\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Profile'\" [items]=\"['Doctors']\" [active_item]=\"'Profile'\"></app-breadcrumb>\n    </div>\n    <!-- Your content goes here  -->\n    <div class=\"row clearfix\">\n      <div class=\"col-lg-4 col-md-12\">\n        <div class=\"card\">\n          <div class=\"m-b-20\">\n            <div class=\"contact-grid\">\n              <div class=\"profile-header bg-dark\">\n                <div class=\"user-name\">DR. John Smith</div>\n                <div class=\"name-center\">Senior Doctor</div>\n              </div>\n              <img src=\"assets/images/user/usrbig3.jpg\" class=\"user-img\" alt=\"\">\n              <p>\n                456, Estern evenue, Courtage area,\n                <br />New York\n              </p>\n              <div>\n                <span class=\"phone\">\n                  <i class=\"material-icons\">phone</i>264-625-2583</span>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-4\">\n                  <h5>564</h5>\n                  <small>Following</small>\n                </div>\n                <div class=\"col-4\">\n                  <h5>18k</h5>\n                  <small>Followers</small>\n                </div>\n                <div class=\"col-4\">\n                  <h5>565</h5>\n                  <small>Post</small>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"card\">\n          <mat-tab-group mat-align-tabs=\"start\">\n            <mat-tab label=\"About\">\n              <div class=\"p-4\">\n                <p class=\"text-default\">Lorem Ipsum is simply dummy text of the printing and\n                  typesetting industry. Lorem Ipsum has\n                  been the industry's standard dummy text ever since the 1500s, when an unknown\n                  printer\n                  took a galley of type and scrambled it to make a type specimen book. It has\n                  survived\n                  not only five centuries, but also the leap into electronic typesetting, remaining\n                  essentially\n                  unchanged.</p>\n                <small class=\"text-muted\">Email address: </small>\n                <p>john@gmail.com</p>\n                <hr>\n                <small class=\"text-muted\">Phone: </small>\n                <p>+91 1234567890</p>\n                <hr>\n              </div>\n            </mat-tab>\n            <mat-tab label=\"Skills\">\n              <ul class=\"list-unstyled p-4\">\n                <li>\n                  <div>OPD</div>\n                  <div class=\"progress skill-progress m-b-20\">\n                    <div class=\"progress-bar l-bg-green width-per-45\" role=\"progressbar\" aria-valuenow=\"45\"\n                      aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                  </div>\n                </li>\n                <li>\n                  <div>Operations</div>\n                  <div class=\"progress skill-progress m-b-20\">\n                    <div class=\"progress-bar l-bg-orange width-per-38\" role=\"progressbar\" aria-valuenow=\"38\"\n                      aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                  </div>\n                </li>\n                <li>\n                  <div>Patient Visit</div>\n                  <div class=\"progress skill-progress m-b-20\">\n                    <div class=\"progress-bar l-bg-cyan width-per-39\" role=\"progressbar\" aria-valuenow=\"39\"\n                      aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                  </div>\n                </li>\n                <li>\n                  <div>RND</div>\n                  <div class=\"progress skill-progress m-b-20\">\n                    <div class=\"progress-bar l-bg-purple width-per-70\" role=\"progressbar\" aria-valuenow=\"70\"\n                      aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                  </div>\n                </li>\n              </ul>\n            </mat-tab>\n          </mat-tab-group>\n        </div>\n      </div>\n      <div class=\"col-lg-8 col-md-12\">\n        <div class=\"card\">\n          <mat-tab-group>\n            <mat-tab>\n              <ng-template mat-tab-label>\n                <mat-icon class=\"example-tab-icon msr-2\">face</mat-icon>\n                About Me\n              </ng-template>\n              <div class=\"col-lg-12 col-md-12 col-sm-12\">\n                <div class=\"project_widget\">\n                  <div class=\"header\">\n                    <h2><strong>About</strong></h2>\n                  </div>\n                  <div class=\"body\">\n                    <div class=\"row\">\n                      <div class=\"col-md-3 col-6 b-r\">\n                        <strong>Full Name</strong>\n                        <br>\n                        <p class=\"text-muted\">Emily Smith</p>\n                      </div>\n                      <div class=\"col-md-3 col-6 b-r\">\n                        <strong>Mobile</strong>\n                        <br>\n                        <p class=\"text-muted\">(123) 456 7890</p>\n                      </div>\n                      <div class=\"col-md-3 col-6 b-r\">\n                        <strong>Email</strong>\n                        <br>\n                        <p class=\"text-muted\">johndeo@example.com</p>\n                      </div>\n                      <div class=\"col-md-3 col-6\">\n                        <strong>Location</strong>\n                        <br>\n                        <p class=\"text-muted\">India</p>\n                      </div>\n                    </div>\n                    <p class=\"m-t-30\">Completed my graduation in Arts from the well known and\n                      renowned institution\n                      of India – SARDAR PATEL ARTS COLLEGE, BARODA in 2000-01, which was\n                      affiliated\n                      to M.S. University. I ranker in University exams from the same\n                      university\n                      from 1996-01.</p>\n                    <p>Worked as Professor and Head of the department at Sarda Collage, Rajkot,\n                      Gujarat\n                      from 2003-2015 </p>\n                    <p>Lorem Ipsum is simply dummy text of the printing and typesetting\n                      industry. Lorem\n                      Ipsum has been the industry's standard dummy text ever since the 1500s,\n                      when\n                      an unknown printer took a galley of type and scrambled it to make a\n                      type\n                      specimen book. It has survived not only five centuries, but also the\n                      leap\n                      into electronic typesetting, remaining essentially unchanged.</p>\n                    <br>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-lg-12 col-md-12 col-sm-12\">\n                <div class=\"project_widget\">\n                  <div class=\"header\">\n                    <h2><strong>Education</strong></h2>\n                  </div>\n                  <div class=\"body\">\n                    <ul>\n                      <li>M.B.B.S.,Gujarat University, Ahmedabad,India.</li>\n                      <li>M.S.,Gujarat University, Ahmedabad, India.</li>\n                      <li>SPINAL FELLOWSHIP Dr. John Adam, Allegimeines Krakenhaus, Schwerin,\n                        Germany.</li>\n                      <li>Fellowship in Endoscopic Spine Surgery Phoenix, USA.</li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-lg-12 col-md-12 col-sm-12\">\n                <div class=\"project_widget\">\n                  <div class=\"header\">\n                    <h2><strong>Experience</strong></h2>\n                  </div>\n                  <div class=\"body\">\n                    <ul>\n                      <li>One year rotatory internship from April-2009 to march-2010 at B. J.\n                        Medical College, Ahmedabad.</li>\n                      <li>Three year residency at V.S. General Hospital as a resident in\n                        orthopedics from April - 2008 to April - 2011.</li>\n                      <li>I have worked as a part time physiotherapist in Apang manav mandal from\n                        1st june 2004 to 31st jan 2005. </li>\n                      <li>Clinical and Research fellowship in Scoliosis at Shaurashtra University\n                        and Medical Centre (KUMC) , Krishna Hospital , Rajkot from April 2013 to\n                        June 2013. </li>\n                      <li>2.5 Years Worked at Mahatma Gandhi General Hospital, Surendranagar.\n                      </li>\n                      <li>Consultant Orthopedics Surgeon Jalna 2 years. </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-lg-12 col-md-12 col-sm-12\">\n                <div class=\"project_widget\">\n                  <div class=\"header\">\n                    <h2><strong>Conferences, Cources &amp; Workshop Attended</strong></h2>\n                  </div>\n                  <div class=\"body\">\n                    <ul>\n                      <li>Lorem Ipsum is simply dummy text of the printing and typesetting\n                        industry.\n                      </li>\n                      <li>Lorem Ipsum is simply dummy text of the printing and typesetting\n                        industry.\n                      </li>\n                      <li>Lorem Ipsum is simply dummy text of the printing and typesetting\n                        industry.\n                      </li>\n                      <li>Lorem Ipsum is simply dummy text of the printing and typesetting\n                        industry.\n                      </li>\n                      <li>Lorem Ipsum is simply dummy text of the printing and typesetting\n                        industry.\n                      </li>\n                      <li>Lorem Ipsum is simply dummy text of the printing and typesetting\n                        industry.\n                      </li>\n                      <li>Lorem Ipsum is simply dummy text of the printing and typesetting\n                        industry.\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </mat-tab>\n\n            <mat-tab>\n              <ng-template mat-tab-label>\n                <mat-icon class=\"example-tab-icon msr-2\">settings</mat-icon>\n                Settings\n              </ng-template>\n              <div class=\"header\">\n                <h2>\n                  <strong>Security</strong> Settings</h2>\n              </div>\n              <div class=\"body\">\n                <div class=\"example-container\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                    <mat-label>Username</mat-label>\n                    <input matInput>\n                  </mat-form-field>\n                  <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                    <mat-label>Current Password</mat-label>\n                    <input matInput type=\"password\">\n                  </mat-form-field>\n                  <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                    <mat-label>New Password</mat-label>\n                    <input matInput type=\"password\">\n                  </mat-form-field>\n                </div>\n                <button mat-raised-button color=\"primary\">Save</button>\n              </div>\n              <div class=\"header\">\n                <h2>\n                  <strong>Account</strong> Settings</h2>\n              </div>\n              <div class=\"body\">\n                <div class=\"row clearfix\">\n                  <div class=\"col-lg-6 col-md-12\">\n                    <div class=\"form-group\">\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                        <mat-label>First Name</mat-label>\n                        <input matInput>\n                      </mat-form-field>\n                    </div>\n                  </div>\n                  <div class=\"col-lg-6 col-md-12\">\n                    <div class=\"form-group\">\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                        <mat-label>Last Name</mat-label>\n                        <input matInput>\n                      </mat-form-field>\n                    </div>\n                  </div>\n                  <div class=\"col-lg-4 col-md-12\">\n                    <div class=\"form-group\">\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                        <mat-label>City</mat-label>\n                        <input matInput>\n                      </mat-form-field>\n                    </div>\n                  </div>\n                  <div class=\"col-lg-4 col-md-12\">\n                    <div class=\"form-group\">\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                        <mat-label>Email</mat-label>\n                        <input matInput>\n                      </mat-form-field>\n                    </div>\n                  </div>\n                  <div class=\"col-lg-4 col-md-12\">\n                    <div class=\"form-group\">\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                        <mat-label>Country</mat-label>\n                        <input matInput>\n                      </mat-form-field>\n                    </div>\n                  </div>\n                  <div class=\"col-md-12\">\n                    <div class=\"form-group\">\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                        <mat-label>Address</mat-label>\n                        <textarea matInput></textarea>\n                      </mat-form-field>\n                    </div>\n                  </div>\n                  <div class=\"col-md-12\">\n                    <div class=\"form-group\">\n                      <mat-checkbox class=\"example-margin\">Profile Visibility For Everyone\n                      </mat-checkbox>\n                    </div>\n                    <div class=\"form-group\">\n                      <mat-checkbox class=\"example-margin\">New task notifications\n                      </mat-checkbox>\n                    </div>\n                    <div class=\"form-group\">\n                      <mat-checkbox class=\"example-margin\">New friend request notifications\n                      </mat-checkbox>\n                    </div>\n                  </div>\n                  <div class=\"col-md-12\">\n                    <button mat-raised-button color=\"primary\">Save Changes</button>\n                  </div>\n                </div>\n              </div>\n            </mat-tab>\n          </mat-tab-group>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { AlldoctorsComponent } from \"./alldoctors/alldoctors.component\";\nimport { AddDoctorComponent } from \"./add-doctor/add-doctor.component\";\nimport { EditDoctorComponent } from \"./edit-doctor/edit-doctor.component\";\nimport { DoctorProfileComponent } from \"./doctor-profile/doctor-profile.component\";\nimport { Page404Component } from \"./../../authentication/page404/page404.component\";\nconst routes: Routes = [\n  {\n    path: \"allDoctors\",\n    component: AlldoctorsComponent,\n  },\n  {\n    path: \"add-doctor\",\n    component: AddDoctorComponent,\n  },\n  {\n    path: \"edit-doctor\",\n    component: EditDoctorComponent,\n  },\n  {\n    path: \"doctor-profile\",\n    component: DoctorProfileComponent,\n  },\n  { path: \"**\", component: Page404Component },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DoctorsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { DoctorsRoutingModule } from \"./doctors-routing.module\";\nimport { AlldoctorsComponent } from \"./alldoctors/alldoctors.component\";\nimport { DeleteDialogComponent } from \"./alldoctors/dialogs/delete/delete.component\";\nimport { FormDialogComponent } from \"./alldoctors/dialogs/form-dialog/form-dialog.component\";\nimport { AddDoctorComponent } from \"./add-doctor/add-doctor.component\";\nimport { EditDoctorComponent } from \"./edit-doctor/edit-doctor.component\";\nimport { DoctorProfileComponent } from \"./doctor-profile/doctor-profile.component\";\nimport { MaterialFileInputModule } from \"ngx-material-file-input\";\nimport { MatTabsModule } from \"@angular/material/tabs\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { DoctorsService } from \"./alldoctors/doctors.service\";\nimport { ComponentsModule } from \"src/app/shared/components/components.module\";\nimport { SharedModule } from \"./../../shared/shared.module\";\n\n@NgModule({\n  declarations: [\n    AlldoctorsComponent,\n    DeleteDialogComponent,\n    FormDialogComponent,\n    AddDoctorComponent,\n    EditDoctorComponent,\n    DoctorProfileComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDialogModule,\n    MatSortModule,\n    MatToolbarModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatTabsModule,\n    MatCheckboxModule,\n    MaterialFileInputModule,\n    DoctorsRoutingModule,\n    MatProgressSpinnerModule,\n    ComponentsModule,\n    SharedModule,\n  ],\n  providers: [DoctorsService],\n})\nexport class DoctorsModule {}\n","import { Component } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n@Component({\n  selector: \"app-edit-doctor\",\n  templateUrl: \"./edit-doctor.component.html\",\n  styleUrls: [\"./edit-doctor.component.sass\"],\n})\nexport class EditDoctorComponent {\n  docForm: FormGroup;\n  formdata = {\n    first: \"Pooja\",\n    last: \"Sarma\",\n    gender: \"Female\",\n    mobile: \"123456789\",\n    password: \"123\",\n    conformPassword: \"123\",\n    email: \"test@example.com\",\n    designation: \"Sr. Doctor\",\n    department: \"2\",\n    address: \"101, Elanxa, New Yourk\",\n    dob: \"1987-02-17T14:22:18Z\",\n    education: \"M.B.B.S.\",\n  };\n  constructor(private fb: FormBuilder) {\n    this.docForm = this.createContactForm();\n  }\n  onSubmit() {\n    console.log(\"Form Value\", this.docForm.value);\n  }\n  createContactForm(): FormGroup {\n    return this.fb.group({\n      first: [\n        this.formdata.first,\n        [Validators.required, Validators.pattern(\"[a-zA-Z]+\")],\n      ],\n      last: [this.formdata.last],\n      gender: [this.formdata.gender, [Validators.required]],\n      mobile: [this.formdata.mobile, [Validators.required]],\n      password: [this.formdata.password],\n      conformPassword: [this.formdata.conformPassword],\n      email: [\n        this.formdata.email,\n        [Validators.required, Validators.email, Validators.minLength(5)],\n      ],\n      designation: [this.formdata.designation],\n      department: [this.formdata.department],\n      address: [this.formdata.address],\n      dob: [this.formdata.dob, [Validators.required]],\n      education: [this.formdata.education],\n    });\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Edit Doctor'\" [items]=\"['Doctors']\" [active_item]=\"'Edit Doctor'\"></app-breadcrumb>\n    </div>\n    <div class=\"row clearfix\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"header\">\n            <h2>Edit Doctor</h2>\n\n          </div>\n          <div class=\"body\">\n            <form class=\"m-4\" [formGroup]=\"docForm\" (ngSubmit)=\"onSubmit()\">\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>First name</mat-label>\n                    <input matInput formControlName=\"first\" required>\n                    <mat-error *ngIf=\"docForm.get('first').hasError('required')\">\n                      First name is required\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Last name</mat-label>\n                    <input matInput formControlName=\"last\">\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Gender</mat-label>\n                    <mat-select formControlName=\"gender\" required>\n                      <mat-option [value]=\"'Male'\">\n                        Male\n                      </mat-option>\n                      <mat-option [value]=\"'Female'\">\n                        Female\n                      </mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"docForm.get('gender').hasError('required')\">\n                      Gender is required\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Mobile</mat-label>\n                    <input matInput formControlName=\"mobile\" type=\"number\" required>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Password</mat-label>\n                    <input matInput formControlName=\"password\" type=\"password\" required>\n                    <mat-error *ngIf=\"docForm.get('password').hasError('required')\">\n                      password is required\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Re-Enter Password</mat-label>\n                    <input matInput formControlName=\"conformPassword\" type=\"password\" required>\n                    <mat-error *ngIf=\"docForm.get('conformPassword').hasError('required')\">\n                      Re-Enter password is required\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Designation</mat-label>\n                    <input matInput formControlName=\"designation\">\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Select Department</mat-label>\n                    <mat-select formControlName=\"department\" required>\n                      <mat-option [value]=\"'1'\">\n                        Neurology\n                      </mat-option>\n                      <mat-option [value]=\"'2'\">\n                        Orthopedics\n                      </mat-option>\n                      <mat-option [value]=\"'3'\">\n                        Gynaecology\n                      </mat-option>\n                      <mat-option [value]=\"'4'\">\n                        Microbiology\n                      </mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"docForm.get('department').hasError('required')\">\n                      Select Any Department\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Address</mat-label>\n                    <textarea matInput formControlName=\"address\"></textarea>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Email</mat-label>\n                    <input matInput formControlName=\"email\" required>\n                    <mat-error *ngIf=\"docForm.get('email').hasError('email') && docForm.get('email').touched\">\n                      Please enter a valid email address\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Date Of Birth</mat-label>\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"dob\" required>\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker></mat-datepicker>\n                    <mat-error *ngIf=\"docForm.get('dob').hasError('required')\">\n                      Please select date\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Education</mat-label>\n                    <textarea matInput formControlName=\"education\"></textarea>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                  <button class=\"btn-space\" [disabled]=\"!docForm.valid \" mat-raised-button\n                    color=\"primary\">Submit</button>\n                  <button type=\"button\" mat-button>Cancel</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { DOCUMENT } from '@angular/common';\nimport * as i1 from '@angular/cdk/platform';\n\n// Boilerplate for applying mixins to MatToolbar.\n/** @docs-private */\nconst _MatToolbarBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\nclass MatToolbarRow {\n}\nMatToolbarRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatToolbarRow, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatToolbarRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatToolbarRow, selector: \"mat-toolbar-row\", host: { classAttribute: \"mat-toolbar-row\" }, exportAs: [\"matToolbarRow\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatToolbarRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-toolbar-row',\n                    exportAs: 'matToolbarRow',\n                    host: { 'class': 'mat-toolbar-row' },\n                }]\n        }] });\nclass MatToolbar extends _MatToolbarBase {\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._checkToolbarMixedModes();\n            this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n        }\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     */\n    _checkToolbarMixedModes() {\n        if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            // Check if there are any other DOM nodes that can display content but aren't inside of\n            // a <mat-toolbar-row> element.\n            const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n                .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n                .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\n                .some(node => !!(node.textContent && node.textContent.trim()));\n            if (isCombinedUsage) {\n                throwToolbarMixedModesError();\n            }\n        }\n    }\n}\nMatToolbar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatToolbar, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component });\nMatToolbar.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatToolbar, selector: \"mat-toolbar\", inputs: { color: \"color\" }, host: { properties: { \"class.mat-toolbar-multiple-rows\": \"_toolbarRows.length > 0\", \"class.mat-toolbar-single-row\": \"_toolbarRows.length === 0\" }, classAttribute: \"mat-toolbar\" }, queries: [{ propertyName: \"_toolbarRows\", predicate: MatToolbarRow, descendants: true }], exportAs: [\"matToolbar\"], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatToolbar, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-toolbar', exportAs: 'matToolbar', inputs: ['color'], host: {\n                        'class': 'mat-toolbar',\n                        '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                        '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    }, propDecorators: { _toolbarRows: [{\n                type: ContentChildren,\n                args: [MatToolbarRow, { descendants: true }]\n            }] } });\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatToolbarModule {\n}\nMatToolbarModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatToolbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatToolbarModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatToolbarModule, declarations: [MatToolbar, MatToolbarRow], imports: [MatCommonModule], exports: [MatToolbar, MatToolbarRow, MatCommonModule] });\nMatToolbarModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatToolbarModule, imports: [[MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatToolbarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                    declarations: [MatToolbar, MatToolbarRow],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n"],"names":["i0","Directive","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","ContentChildren","NgModule","mixinColor","MatCommonModule","DOCUMENT","i1","_MatToolbarBase","constructor","_elementRef","MatToolbarRow","ɵfac","ɵdir","type","args","selector","exportAs","host","MatToolbar","elementRef","_platform","document","_document","ngAfterViewInit","isBrowser","_checkToolbarMixedModes","_toolbarRows","changes","subscribe","length","ngDevMode","isCombinedUsage","Array","from","nativeElement","childNodes","filter","node","classList","contains","nodeType","COMMENT_NODE","some","textContent","trim","throwToolbarMixedModesError","ElementRef","Platform","ɵcmp","inputs","changeDetection","OnPush","encapsulation","None","template","styles","undefined","decorators","descendants","Error","MatToolbarModule","ɵmod","ɵinj","imports","exports","declarations"],"sourceRoot":"webpack:///"}